pub const STATEMENTS: &[crate::LoggingStatement] = &[

	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/public.php" , line : 64usize , placeholders : & [] , exception : Some ("RemoteException") , regex : "^Service unavailable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/public.php" , line : 70usize , placeholders : & [] , exception : Some ("RemoteException") , regex : "^Path not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/public.php" , line : 80usize , placeholders : & [] , exception : Some ("RemoteException") , regex : "^Path not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/public.php" , line : 95usize , placeholders : & ["$app"] , exception : Some ("RemoteException") , regex : "^App not installed: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/public.php" , line : 108usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/public.php" , line : 112usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/LostController.php" , line : 160usize , placeholders : & ["$error"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/core/Controller/LostController.php" , line : 180usize , placeholders : & ["$this->l10n->t('Password reset is disabled')"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/core/Controller/LostController.php" , line : 186usize , placeholders : & ["$this->l10n->t('Unsupported email length (>255)')"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/core/Controller/LostController.php" , line : 200usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Could not send password reset email: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/core/Controller/LostController.php" , line : 202usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/core/Controller/LostController.php" , line : 224usize , placeholders : & [] , exception : None , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/LostController.php" , line : 237usize , placeholders : & [] , exception : Some ("OCP\\HintException") , regex : "^Password too long$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/LostController.php" , line : 241usize , placeholders : & [] , exception : Some ("Exception") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/core/Controller/LostController.php" , line : 252usize , placeholders : & ["$e->getHint()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/core/Controller/LostController.php" , line : 256usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/LostController.php" , line : 273usize , placeholders : & ["$input"] , exception : Some ("OC\\Core\\Exception\\ResetPasswordException") , regex : "^Could not send reset e\\-mail since there is no email for username (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/LostController.php" , line : 279usize , placeholders : & [] , exception : Some ("OC\\Core\\Exception\\ResetPasswordException") , regex : "^Could not send reset e\\-mail, 5 of them were already sent in the last 30 minutes$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/core/Controller/LostController.php" , line : 318usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/LostController.php" , line : 329usize , placeholders : & ["$user->getUID()"] , exception : Some ("OC\\Core\\Exception\\ResetPasswordException") , regex : "^Account (.*) is disabled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/LostController.php" , line : 343usize , placeholders : & ["$input"] , exception : Some ("OC\\Core\\Exception\\ResetPasswordException") , regex : "^Could not find user (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/WhatsNewController.php" , line : 71usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Acting user cannot be resolved$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/WhatsNewController.php" , line : 119usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Acting user cannot be resolved$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/core/Controller/GuestAvatarController.php" , line : 72usize , placeholders : & ["$size"] , exception : None , regex : "^Avatar requested in deprecated size (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/core/Controller/GuestAvatarController.php" , line : 77usize , placeholders : & ["$size"] , exception : None , regex : "^Avatar requested in deprecated size (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/core/Controller/GuestAvatarController.php" , line : 92usize , placeholders : & [] , exception : None , regex : "^error while creating guest avatar$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/ProfileApiController.php" , line : 78usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^Account does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/ProfileApiController.php" , line : 82usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^People can only edit their own visibility settings$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/ProfileApiController.php" , line : 90usize , placeholders : & ["$paramId"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^Account does not have a profile parameter with ID: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/core/Controller/TextProcessingApiController.php" , line : 86usize , placeholders : & ["$typeClass"] , exception : None , regex : "^Could not find (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/CollaborationResourcesController.php" , line : 71usize , placeholders : & [] , exception : Some ("OCP\\Collaboration\\Resources\\CollectionException") , regex : "^Not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/core/Controller/CollaborationResourcesController.php" , line : 285usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/core/Controller/CollaborationResourcesController.php" , line : 301usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/CollaborationResourcesController.php" , line : 313usize , placeholders : & [] , exception : Some ("OCP\\Collaboration\\Resources\\CollectionException") , regex : "^Can not access collection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/core/Controller/CollaborationResourcesController.php" , line : 334usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/CollaborationResourcesController.php" , line : 346usize , placeholders : & [] , exception : Some ("OCP\\Collaboration\\Resources\\ResourceException") , regex : "^Can not access resource$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/ClientFlowLoginV2Controller.php" , line : 220usize , placeholders : & [] , exception : Some ("OCP\\Authentication\\Exceptions\\InvalidTokenException") , regex : "^login name does not match$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/ClientFlowLoginV2Controller.php" , line : 360usize , placeholders : & [] , exception : Some ("OC\\Core\\Exception\\LoginFlowV2NotFoundException") , regex : "^Login token not set in session$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/OCMController.php" , line : 80usize , placeholders : & [] , exception : Some ("Exception") , regex : "^loaded class does not implements OCP\\\\Capabilities\\\\ICapability$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/core/Controller/OCMController.php" , line : 92usize , placeholders : & [] , exception : None , regex : "^issue during OCM discovery request$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/core/Controller/AvatarController.php" , line : 94usize , placeholders : & ["$size"] , exception : None , regex : "^Avatar requested in deprecated size (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/core/Controller/AvatarController.php" , line : 99usize , placeholders : & ["$size"] , exception : None , regex : "^Avatar requested in deprecated size (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/core/Controller/AvatarController.php" , line : 146usize , placeholders : & ["$size"] , exception : None , regex : "^Avatar requested in deprecated size (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/core/Controller/AvatarController.php" , line : 151usize , placeholders : & ["$size"] , exception : None , regex : "^Avatar requested in deprecated size (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/core/Controller/AvatarController.php" , line : 240usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/core/Controller/AvatarController.php" , line : 277usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/core/Controller/AvatarController.php" , line : 294usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/core/Controller/AvatarController.php" , line : 309usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/core/Controller/AvatarController.php" , line : 379usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/core/Controller/WebAuthnController.php" , line : 68usize , placeholders : & [] , exception : None , regex : "^Starting WebAuthn login$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/core/Controller/WebAuthnController.php" , line : 70usize , placeholders : & [] , exception : None , regex : "^Converting login name to UID$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/core/Controller/WebAuthnController.php" , line : 77usize , placeholders : & ["$uid"] , exception : None , regex : "^Got UID: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/core/Controller/WebAuthnController.php" , line : 93usize , placeholders : & [] , exception : None , regex : "^Validating WebAuthn login$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/core/Controller/WebAuthnController.php" , line : 96usize , placeholders : & [] , exception : None , regex : "^Trying to finish WebAuthn login without session data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/core/Controller/TwoFactorChallengeController.php" , line : 203usize , placeholders : & ["$uid" , "$ip"] , exception : None , regex : "^Two\\-factor challenge failed: (.*) \\(Remote IP: (.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/core/Controller/SearchController.php" , line : 56usize , placeholders : & ["$result->type" , "$result->id"] , exception : None , regex : "^Skipping search result due to invalid encoding: \\{type: (.*), id: (.*)\\}$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/AppPasswordController.php" , line : 82usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^You cannot request an new apppassword with an apppassword$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/AppPasswordController.php" , line : 88usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/AppPasswordController.php" , line : 133usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^no app password in use$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/AppPasswordController.php" , line : 141usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^could not remove apptoken$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/AppPasswordController.php" , line : 161usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^no app password in use$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/AppPasswordController.php" , line : 169usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^could not rotate apptoken$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Controller/ClientFlowLoginController.php" , line : 339usize , placeholders : & [] , exception : Some ("OCP\\Authentication\\Exceptions\\InvalidTokenException") , regex : "^login name does not match$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/core/Controller/SetupController.php" , line : 126usize , placeholders : & [] , exception : None , regex : "^Autoconfig file found, setting up Nextcloud…$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/core/ajax/update.php" , line : 195usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/core/BackgroundJobs/GenerateMetadataJob.php" , line : 112usize , placeholders : & ["$node->getId()"] , exception : None , regex : "^Error while generating metadata for fileid (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/core/BackgroundJobs/BackgroundCleanupUpdaterBackupsJob.php" , line : 59usize , placeholders : & ["$backupFolderPath"] , exception : None , regex : "^(.*) exists \\- start to clean it up$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/core/BackgroundJobs/BackgroundCleanupUpdaterBackupsJob.php" , line : 82usize , placeholders : & ["json_encode($dirList)"] , exception : None , regex : "^List of all directories that will be deleted: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/core/BackgroundJobs/BackgroundCleanupUpdaterBackupsJob.php" , line : 85usize , placeholders : & ["$dir"] , exception : None , regex : "^Removing (.*) \\.\\.\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/core/BackgroundJobs/BackgroundCleanupUpdaterBackupsJob.php" , line : 88usize , placeholders : & [] , exception : None , regex : "^Cleanup finished$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/core/BackgroundJobs/BackgroundCleanupUpdaterBackupsJob.php" , line : 90usize , placeholders : & ["$backupFolderPath"] , exception : None , regex : "^Could not find updater directory (.*) \\- cleanup step not needed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Service/LoginFlowV2Service.php" , line : 66usize , placeholders : & [] , exception : Some ("OC\\Core\\Exception\\LoginFlowV2NotFoundException") , regex : "^Invalid token$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Service/LoginFlowV2Service.php" , line : 74usize , placeholders : & [] , exception : Some ("OC\\Core\\Exception\\LoginFlowV2NotFoundException") , regex : "^Token not yet ready$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Service/LoginFlowV2Service.php" , line : 85usize , placeholders : & [] , exception : Some ("OC\\Core\\Exception\\LoginFlowV2NotFoundException") , regex : "^Apptoken could not be decrypted$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Service/LoginFlowV2Service.php" , line : 100usize , placeholders : & [] , exception : Some ("OC\\Core\\Exception\\LoginFlowV2NotFoundException") , regex : "^Login token invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Service/LoginFlowV2Service.php" , line : 221usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Could not initialize keys$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Service/LoginFlowV2Service.php" , line : 226usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^OpenSSL reported a problem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/core/Service/LoginFlowV2Service.php" , line : 241usize , placeholders : & ["implode(', ', $errors)"] , exception : None , regex : "^Something is wrong with your openssl setup: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Middleware/TwoFactorMiddleware.php" , line : 81usize , placeholders : & [] , exception : Some ("OC\\Authentication\\Exceptions\\TwoFactorAuthRequiredException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Middleware/TwoFactorMiddleware.php" , line : 111usize , placeholders : & [] , exception : Some ("OC\\Authentication\\Exceptions\\UserAlreadyLoggedInException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Middleware/TwoFactorMiddleware.php" , line : 125usize , placeholders : & [] , exception : Some ("OC\\Authentication\\Exceptions\\TwoFactorAuthRequiredException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Middleware/TwoFactorMiddleware.php" , line : 131usize , placeholders : & [] , exception : Some ("OC\\Authentication\\Exceptions\\UserAlreadyLoggedInException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Notification/CoreNotifier.php" , line : 68usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Notification/CoreNotifier.php" , line : 94usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid subject$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Db/ProfileConfig.php" , line : 105usize , placeholders : & ["$paramId"] , exception : Some ("OCP\\Profile\\ParameterDoesNotExistException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Db/LoginFlowV2Mapper.php" , line : 102usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\Db\\DoesNotExistException") , regex : "^Token expired$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Encryption/EncryptAll.php" , line : 93usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Server side encryption is not enabled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Encryption/ChangeKeyStorageRoot.php" , line : 122usize , placeholders : & [] , exception : Some ("Exception") , regex : "^New root folder doesn't exist\\. Please create the folder or check the permissions and try again\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Encryption/ChangeKeyStorageRoot.php" , line : 131usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Can't access the new root folder\\. Please check the permissions and make sure that the folder is in your data folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Encryption/ChangeKeyStorageRoot.php" , line : 242usize , placeholders : & ["$path"] , exception : Some ("Exception") , regex : "^new folder '(.*)' already exists$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Db/ConvertType.php" , line : 129usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Converting to SQLite \\(sqlite3\\) is currently not supported\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Db/ConvertType.php" , line : 134usize , placeholders : & ["sprintf(\n\t\t\t\t'Can not convert from %1$s to %1$s.',\n\t\t\t\t$type\n\t\t\t)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Db/ConvertType.php" , line : 144usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The \\-\\-clear\\-schema option is not supported when converting to Oracle \\(oci\\)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Db/ConvertType.php" , line : 183usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^This command is temporarily disabled \\(until the next maintenance release\\)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Db/Migrations/GenerateCommand.php" , line : 238usize , placeholders : & ["$path"] , exception : Some ("Symfony\\Component\\Console\\Exception\\RuntimeException") , regex : "^Failed to generate new migration step\\. Could not write to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Db/Migrations/GenerateCommand.php" , line : 250usize , placeholders : & ["$directory"] , exception : Some ("RuntimeException") , regex : "^Could not create folder \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Db/Migrations/GenerateCommand.php" , line : 256usize , placeholders : & ["$directory"] , exception : Some ("RuntimeException") , regex : "^Could not create folder \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/SetupChecks.php" , line : 59usize , placeholders : & ["$requiredField"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid rich object, (.*) field is missing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/core/Command/App/Update.php" , line : 108usize , placeholders : & ["$appId"] , exception : None , regex : "^Failure during update of app \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/core/Command/App/Remove.php" , line : 91usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/core/Command/App/Remove.php" , line : 104usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/FilesMetadata/Get.php" , line : 101usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Config/System/SetConfig.php" , line : 90usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^Config parameter does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Config/System/SetConfig.php" , line : 111usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Non\\-numeric value specified$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Config/System/SetConfig.php" , line : 121usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Non\\-numeric value specified$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Config/System/SetConfig.php" , line : 145usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unable to parse value as boolean$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Config/System/SetConfig.php" , line : 163usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Config/System/SetConfig.php" , line : 189usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^Config parameter does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Config/System/DeleteConfig.php" , line : 104usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^Config parameter does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Config/System/DeleteConfig.php" , line : 107usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^Config parameter does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Config/App/SetConfig.php" , line : 99usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Only compatible with OC\\\\AppConfig as it uses internal methods$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Config/App/SetConfig.php" , line : 197usize , placeholders : & [] , exception : Some ("OCP\\Exceptions\\AppConfigIncorrectTypeException") , regex : "^Value is not an integer$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Config/App/SetConfig.php" , line : 204usize , placeholders : & [] , exception : Some ("OCP\\Exceptions\\AppConfigIncorrectTypeException") , regex : "^Value is not a float$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Config/App/SetConfig.php" , line : 215usize , placeholders : & [] , exception : Some ("OCP\\Exceptions\\AppConfigIncorrectTypeException") , regex : "^Value is not a boolean, please use 'true' or 'false'$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Config/App/SetConfig.php" , line : 222usize , placeholders : & [] , exception : Some ("OCP\\Exceptions\\AppConfigIncorrectTypeException") , regex : "^Value is not an array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Config/Import.php" , line : 124usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^The file must contain a valid json array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Config/Import.php" , line : 142usize , placeholders : & ["implode(', ', $additionalKeys)"] , exception : Some ("UnexpectedValueException") , regex : "^Found invalid entries in root: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Config/Import.php" , line : 145usize , placeholders : & ["implode(', ', $this->validRootKeys)"] , exception : Some ("UnexpectedValueException") , regex : "^At least one key of the following is expected: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Config/Import.php" , line : 154usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^The system config array is not an array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Config/Import.php" , line : 162usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^The apps config array is not an array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Config/Import.php" , line : 173usize , placeholders : & ["$configName"] , exception : Some ("UnexpectedValueException") , regex : "^Invalid system config value for \"(.*)\"\\. Only arrays, bools, integers, floats, strings and null \\(delete\\) are allowed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Config/Import.php" , line : 191usize , placeholders : & ["$app" , "$name"] , exception : Some ("UnexpectedValueException") , regex : "^Invalid app config value for \"(.*)\":\"(.*)\"\\. Only integers, strings and null \\(delete\\) are allowed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/L10n/CreateJs.php" , line : 135usize , placeholders : & ["$phpFile"] , exception : Some ("UnexpectedValueException") , regex : "^PHP translation file <(.*)> does not exist\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Log/Manage.php" , line : 123usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid backend$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Log/Manage.php" , line : 156usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid log level string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Log/Manage.php" , line : 177usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid log level number$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Log/File.php" , line : 121usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Error parsing log rotation file size$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Log/File.php" , line : 124usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Log rotation file size must be non\\-negative$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/core/Command/Preview/Repair.php" , line : 259usize , placeholders : & ["$name" , "$previewName"] , exception : None , regex : "^Failed to delete preview at preview/(.*)/(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/core/Command/Preview/Repair.php" , line : 269usize , placeholders : & ["$name" , "$previewName" , "$newFoldername"] , exception : None , regex : "^Failed to move preview from preview/(.*)/(.*) to preview/(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/core/Command/Preview/Repair.php" , line : 285usize , placeholders : & ["$name"] , exception : None , regex : "^Failed to delete empty folder preview/(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/User/Setting.php" , line : 118usize , placeholders : & ["$uid"] , exception : Some ("InvalidArgumentException") , regex : "^The user \"(.*)\" does not exist\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/User/Setting.php" , line : 125usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The \"default\\-value\" option can only be used when specifying a key\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/User/Setting.php" , line : 129usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value argument can only be used when specifying a key\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/User/Setting.php" , line : 132usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value argument can not be used together with \"default\\-value\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/User/Setting.php" , line : 135usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The \"update\\-only\" option can only be used together with \"value\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/User/Setting.php" , line : 139usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The \"delete\" option can only be used when specifying a key\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/User/Setting.php" , line : 142usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The \"delete\" option can not be used together with \"default\\-value\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/User/Setting.php" , line : 145usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The \"delete\" option can not be used together with \"value\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/User/Setting.php" , line : 148usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The \"error\\-if\\-not\\-exists\" option can only be used together with \"delete\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/User/AuthTokens/Delete.php" , line : 71usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\RuntimeException") , regex : "^Option \\-\\-last\\-used\\-before cannot be used with \\[<id>\\]$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/User/AuthTokens/Delete.php" , line : 78usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\RuntimeException") , regex : "^Not enough arguments\\. Specify the token <id> or use the \\-\\-last\\-used\\-before option\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/User/AuthTokens/Delete.php" , line : 92usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\RuntimeException") , regex : "^Invalid date format\\. Acceptable formats are: ISO8601 \\(w/o fractions\\), \"YYYY\\-MM\\-DD\" and Unix time in seconds\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Info/File.php" , line : 131usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Base.php" , line : 155usize , placeholders : & [] , exception : Some ("OC\\Core\\Command\\InterruptedException") , regex : "^Command interrupted by user$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Maintenance/Install.php" , line : 126usize , placeholders : & ["$db" , "implode(\", \", $supportedDatabases)"] , exception : Some ("InvalidArgumentException") , regex : "^Database <(.*)> is not supported\\. (.*) are supported\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Maintenance/Install.php" , line : 153usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Database account not provided\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Maintenance/Install.php" , line : 156usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Database name not provided\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/core/Command/Maintenance/Install.php" , line : 178usize , placeholders : & ["$adminEmail" , "$adminLogin"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid e\\-mail\\-address <(.*)> for <(.*)>\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/viewer/composer/composer/ClassLoader.php" , line : 256usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/viewer/composer/composer/ClassLoader.php" , line : 311usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/recommendations/lib/Controller/RecommendationController.php" , line : 59usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Not logged in$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/recommendations/lib/Controller/RecommendationController.php" , line : 78usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Not logged in$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/recommendations/lib/Controller/SettingsController.php" , line : 59usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Not logged in$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/recommendations/lib/Controller/SettingsController.php" , line : 74usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Not logged in$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/vendor/hexogen/kdtree/src/Point.php" , line : 35usize , placeholders : & ["$d" , "$this->length"] , exception : Some ("OutOfRangeException") , regex : "^\\$d = (.*)  should be between 0 and number of (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/vendor/hexogen/kdtree/src/Point.php" , line : 50usize , placeholders : & [] , exception : Some ("Hexogen\\KDTree\\Exception\\ValidationException") , regex : "^\\$dValues should be not empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/vendor/hexogen/kdtree/src/Point.php" , line : 55usize , placeholders : & [] , exception : Some ("Hexogen\\KDTree\\Exception\\ValidationException") , regex : "^\\$dValues is not a simple array list$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/vendor/hexogen/kdtree/src/ItemList.php" , line : 25usize , placeholders : & [] , exception : Some ("Hexogen\\KDTree\\Exception\\ValidationException") , regex : "^\\$dimensions should be bigger than 0$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/vendor/hexogen/kdtree/src/ItemList.php" , line : 78usize , placeholders : & ["$this->dimensions"] , exception : Some ("Hexogen\\KDTree\\Exception\\ValidationException") , regex : "^\\$dValues number dimensions should be equal to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/vendor/hexogen/kdtree/src/NearestSearch.php" , line : 75usize , placeholders : & ["$this->tree->getDimensionCount()"] , exception : Some ("Hexogen\\KDTree\\Exception\\ValidationException") , regex : "^point dimensions count should be equal to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/vendor/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/vendor/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/vendor/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/vendor/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/vendor/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/vendor/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/vendor/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/photos/lib/Controller/PageController.php" , line : 138usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Command/AlbumAddCommand.php" , line : 74usize , placeholders : & ["$userString"] , exception : Some ("Exception") , regex : "^User (.*) was not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Command/AlbumAddCommand.php" , line : 88usize , placeholders : & ["$albumString"] , exception : Some ("Exception") , regex : "^Album (.*) was not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Command/AlbumCreateCommand.php" , line : 70usize , placeholders : & ["$userString"] , exception : Some ("Exception") , regex : "^User (.*) was not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Command/AlbumCreateCommand.php" , line : 76usize , placeholders : & ["$albumString"] , exception : Some ("Exception") , regex : "^Album (.*) already exists and cannot be created\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Command/UpdateReverseGeocodingFilesCommand.php" , line : 53usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Places is disabled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/RootCollection.php" , line : 65usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/PublicRootCollection.php" , line : 71usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/PublicRootCollection.php" , line : 87usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/PublicRootCollection.php" , line : 94usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Unable to find public album$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/PhotosHome.php" , line : 58usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/PhotosHome.php" , line : 70usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename this folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/PhotosHome.php" , line : 74usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Not allowed to create files in this folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/PhotosHome.php" , line : 81usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to create folders in this folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/PhotosHome.php" , line : 94usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/CollectionPhoto.php" , line : 49usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Can't rename photos trough this api$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/CollectionPhoto.php" , line : 64usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Photo is a folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/CollectionPhoto.php" , line : 67usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Photo not found for user$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Place/PlacePhoto.php" , line : 53usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Cannot remove from a place$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Place/PlacePhoto.php" , line : 66usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Photo not found for user$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Place/PlacePhoto.php" , line : 76usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Photo is a folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Place/PlacesHome.php" , line : 57usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Place/PlacesHome.php" , line : 68usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename this folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Place/PlacesHome.php" , line : 72usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Not allowed to create files in this folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Place/PlacesHome.php" , line : 76usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Not allowed to create folder in this folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Place/PlacesHome.php" , line : 84usize , placeholders : & ["$name"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Place (.*) does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Place/PlaceRoot.php" , line : 55usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Not allowed to delete a place collection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Place/PlaceRoot.php" , line : 66usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Cannot change the place collection name$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Place/PlaceRoot.php" , line : 75usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Cannot create a file in a place collection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Place/PlaceRoot.php" , line : 82usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Not allowed to create directories in this folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Place/PlaceRoot.php" , line : 105usize , placeholders : & ["$name"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^File (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Place/PlaceRoot.php" , line : 125usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No children found for place$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/PublicAlbumPhoto.php" , line : 32usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Deleting photos from a public album is not allowed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/PublicAlbumPhoto.php" , line : 37usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Changing a photo from a public album is not allowed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/AlbumPhoto.php" , line : 63usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Photo not found for user$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/AlbumPhoto.php" , line : 72usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Photo is a folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/SharedAlbumRoot.php" , line : 68usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Not allowed to rename a shared album$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/SharedAlbumRoot.php" , line : 73usize , placeholders : & ["$sourceId"] , exception : Some ("Sabre\\DAV\\Exception\\Conflict") , regex : "^File (.*) is already in the folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/SharedAlbumRoot.php" , line : 98usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Not allowed to collaborators to a public album$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/PublicAlbumRoot.php" , line : 36usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Not allowed to delete a public album$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/PublicAlbumRoot.php" , line : 43usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Not allowed to rename a public album$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/PublicAlbumRoot.php" , line : 47usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Not allowed to copy into a public album$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/PublicAlbumRoot.php" , line : 58usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Not allowed to create a file in a public album$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/PublicAlbumRoot.php" , line : 62usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Not allowed to add a file to a public album$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/PublicAlbumRoot.php" , line : 72usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Not allowed to collaborators a public album$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/PublicAlbumRoot.php" , line : 89usize , placeholders : & ["$name"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^(.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/SharedAlbumsHome.php" , line : 65usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Not allowed to create folders in this folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/AlbumsHome.php" , line : 67usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/AlbumsHome.php" , line : 78usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename this folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/AlbumsHome.php" , line : 82usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Not allowed to create files in this folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/AlbumsHome.php" , line : 99usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/AlbumRoot.php" , line : 106usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Conflict") , regex : "^The destination exists and is not a folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/AlbumRoot.php" , line : 119usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Could not create file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/AlbumRoot.php" , line : 127usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Not allowed to create directories in this folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/AlbumRoot.php" , line : 142usize , placeholders : & ["$name"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^(.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/AlbumRoot.php" , line : 160usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^The source is not a file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/AlbumRoot.php" , line : 167usize , placeholders : & ["$uid"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Can't add file to album, only files from (.*) can be added$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Sabre/Album/AlbumRoot.php" , line : 175usize , placeholders : & ["$sourceId"] , exception : Some ("Sabre\\DAV\\Exception\\Conflict") , regex : "^File (.*) is already in the folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Album/AlbumMapper.php" , line : 266usize , placeholders : & [] , exception : Some ("OCA\\Photos\\Exception\\AlreadyInAlbumException") , regex : "^File already in album$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Album/AlbumMapper.php" , line : 381usize , placeholders : & ["$row['collaborator_type']"] , exception : Some ("Exception") , regex : "^Invalid collaborator type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Album/AlbumMapper.php" , line : 453usize , placeholders : & ["$collaborator['id']"] , exception : Some ("Exception") , regex : "^Unknown collaborator: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Album/AlbumMapper.php" , line : 458usize , placeholders : & ["$collaborator['id']"] , exception : Some ("Exception") , regex : "^Unknown collaborator: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Album/AlbumMapper.php" , line : 465usize , placeholders : & ["$collaborator['type']"] , exception : Some ("Exception") , regex : "^Invalid collaborator type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/DB/Place/PlaceMapper.php" , line : 95usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/DB/Place/PlaceMapper.php" , line : 161usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/photos/lib/Listener/AlbumsManagementEventListener.php" , line : 45usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/photos/lib/Listener/OriginalDateTimeMetadataProvider.php" , line : 59usize , placeholders : & ["{date}" , "{path}"] , exception : None , regex : "^Failed to parse date (.*) for file (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/photos/lib/Listener/ExifMetadataProvider.php" , line : 87usize , placeholders : & ["$node->getId()"] , exception : None , regex : "^Failed to extract metadata for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Listener/ExifMetadataProvider.php" , line : 131usize , placeholders : & ["json_encode($coordinates)"] , exception : Some ("Exception") , regex : "^Invalid coordinate format: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/photos/lib/Listener/ExifMetadataProvider.php" , line : 174usize , placeholders : & [] , exception : None , regex : "^EXIF entry ignored as it is too large$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Service/UserConfigService.php" , line : 58usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Unknown user config key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Service/ReverseGeoCoderService.php" , line : 107usize , placeholders : & ["$res"] , exception : Some ("Exception") , regex : "^Fail to unzip place file: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/photos/lib/Service/ReverseGeoCoderService.php" , line : 126usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Failed to write csv line to tmp stream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_backupcodes/lib/Notifications/Notifier.php" , line : 71usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_backupcodes/lib/Notifications/Notifier.php" , line : 93usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_backupcodes/lib/Activity/Provider.php" , line : 61usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_backupcodes/lib/Activity/Provider.php" , line : 77usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/twofactor_backupcodes/lib/Listener/ActivityPublisher.php" , line : 57usize , placeholders : & [] , exception : None , regex : "^Could not publish backup code creation activity$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_backupcodes/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_backupcodes/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_backupcodes/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_backupcodes/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_backupcodes/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_backupcodes/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_backupcodes/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/contactsinteraction/lib/Card.php" , line : 64usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotImplemented") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/contactsinteraction/lib/Card.php" , line : 71usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotImplemented") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/contactsinteraction/lib/Card.php" , line : 106usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotImplemented") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/contactsinteraction/lib/Card.php" , line : 120usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotImplemented") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/contactsinteraction/lib/Listeners/ContactInteractionListener.php" , line : 65usize , placeholders : & [] , exception : None , regex : "^Contact interaction event has no user identifier set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/contactsinteraction/lib/Listeners/ContactInteractionListener.php" , line : 70usize , placeholders : & [] , exception : None , regex : "^Ignoring contact interaction with self$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/contactsinteraction/lib/AddressBook.php" , line : 60usize , placeholders : & [] , exception : Some ("Exception") , regex : "^This addressbook is immutable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/contactsinteraction/lib/AddressBook.php" , line : 68usize , placeholders : & [] , exception : Some ("Exception") , regex : "^This addressbook is immutable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/contactsinteraction/lib/AddressBook.php" , line : 86usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Contact does not exist: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/contactsinteraction/lib/AddressBook.php" , line : 133usize , placeholders : & [] , exception : Some ("Exception") , regex : "^This addressbook is immutable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/contactsinteraction/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/contactsinteraction/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/contactsinteraction/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/contactsinteraction/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/contactsinteraction/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/contactsinteraction/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/contactsinteraction/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Controller/AWorkflowController.php" , line : 122usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Controller/AWorkflowController.php" , line : 124usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/workflowengine/lib/Controller/AWorkflowController.php" , line : 126usize , placeholders : & [] , exception : None , regex : "^Error when inserting flow$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Controller/AWorkflowController.php" , line : 127usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^An internal error occurred$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Controller/AWorkflowController.php" , line : 151usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Controller/AWorkflowController.php" , line : 153usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/workflowengine/lib/Controller/AWorkflowController.php" , line : 155usize , placeholders : & ["$id"] , exception : None , regex : "^Error when updating flow with id (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Controller/AWorkflowController.php" , line : 156usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^An internal error occurred$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Controller/AWorkflowController.php" , line : 171usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Controller/AWorkflowController.php" , line : 173usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/workflowengine/lib/Controller/AWorkflowController.php" , line : 175usize , placeholders : & ["$id"] , exception : None , regex : "^Error when deleting flow with id (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Controller/AWorkflowController.php" , line : 176usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^An internal error occurred$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Controller/UserWorkflowsController.php" , line : 119usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^User not logged in$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/FileSystemTags.php" , line : 97usize , placeholders : & ["$this->l->t('The given operator is invalid')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/FileSystemTags.php" , line : 109usize , placeholders : & ["$this->l->t('The given tag id is invalid')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/FileSystemTags.php" , line : 114usize , placeholders : & ["$this->l->t('The given tag id is invalid')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/FileSystemTags.php" , line : 116usize , placeholders : & ["$this->l->t('The given tag id is invalid')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/FileSystemTags.php" , line : 166usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Should not happen: Storage is instance of GroupFolderStorage but no group folder storage found while unwrapping\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/UserGroupMembership.php" , line : 86usize , placeholders : & ["$this->l->t('The given operator is invalid')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/UserGroupMembership.php" , line : 90usize , placeholders : & ["$this->l->t('The given group does not exist')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/FileSize.php" , line : 84usize , placeholders : & ["$this->l->t('The given operator is invalid')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/FileSize.php" , line : 88usize , placeholders : & ["$this->l->t('The given file size is invalid')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/RequestRemoteAddress.php" , line : 77usize , placeholders : & ["$this->l->t('The given operator is invalid')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/RequestRemoteAddress.php" , line : 82usize , placeholders : & ["$this->l->t('The given IP range is invalid')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/RequestRemoteAddress.php" , line : 87usize , placeholders : & ["$this->l->t('The given IP range is not valid for IPv4')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/RequestRemoteAddress.php" , line : 90usize , placeholders : & ["$this->l->t('The given IP range is not valid for IPv4')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/RequestRemoteAddress.php" , line : 94usize , placeholders : & ["$this->l->t('The given IP range is not valid for IPv6')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/RequestRemoteAddress.php" , line : 97usize , placeholders : & ["$this->l->t('The given IP range is not valid for IPv6')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/RequestTime.php" , line : 102usize , placeholders : & ["$this->l->t('The given operator is invalid')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/RequestTime.php" , line : 108usize , placeholders : & ["$this->l->t('The given time span is invalid')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/RequestTime.php" , line : 114usize , placeholders : & ["$this->l->t('The given start time is invalid')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/RequestTime.php" , line : 119usize , placeholders : & ["$this->l->t('The given end time is invalid')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/TFileCheck.php" , line : 63usize , placeholders : & ["{class}"] , exception : Some ("UnexpectedValueException") , regex : "^Expected Node subject for File entity, got (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/AbstractStringCheck.php" , line : 89usize , placeholders : & ["$this->l->t('The given operator is invalid')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Check/AbstractStringCheck.php" , line : 94usize , placeholders : & ["$this->l->t('The given regular expression is invalid')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/workflowengine/lib/AppInfo/Application.php" , line : 104usize , placeholders : & ["{name}" , "{event}" , "{entity}" , "{operation}"] , exception : None , regex : "^Cannot handle event (.*) of (.*) against entity (.*) and operation (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/workflowengine/lib/Service/Logger.php" , line : 63usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/workflowengine/lib/Service/Logger.php" , line : 72usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/workflowengine/lib/Service/Logger.php" , line : 85usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/workflowengine/lib/Service/Logger.php" , line : 96usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/workflowengine/lib/Service/Logger.php" , line : 107usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/workflowengine/lib/Service/Logger.php" , line : 119usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/workflowengine/lib/Service/Logger.php" , line : 132usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/workflowengine/lib/Service/Logger.php" , line : 144usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/workflowengine/lib/Service/Logger.php" , line : 158usize , placeholders : & ["$context['level']"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Service/RuleMatcher.php" , line : 98usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^This method must not be called more than once$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Service/RuleMatcher.php" , line : 105usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^This method must not be called more than once$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Service/RuleMatcher.php" , line : 112usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^This method must not be called more than once$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Service/RuleMatcher.php" , line : 119usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Entity was not set yet$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Service/RuleMatcher.php" , line : 126usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Operation is not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Service/RuleMatcher.php" , line : 233usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Must set file info before running the check$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Service/RuleMatcher.php" , line : 243usize , placeholders : & ["$this->l->t('Check %s is invalid or does not exist', $check['class'])"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Manager.php" , line : 256usize , placeholders : & ["$this->l->t('Operation #%s does not exist', [$id])"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Manager.php" , line : 372usize , placeholders : & [] , exception : Some ("DomainException") , regex : "^Target operation not within scope$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Manager.php" , line : 413usize , placeholders : & [] , exception : Some ("DomainException") , regex : "^Target operation not within scope$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Manager.php" , line : 447usize , placeholders : & ["$this->l->t('Entity %s does not exist', [$entity])"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Manager.php" , line : 451usize , placeholders : & ["$this->l->t('Entity %s is invalid', [$entity])"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Manager.php" , line : 456usize , placeholders : & ["$this->l->t('No events are chosen.')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Manager.php" , line : 469usize , placeholders : & ["$this->l->t('Entity %s has no event %s', [$entity, array_shift($diff)])"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Manager.php" , line : 488usize , placeholders : & ["$this->l->t('Operation %s does not exist', [$class])"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Manager.php" , line : 492usize , placeholders : & ["$this->l->t('Operation %s is invalid', [$class])"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Manager.php" , line : 496usize , placeholders : & ["$this->l->t('Operation %s is invalid', [$class])"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Manager.php" , line : 502usize , placeholders : & ["$this->l->t('At least one check needs to be provided')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Manager.php" , line : 506usize , placeholders : & ["$this->l->t('The provided operation data is too long')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Manager.php" , line : 513usize , placeholders : & ["$this->l->t('Invalid check provided')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Manager.php" , line : 520usize , placeholders : & ["$this->l->t('Check %s does not exist', [$class])"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Manager.php" , line : 524usize , placeholders : & ["$this->l->t('Check %s is invalid', [$class])"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Manager.php" , line : 530usize , placeholders : & ["$this->l->t('Check %s is not allowed with this entity', [$class])"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Manager.php" , line : 534usize , placeholders : & ["$this->l->t('The provided check value is too long')"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Manager.php" , line : 576usize , placeholders : & ["$this->l->t('Check #%s does not exist', $missingCheck)"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/workflowengine/lib/Manager.php" , line : 693usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/workflowengine/lib/Manager.php" , line : 707usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/workflowengine/lib/Manager.php" , line : 729usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Helper/ScopeContext.php" , line : 48usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid scope$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Helper/ScopeContext.php" , line : 54usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^user scope requires a user id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Entity/File.php" , line : 173usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Entity/File.php" , line : 186usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/lib/Entity/File.php" , line : 195usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/workflowengine/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/lib/Activity.php" , line : 90usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/lib/Activity.php" , line : 170usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/lib/Activity.php" , line : 228usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/lib/Activity.php" , line : 262usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/sharebymail/lib/ShareByMailProvider.php" , line : 121usize , placeholders : & ["sprintf($message, $share->getNode()->getName(), $shareWith)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/lib/ShareByMailProvider.php" , line : 122usize , placeholders : & ["$message_t"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/lib/ShareByMailProvider.php" , line : 165usize , placeholders : & ["$this->l->t(\"We cannot send you the auto-generated password. Please set a valid email address in your personal settings and try again.\")"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/sharebymail/lib/ShareByMailProvider.php" , line : 275usize , placeholders : & ["$share->getSharedWith()"] , exception : None , regex : "^Failed to send share by mail\\. Got an invalid email address (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/sharebymail/lib/ShareByMailProvider.php" , line : 293usize , placeholders : & [] , exception : None , regex : "^Failed to send share by mail\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/sharebymail/lib/ShareByMailProvider.php" , line : 300usize , placeholders : & [] , exception : None , regex : "^Failed to send share by mail\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/lib/ShareByMailProvider.php" , line : 305usize , placeholders : & [] , exception : Some ("OCP\\HintException") , regex : "^Failed to send share by mail$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/lib/ShareByMailProvider.php" , line : 525usize , placeholders : & ["$this->l->t(\"We cannot send you the auto-generated password. Please set a valid email address in your personal settings and try again.\")"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/lib/ShareByMailProvider.php" , line : 732usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\GenericShareException") , regex : "^not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/lib/ShareByMailProvider.php" , line : 807usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/lib/ShareByMailProvider.php" , line : 813usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/lib/ShareByMailProvider.php" , line : 899usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^Share not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/lib/ShareByMailProvider.php" , line : 905usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^Share not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/lib/ShareByMailProvider.php" , line : 984usize , placeholders : & [] , exception : Some ("OC\\Share20\\Exception\\InvalidShare") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/sharebymail/lib/ShareByMailProvider.php" , line : 990usize , placeholders : & [] , exception : Some ("OC\\Share20\\Exception\\InvalidShare") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/comments/lib/Activity/Provider.php" , line : 59usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/comments/lib/Activity/Provider.php" , line : 82usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/comments/lib/Activity/Provider.php" , line : 102usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/comments/lib/Activity/Provider.php" , line : 134usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/comments/lib/Search/Result.php" , line : 90usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Path not inside visible section$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/comments/lib/Search/Result.php" , line : 102usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Comment section not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/comments/lib/Search/LegacyProvider.php" , line : 107usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^File not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/comments/lib/Notification/Notifier.php" , line : 78usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/comments/lib/Notification/Notifier.php" , line : 84usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Comment not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/comments/lib/Notification/Notifier.php" , line : 100usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unsupported comment object$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/comments/lib/Notification/Notifier.php" , line : 105usize , placeholders : & [] , exception : Some ("OCP\\Notification\\AlreadyProcessedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/comments/lib/Notification/Notifier.php" , line : 148usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid subject$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/comments/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/comments/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/comments/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/comments/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/comments/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/comments/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/comments/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/activity/lib/FilesHooks.php" , line : 1168usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/activity/lib/DigestSender.php" , line : 90usize , placeholders : & [] , exception : None , regex : "^Exception occurred while sending user digest email$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/activity/lib/DigestSender.php" , line : 190usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/activity/lib/NotificationGenerator.php" , line : 111usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/activity/lib/NotificationGenerator.php" , line : 116usize , placeholders : & [] , exception : Some ("OCP\\Notification\\AlreadyProcessedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/activity/lib/NotificationGenerator.php" , line : 119usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/activity/lib/ViewInfoCache.php" , line : 77usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^No entries returned$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/activity/lib/ViewInfoCache.php" , line : 94usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^No entries returned$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/activity/lib/AppInfo/Application.php" , line : 83usize , placeholders : & [] , exception : Some ("OC\\DatabaseException") , regex : "^Invalid database type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/activity/lib/Data.php" , line : 176usize , placeholders : & [] , exception : Some ("OutOfBoundsException") , regex : "^Invalid user$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/activity/lib/Data.php" , line : 282usize , placeholders : & [] , exception : Some ("OutOfBoundsException") , regex : "^Invalid since$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/activity/lib/Data.php" , line : 367usize , placeholders : & [] , exception : None , regex : "^Choosing chunked activity delete for MySQL/MariaDB$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/activity/lib/Data.php" , line : 371usize , placeholders : & [] , exception : None , regex : "^Choosing regular activity delete$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/activity/lib/GroupHelper.php" , line : 80usize , placeholders : & [] , exception : None , regex : "^Error while parsing activity event$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/activity/lib/GroupHelper.php" , line : 87usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/activity/lib/GroupHelper.php" , line : 102usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/activity/lib/GroupHelper.php" , line : 122usize , placeholders : & ["$event->getRichSubject()"] , exception : None , regex : "^Activity \"(.*)\" was not parsed by any provider$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/activity/lib/MailQueueHandler.php" , line : 116usize , placeholders : & ["{user}"] , exception : None , regex : "^Couldn't send notification email to user '(.*)Couldn't send notification email to user '\\{user\\}' \\(email address isn't set for that user\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/activity/lib/MailQueueHandler.php" , line : 127usize , placeholders : & ["{user}"] , exception : None , regex : "^Failed sending activity email to user '(.*)Failed sending activity email to user '\\{user\\}'\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/activity/lib/MailQueueHandler.php" , line : 130usize , placeholders : & ["{user}"] , exception : None , regex : "^Failed creating activity email for user \"(.*)Failed creating activity email for user \"\\{user\\}\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/activity/lib/MailQueueHandler.php" , line : 282usize , placeholders : & ["{user}" , "{email}"] , exception : None , regex : "^Notification for user \"(.*)\" not sent because the email address \"(.*)Notification for user \"\\{user\\}\" not sent because the email address \"\\{email\\}\" is invalid\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/activity/lib/MailQueueHandler.php" , line : 364usize , placeholders : & ["{user}"] , exception : None , regex : "^Failed sending activity email to user \"(.*)Failed sending activity email to user \"\\{user\\}\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/activity/lib/Controller/APIv2Controller.php" , line : 100usize , placeholders : & [] , exception : Some ("OCA\\Activity\\Exception\\InvalidFilterException") , regex : "^Invalid filter$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/activity/lib/Controller/APIv2Controller.php" , line : 120usize , placeholders : & [] , exception : Some ("OutOfBoundsException") , regex : "^Not logged in$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/firstrunwizard/lib/Notification/Notifier.php" , line : 92usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/firstrunwizard/lib/Notification/Notifier.php" , line : 101usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/firstrunwizard/lib/Notification/Notifier.php" , line : 122usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_reminders/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_reminders/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_reminders/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_reminders/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_reminders/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_reminders/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_reminders/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/files_reminders/lib/BackgroundJob/ScheduledNotifications.php" , line : 55usize , placeholders : & ["$reminder->getId()"] , exception : None , regex : "^Could not send notification for reminder with id (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_reminders/lib/Model/RichReminder.php" , line : 50usize , placeholders : & [] , exception : Some ("OCA\\FilesReminders\\Exception\\NodeNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_reminders/lib/Notification/Notifier.php" , line : 64usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_reminders/lib/Notification/Notifier.php" , line : 74usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_reminders/lib/Notification/Notifier.php" , line : 112usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_reminders/lib/Service/ReminderService.php" , line : 103usize , placeholders : & [] , exception : Some ("OCA\\FilesReminders\\Exception\\NodeNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_reminders/lib/Service/ReminderService.php" , line : 150usize , placeholders : & [] , exception : Some ("OCA\\FilesReminders\\Exception\\UserNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_reminders/lib/Service/ReminderService.php" , line : 168usize , placeholders : & ["$th->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_reminders/lib/Command/ListCommand.php" , line : 74usize , placeholders : & ["$uid"] , exception : None , regex : "^Unknown user <(.*)>$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_reminders/lib/Controller/ApiController.php" , line : 104usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_trashbin/lib/AppInfo/Application.php" , line : 97usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Events/BeforeNodeRestoredEvent.php" , line : 49usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Operation aborted$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Command/RestoreAllFiles.php" , line : 124usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidOptionException") , regex : "^Either specify a user_id or \\-\\-all\\-users$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Command/RestoreAllFiles.php" , line : 154usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidOptionException") , regex : "^Either specify a user_id or \\-\\-all\\-users$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Command/RestoreAllFiles.php" , line : 226usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidOptionException") , regex : "^since must be before until$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Command/RestoreAllFiles.php" , line : 242usize , placeholders : & ["$scope"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidOptionException") , regex : "^Invalid scope '(.*)'$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Command/RestoreAllFiles.php" , line : 251usize , placeholders : & ["$timestamp"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidOptionException") , regex : "^Invalid timestamp '(.*)'$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Command/CleanUp.php" , line : 83usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidOptionException") , regex : "^Either specify a user_id or \\-\\-all\\-users$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Command/CleanUp.php" , line : 114usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidOptionException") , regex : "^Either specify a user_id or \\-\\-all\\-users$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/files_trashbin/lib/Storage.php" , line : 92usize , placeholders : & ["$path"] , exception : None , regex : "^Can't move file (.*) to the trash bin, therefore it was deleted right away$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_trashbin/lib/Trashbin.php" , line : 234usize , placeholders : & [] , exception : None , regex : "^trash bin database couldn't be updated for the files owner$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_trashbin/lib/Trashbin.php" , line : 336usize , placeholders : & ["$file_path"] , exception : None , regex : "^Couldn't move (.*) to the trash bin$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_trashbin/lib/Trashbin.php" , line : 364usize , placeholders : & [] , exception : None , regex : "^trash bin database couldn't be updated$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_trashbin/lib/Trashbin.php" , line : 493usize , placeholders : & ["$user" , "$filename" , "$timestamp"] , exception : None , regex : "^trash bin database inconsistent! \\(\\$user: (.*) \\$filename: (.*), \\$timestamp: (.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Trashbin.php" , line : 517usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^Can't restore trash item because the target folder is not writable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/files_trashbin/lib/Trashbin.php" , line : 909usize , placeholders : & ["$file['name']" , "$tmp"] , exception : None , regex : "^remove \"(.*)\" \\((.*)B\\) to meet the limit of trash bin size \\(50% of available quota\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/files_trashbin/lib/Trashbin.php" , line : 940usize , placeholders : & ["$filename"] , exception : None , regex : "^Removing \"(.*)\" from trashbin failed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/files_trashbin/lib/Trashbin.php" , line : 947usize , placeholders : & ["$filename"] , exception : None , regex : "^Remove \"(.*)\" from trashbin because it exceeds max retention obligation term\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Trashbin.php" , line : 981usize , placeholders : & [] , exception : Some ("OCA\\Files_Trashbin\\Exceptions\\CopyRecursiveException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Trashbin.php" , line : 990usize , placeholders : & [] , exception : Some ("OCA\\Files_Trashbin\\Exceptions\\CopyRecursiveException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Trashbin.php" , line : 1200usize , placeholders : & [] , exception : Some ("Exception") , regex : "^View should not be null$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Trash/TrashManager.php" , line : 89usize , placeholders : & ["$fullType"] , exception : Some ("OCA\\Files_Trashbin\\Trash\\BackendNotFoundException") , regex : "^Trash backend for (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Helper.php" , line : 55usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Directory does not exists$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/UserMigration/TrashbinMigrator.php" , line : 95usize , placeholders : & ["$uid"] , exception : Some ("OCP\\UserMigration\\UserMigrationException") , regex : "^/(.*)/files_trashbin is not a folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/UserMigration/TrashbinMigrator.php" , line : 104usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\UserMigration\\UserMigrationException") , regex : "^Could not export trashbin: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/UserMigration/TrashbinMigrator.php" , line : 125usize , placeholders : & ["$uid"] , exception : Some ("OCP\\UserMigration\\UserMigrationException") , regex : "^Could not import trashbin, /(.*)/files_trashbin is not a folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/UserMigration/TrashbinMigrator.php" , line : 134usize , placeholders : & [] , exception : Some ("OCP\\UserMigration\\UserMigrationException") , regex : "^Could not import trashbin\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Sabre/AbstractTrashFolder.php" , line : 57usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Sabre/AbstractTrashFolder.php" , line : 70usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Sabre/AbstractTrashFolder.php" , line : 74usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Sabre/AbstractTrashFolder.php" , line : 78usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Sabre/RestoreFolder.php" , line : 35usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Sabre/RestoreFolder.php" , line : 39usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Sabre/RestoreFolder.php" , line : 47usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Sabre/RestoreFolder.php" , line : 55usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Sabre/TrashHome.php" , line : 56usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Sabre/TrashHome.php" , line : 65usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename this trashbin$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Sabre/TrashHome.php" , line : 69usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Not allowed to create files in the trashbin$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Sabre/TrashHome.php" , line : 73usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Not allowed to create folders in the trashbin$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Sabre/TrashHome.php" , line : 84usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Sabre/TrashRoot.php" , line : 63usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename this trashbin$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Sabre/TrashRoot.php" , line : 67usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Not allowed to create files in the trashbin$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Sabre/TrashRoot.php" , line : 71usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Not allowed to create folders in the trashbin$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Sabre/TrashRoot.php" , line : 96usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Sabre/RootCollection.php" , line : 64usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Sabre/AbstractTrashFile.php" , line : 34usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/lib/Sabre/AbstractTrashFile.php" , line : 38usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_trashbin/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/App.php" , line : 60usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Error while preparing push notification$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/Notifier/AdminNotifications.php" , line : 90usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unknown app$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/Notifier/AdminNotifications.php" , line : 219usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unknown subject$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/Handler.php" , line : 212usize , placeholders : & [] , exception : Some ("OCA\\Notifications\\Exceptions\\NotificationNotFoundException") , regex : "^No entry returned from database$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/Handler.php" , line : 218usize , placeholders : & [] , exception : Some ("OCA\\Notifications\\Exceptions\\NotificationNotFoundException") , regex : "^Could not create notification from database row$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/notifications/lib/MailNotifications.php" , line : 207usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/notifications/lib/MailNotifications.php" , line : 223usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/notifications/lib/MailNotifications.php" , line : 301usize , placeholders : & ["$notification->getApp()" , "$notification->getSubject()" , "$notification->getObjectType()" , "$notification->getObjectId()"] , exception : None , regex : "^An error occurred while preparing a notification \\((.*)\\|(.*)\\|(.*)\\|(.*)\\) for sending$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/notifications/lib/Migration/Version2011Date20220826074907.php" , line : 55usize , placeholders : & ["$count"] , exception : None , regex : "^Fixed next send of (.*) disabled users$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/notifications/lib/Push.php" , line : 353usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^JSON error while encoding push notification: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/notifications/lib/Push.php" , line : 445usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^JSON error while encoding push notification: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/notifications/lib/Push.php" , line : 456usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^JSON error while encoding push notification: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/notifications/lib/Push.php" , line : 527usize , placeholders : & ["{url}" , "{error}"] , exception : None , regex : "^Could not send notification to push server \\[(.*)\\]: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/notifications/lib/Push.php" , line : 536usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/notifications/lib/Push.php" , line : 565usize , placeholders : & ["{url}" , "{error}"] , exception : None , regex : "^Could not send notification to push server \\[(.*)\\]: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/notifications/lib/Push.php" , line : 573usize , placeholders : & ["{url}" , "{error}"] , exception : None , regex : "^Push notification sent but response was not parsable, using an outdated push proxy\\? \\[(.*)\\]: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/notifications/lib/Push.php" , line : 651usize , placeholders : & ["$error"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/Push.php" , line : 653usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Failed to encrypt message for device$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/notifications/lib/Push.php" , line : 703usize , placeholders : & ["openssl_error_string()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/Push.php" , line : 704usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Failed to encrypt message for device$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 42usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 46usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 50usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 54usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 58usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 62usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 66usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 70usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 74usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 78usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 82usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 86usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 90usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 94usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 98usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 102usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 106usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 110usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 114usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 118usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 122usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 126usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 130usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 134usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 138usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/notifications/lib/FakeUser.php" , line : 142usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federation/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federation/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federation/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federation/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federation/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federation/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federation/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/federation/lib/Controller/OCSAuthAPIController.php" , line : 138usize , placeholders : & ["$url"] , exception : None , regex : "^remote server not trusted \\((.*)\\) while requesting shared secret$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federation/lib/Controller/OCSAuthAPIController.php" , line : 139usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/federation/lib/Controller/OCSAuthAPIController.php" , line : 146usize , placeholders : & ["$url"] , exception : None , regex : "^remote server \\((.*)\\) presented lower token\\. We will initiate the exchange of the shared secret\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federation/lib/Controller/OCSAuthAPIController.php" , line : 150usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/federation/lib/Controller/OCSAuthAPIController.php" , line : 182usize , placeholders : & ["$url"] , exception : None , regex : "^remote server not trusted \\((.*)\\) while getting shared secret$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federation/lib/Controller/OCSAuthAPIController.php" , line : 183usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/federation/lib/Controller/OCSAuthAPIController.php" , line : 189usize , placeholders : & ["$url" , "$token" , "$expectedToken"] , exception : None , regex : "^remote server \\((.*)\\) didn't send a valid token \\(got \"(.*)\" but expected \"(.*)\"\\) while getting shared secret$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federation/lib/Controller/OCSAuthAPIController.php" , line : 193usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federation/lib/Controller/SettingsController.php" , line : 85usize , placeholders : & ["$message"] , exception : Some ("OCP\\HintException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federation/lib/Controller/SettingsController.php" , line : 91usize , placeholders : & ["$message"] , exception : Some ("OCP\\HintException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/federation/lib/BackgroundJob/RequestSharedSecret.php" , line : 148usize , placeholders : & ["$target"] , exception : None , regex : "^(.*) refused to ask for a shared secret\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/federation/lib/BackgroundJob/RequestSharedSecret.php" , line : 150usize , placeholders : & ["$target" , "$status" , "$e->getMessage()"] , exception : None , regex : "^(.*) responded with a (.*) containing: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/federation/lib/BackgroundJob/RequestSharedSecret.php" , line : 154usize , placeholders : & ["$target"] , exception : None , regex : "^Could not connect to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/federation/lib/BackgroundJob/RequestSharedSecret.php" , line : 157usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/federation/lib/BackgroundJob/GetSharedSecret.php" , line : 146usize , placeholders : & ["$target"] , exception : None , regex : "^(.*) refused to exchange a shared secret with you\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/federation/lib/BackgroundJob/GetSharedSecret.php" , line : 148usize , placeholders : & ["$target" , "$status" , "$e->getMessage()"] , exception : None , regex : "^(.*) responded with a (.*) containing: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/federation/lib/BackgroundJob/GetSharedSecret.php" , line : 152usize , placeholders : & ["$target"] , exception : None , regex : "^Could not connect to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/federation/lib/BackgroundJob/GetSharedSecret.php" , line : 157usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/federation/lib/BackgroundJob/GetSharedSecret.php" , line : 179usize , placeholders : & ["$target" , "$body"] , exception : None , regex : "^remote server \"(.*)\"\" does not return a valid shared secret\\. Received data: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/federation/lib/TrustedServers.php" , line : 188usize , placeholders : & [] , exception : None , regex : "^No Nextcloud server\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federation/lib/TrustedServers.php" , line : 206usize , placeholders : & [] , exception : Some ("OCP\\HintException") , regex : "^Remote server version is too low\\. 9\\.0 is required\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federation/lib/DbHandler.php" , line : 85usize , placeholders : & ["$message"] , exception : Some ("OCP\\HintException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federation/lib/DbHandler.php" , line : 117usize , placeholders : & ["$id"] , exception : Some ("Exception") , regex : "^No Server found with ID: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federation/lib/DbHandler.php" , line : 186usize , placeholders : & ["$url"] , exception : Some ("Exception") , regex : "^No token found for: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/federation/lib/Middleware/AddServerMiddleware.php" , line : 64usize , placeholders : & ["$exception->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/federation/lib/SyncJob.php" , line : 47usize , placeholders : & ["$url"] , exception : None , regex : "^Error while syncing (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/federation/lib/SyncFederationAddressBooks.php" , line : 67usize , placeholders : & ["$url"] , exception : None , regex : "^Shared secret for (.*) is null$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/federation/lib/SyncFederationAddressBooks.php" , line : 80usize , placeholders : & ["$url"] , exception : None , regex : "^Sync Token for (.*) unchanged from previous sync$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/federation/lib/SyncFederationAddressBooks.php" , line : 85usize , placeholders : & ["$url"] , exception : None , regex : "^Server sync for (.*) failed because of revoked access\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/federation/lib/SyncFederationAddressBooks.php" , line : 90usize , placeholders : & ["$url"] , exception : None , regex : "^Server sync for (.*) failed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_totp/vendor/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_totp/vendor/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_totp/vendor/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_totp/vendor/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_totp/vendor/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_totp/vendor/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_totp/vendor/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/twofactor_totp/lib/Listener/UserDeleted.php" , line : 57usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_totp/lib/Activity/Provider.php" , line : 48usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_totp/lib/Service/Totp.php" , line : 135usize , placeholders : & [] , exception : Some ("OCA\\TwoFactorTOTP\\Exception\\NoTotpSecretFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_totp/lib/Db/TotpSecretMapper.php" , line : 61usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\Db\\DoesNotExistException") , regex : "^Secret does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_totp/lib/Controller/SettingsController.php" , line : 61usize , placeholders : & [] , exception : Some ("Exception") , regex : "^user not available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_totp/lib/Controller/SettingsController.php" , line : 78usize , placeholders : & [] , exception : Some ("Exception") , regex : "^user not available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_totp/lib/Controller/SettingsController.php" , line : 99usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^code is missing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_totp/lib/Controller/SettingsController.php" , line : 106usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid TOTP state$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/twofactor_totp/lib/Controller/SettingsController.php" , line : 119usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^No user in this context$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/nextcloud_announcements/lib/Notification/Notifier.php" , line : 89usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/nextcloud_announcements/lib/Notification/Notifier.php" , line : 128usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/nextcloud_announcements/lib/Cron/Crawler.php" , line : 83usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid XML feed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/nextcloud_announcements/lib/Cron/Crawler.php" , line : 143usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid signature fetched from the server$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/nextcloud_announcements/lib/Cron/Crawler.php" , line : 155usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not validate CRL signature$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/nextcloud_announcements/lib/Cron/Crawler.php" , line : 160usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Certificate has been revoked$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/nextcloud_announcements/lib/Cron/Crawler.php" , line : 165usize , placeholders : & [] , exception : Some ("Exception") , regex : "^App with id nextcloud_announcements has a certificate not issued by a trusted Code Signing Authority$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/nextcloud_announcements/lib/Cron/Crawler.php" , line : 171usize , placeholders : & [] , exception : Some ("Exception") , regex : "^App with id nextcloud_announcements has a cert with no CN$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/nextcloud_announcements/lib/Cron/Crawler.php" , line : 174usize , placeholders : & ["sprintf('App with id nextcloud_announcements has a cert issued to %s', $certInfo['subject']['CN'])"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/nextcloud_announcements/lib/Cron/Crawler.php" , line : 190usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Feed has an invalid signature$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/nextcloud_announcements/lib/Cron/Crawler.php" , line : 205usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not load file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_versions/lib/AppInfo/Application.php" , line : 164usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/files_versions/lib/Expiration.php" , line : 159usize , placeholders : & ["$minValue"] , exception : None , regex : "^(.*) is not a valid value for minimal versions retention obligation\\. Check versions_retention_obligation in your config\\.php\\. Falling back to auto\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/files_versions/lib/Expiration.php" , line : 167usize , placeholders : & ["$maxValue"] , exception : None , regex : "^(.*) is not a valid value for maximal versions retention obligation\\. Check versions_retention_obligation in your config\\.php\\. Falling back to auto\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_versions/lib/Listener/FileEventsListener.php" , line : 245usize , placeholders : & ["$node->getPath()"] , exception : None , regex : "^Failed to update existing version for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Listener/VersionStorageMoveListener.php" , line : 82usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Cannot move versions across storages without a user\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/files_versions/lib/Command/Expire.php" , line : 57usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_versions/lib/Storage.php" , line : 508usize , placeholders : & ["{path}"] , exception : None , regex : "^Version file (.*)Version file \\{path\\} has incorrect name format$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Storage.php" , line : 593usize , placeholders : & ["$info->getPath()"] , exception : Some ("OCP\\AppFramework\\Db\\DoesNotExistException") , regex : "^Could not find relative path of \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_versions/lib/Storage.php" , line : 733usize , placeholders : & ["json_encode($version)"] , exception : None , regex : "^Found a non\\-numeric timestamp version: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/files_versions/lib/Storage.php" , line : 784usize , placeholders : & ["$version['path']" , "$nextVersion" , "$prevTimestamp" , "$step"] , exception : None , regex : "^Mark to expire (.*) next version should be (.*) or smaller\\. \\(prevTimestamp: (.*); step: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_versions/lib/Storage.php" , line : 844usize , placeholders : & ["$uid"] , exception : None , regex : "^Backends provided no user object for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Storage.php" , line : 845usize , placeholders : & ["$uid"] , exception : Some ("OC\\User\\NoUserException") , regex : "^Backends provided no user object for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/files_versions/lib/Storage.php" , line : 943usize , placeholders : & ["$path"] , exception : None , regex : "^Expire: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/files_versions/lib/Storage.php" , line : 959usize , placeholders : & ["$version['path']" , "$version['version']"] , exception : None , regex : "^running out of space! Delete oldest version: (.*)\\.v(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/VersionCollection.php" , line : 55usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/VersionCollection.php" , line : 59usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/VersionCollection.php" , line : 72usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/VersionCollection.php" , line : 93usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/VersionCollection.php" , line : 101usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/VersionHome.php" , line : 58usize , placeholders : & [] , exception : Some ("OC\\User\\NoUserException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/VersionHome.php" , line : 64usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/VersionHome.php" , line : 72usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/VersionHome.php" , line : 76usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/VersionHome.php" , line : 80usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/VersionRoot.php" , line : 55usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/VersionRoot.php" , line : 63usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/VersionRoot.php" , line : 67usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/VersionRoot.php" , line : 71usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/VersionRoot.php" , line : 81usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/VersionRoot.php" , line : 85usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/VersionFile.php" , line : 49usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/VersionFile.php" , line : 56usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/VersionFile.php" , line : 80usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/VersionFile.php" , line : 89usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/RestoreFolder.php" , line : 36usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/RestoreFolder.php" , line : 40usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/RestoreFolder.php" , line : 48usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/RestoreFolder.php" , line : 56usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Sabre/RootCollection.php" , line : 81usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Versions/VersionManager.php" , line : 85usize , placeholders : & ["$fullType"] , exception : Some ("OCA\\Files_Versions\\Versions\\BackendNotFoundException") , regex : "^Version backend for (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Versions/LegacyVersionsBackend.php" , line : 75usize , placeholders : & ["$fileId"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^File not found \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Versions/LegacyVersionsBackend.php" , line : 79usize , placeholders : & ["$owner" , "$fileId"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^User (.*) not found for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Versions/LegacyVersionsBackend.php" , line : 87usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^version file not found for share owner$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Versions/LegacyVersionsBackend.php" , line : 95usize , placeholders : & ["$fileId"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^File not found \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Versions/LegacyVersionsBackend.php" , line : 101usize , placeholders : & ["$fileId" , "$file->getPath()"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Relative path not found for file (.*) \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Versions/LegacyVersionsBackend.php" , line : 181usize , placeholders : & [] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\Forbidden") , regex : "^You cannot restore this version because you do not have update permissions on the source file\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Versions/LegacyVersionsBackend.php" , line : 231usize , placeholders : & [] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\Forbidden") , regex : "^You cannot delete this version because you do not have delete permissions on the source file\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Versions/LegacyVersionsBackend.php" , line : 278usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^No user logged in$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Versions/LegacyVersionsBackend.php" , line : 288usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Version file not accessible by current user$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Versions/LegacyVersionsBackend.php" , line : 302usize , placeholders : & [] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\Forbidden") , regex : "^You cannot update the version's metadata because you do not have update permissions on the source file\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Versions/LegacyVersionsBackend.php" , line : 320usize , placeholders : & ["$target->getPath()"] , exception : Some ("Exception") , regex : "^Target does not have a relative path(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/files_versions/lib/Versions/LegacyVersionsBackend.php" , line : 338usize , placeholders : & [] , exception : None , regex : "^Fail to open version file\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/lib/Versions/LegacyVersionsBackend.php" , line : 368usize , placeholders : & ["$source->getPath()"] , exception : Some ("Exception") , regex : "^Relative path not found for node with path: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_versions/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/systemtags/lib/Activity/Provider.php" , line : 80usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/systemtags/lib/Activity/Provider.php" , line : 162usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/systemtags/lib/Activity/Provider.php" , line : 269usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/systemtags/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/systemtags/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/systemtags/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/systemtags/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/systemtags/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/systemtags/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/systemtags/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dashboard/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dashboard/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dashboard/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dashboard/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dashboard/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dashboard/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dashboard/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Command/ScanAppData.php" , line : 190usize , placeholders : & ["$message"] , exception : Some ("ErrorException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Command/ScanAppData.php" , line : 262usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/files/lib/Command/Scan.php" , line : 299usize , placeholders : & ["$this->filesCounter" , "$this->foldersCounter" , "$this->newCounter" , "$this->updatedCounter" , "$this->removedCounter"] , exception : None , regex : "^Completed scan of (.*) files in (.*) folder\\. Found (.*) new, (.*) updated and (.*) removed items$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Command/Object/ObjectUtil.php" , line : 68usize , placeholders : & [] , exception : Some ("Exception") , regex : "^no arguments configured for object store configuration$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Command/Object/ObjectUtil.php" , line : 71usize , placeholders : & [] , exception : Some ("Exception") , regex : "^no class configured for object store configuration$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Command/Object/ObjectUtil.php" , line : 83usize , placeholders : & [] , exception : Some ("Exception") , regex : "^configured object store class is not an object store implementation$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Search/FilesSearchProvider.php" , line : 189usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unsupported comparison$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Search/FilesSearchProvider.php" , line : 221usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unsupported filter type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files/lib/BackgroundJob/ScanFiles.php" , line : 78usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/files/lib/BackgroundJob/ScanFiles.php" , line : 120usize , placeholders : & ["$user"] , exception : None , regex : "^User (.*) still has unscanned files after running background scan, background scan might be stopped prematurely$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/files/lib/BackgroundJob/DeleteOrphanedItems.php" , line : 110usize , placeholders : & ["$deletedEntries"] , exception : None , regex : "^(.*) orphaned system tag relations deleted$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/files/lib/BackgroundJob/DeleteOrphanedItems.php" , line : 121usize , placeholders : & ["$deletedEntries"] , exception : None , regex : "^(.*) orphaned user tag relations deleted$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/files/lib/BackgroundJob/DeleteOrphanedItems.php" , line : 132usize , placeholders : & ["$deletedEntries"] , exception : None , regex : "^(.*) orphaned comments deleted$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/files/lib/BackgroundJob/DeleteOrphanedItems.php" , line : 143usize , placeholders : & ["$deletedEntries"] , exception : None , regex : "^(.*) orphaned comment read marks deleted$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Alert , path : "/apps/files/lib/BackgroundJob/TransferOwnership.php" , line : 67usize , placeholders : & [] , exception : None , regex : "^Could not transfer ownership: Node not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Alert , path : "/apps/files/lib/BackgroundJob/TransferOwnership.php" , line : 77usize , placeholders : & ["$sourceUser"] , exception : None , regex : "^Could not transfer ownership: Unknown source user (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Alert , path : "/apps/files/lib/BackgroundJob/TransferOwnership.php" , line : 83usize , placeholders : & ["$destinationUser"] , exception : None , regex : "^Unknown destination user (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files/lib/BackgroundJob/TransferOwnership.php" , line : 96usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files/lib/Controller/OpenLocalEditorController.php" , line : 111usize , placeholders : & ["self::TOKEN_RETRIES" , "$pathHash"] , exception : None , regex : "^Giving up after (.*) retries to generate a unique local editor token for path hash: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Controller/ApiController.php" , line : 123usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Controller/ViewController.php" , line : 368usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Controller/ViewController.php" , line : 401usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files/lib/Controller/DirectEditingController.php" , line : 94usize , placeholders : & [] , exception : None , regex : "^Exception when creating a new file through direct editing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files/lib/Controller/DirectEditingController.php" , line : 130usize , placeholders : & [] , exception : None , regex : "^Exception when opening a file through direct editing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files/lib/Controller/DirectEditingController.php" , line : 163usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Controller/TemplateController.php" , line : 82usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Controller/TemplateController.php" , line : 108usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files/lib/Controller/DirectEditingViewController.php" , line : 61usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Activity/Provider.php" , line : 107usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Activity/Provider.php" , line : 161usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Activity/Provider.php" , line : 275usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Activity/Provider.php" , line : 380usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Could not generate file parameter$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Activity/Provider.php" , line : 391usize , placeholders : & [] , exception : Some ("OCP\\Files\\InvalidPathException") , regex : "^Path could not be split correctly$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Activity/Provider.php" , line : 472usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Reached the root$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Activity/FavoriteProvider.php" , line : 76usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Activity/FavoriteProvider.php" , line : 115usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Activity/FavoriteProvider.php" , line : 145usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Activity/Helper.php" , line : 55usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^No favorites$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Activity/Helper.php" , line : 57usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Too many favorites$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Activity/Helper.php" , line : 73usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^No favorites$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Service/TagService.php" , line : 79usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^No tagger set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Service/TagService.php" , line : 82usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^No homeFolder set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Service/ViewConfig.php" , line : 113usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No user logged in$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Service/ViewConfig.php" , line : 117usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Unknown view$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Service/ViewConfig.php" , line : 121usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unknown config key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Service/ViewConfig.php" , line : 126usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid config value$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Service/ViewConfig.php" , line : 147usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No user logged in$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Service/ViewConfig.php" , line : 172usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No user logged in$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Service/OwnershipTransferService.php" , line : 103usize , placeholders : & [] , exception : Some ("OCA\\Files\\Exception\\TransferOwnershipException") , regex : "^The target user is not ready to accept files\\. The user has at least to have logged in once\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Service/OwnershipTransferService.php" , line : 137usize , placeholders : & ["$path"] , exception : Some ("OCA\\Files\\Exception\\TransferOwnershipException") , regex : "^Unknown path provided: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Service/OwnershipTransferService.php" , line : 146usize , placeholders : & [] , exception : Some ("OCA\\Files\\Exception\\TransferOwnershipException") , regex : "^Destination path does not exists or is not empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Service/OwnershipTransferService.php" , line : 238usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Execution terminated\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Service/OwnershipTransferService.php" , line : 271usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Execution terminated\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Service/OwnershipTransferService.php" , line : 394usize , placeholders : & [] , exception : Some ("OCA\\Files\\Exception\\TransferOwnershipException") , regex : "^Could not transfer files\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Service/UserConfig.php" , line : 122usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No user logged in$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Service/UserConfig.php" , line : 126usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unknown config key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Service/UserConfig.php" , line : 130usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid config value$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Service/UserConfig.php" , line : 147usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No user logged in$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Listener/SyncLivePhotosListener.php" , line : 120usize , placeholders : & [] , exception : Some ("OCP\\Exceptions\\AbortedEventException") , regex : "^Cannot change the extension of a Live Photo$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Listener/SyncLivePhotosListener.php" , line : 125usize , placeholders : & [] , exception : Some ("OCP\\Exceptions\\AbortedEventException") , regex : "^A file already exist at destination path of the Live Photo$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Listener/SyncLivePhotosListener.php" , line : 132usize , placeholders : & [] , exception : Some ("OCP\\Exceptions\\AbortedEventException") , regex : "^A file already exist at destination path of the Live Photo$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Listener/SyncLivePhotosListener.php" , line : 145usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCP\\Exceptions\\AbortedEventException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Listener/SyncLivePhotosListener.php" , line : 195usize , placeholders : & [] , exception : Some ("OCP\\Exceptions\\AbortedEventException") , regex : "^Cannot delete the video part of a live photo$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Listener/SyncLivePhotosListener.php" , line : 202usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCP\\Exceptions\\AbortedEventException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Notification/Notifier.php" , line : 88usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unhandled app$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Notification/Notifier.php" , line : 107usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unhandled subject$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Notification/Notifier.php" , line : 263usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unhandled app$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Notification/Notifier.php" , line : 293usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^User not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Collaboration/Resources/ResourceProvider.php" , line : 99usize , placeholders : & [] , exception : Some ("OCP\\Collaboration\\Resources\\ResourceException") , regex : "^File not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/lib/Helper.php" , line : 229usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^\\$tags must be an array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/cloud_federation_api/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/cloud_federation_api/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/cloud_federation_api/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/cloud_federation_api/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/cloud_federation_api/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/cloud_federation_api/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/cloud_federation_api/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/cloud_federation_api/lib/Controller/RequestHandlerController.php" , line : 185usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/cloud_federation_api/lib/Controller/RequestHandlerController.php" , line : 293usize , placeholders : & ["$uid"] , exception : None , regex : "^shareWith before, (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/cloud_federation_api/lib/Controller/RequestHandlerController.php" , line : 299usize , placeholders : & ["$uid"] , exception : None , regex : "^shareWith after, (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/cloud_federation_api/lib/Capabilities.php" , line : 70usize , placeholders : & [] , exception : Some ("OCP\\OCM\\Exceptions\\OCMArgumentException") , regex : "^generated route should contains a slash character$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_status/lib/Listener/UserLiveStatusListener.php" , line : 125usize , placeholders : & [] , exception : None , regex : "^Unique constraint violation for live user status$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/lib/Service/StatusService.php" , line : 172usize , placeholders : & ["$status"] , exception : Some ("OCA\\UserStatus\\Exception\\InvalidStatusTypeException") , regex : "^Status\\-type \"(.*)\" is not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/lib/Service/StatusService.php" , line : 214usize , placeholders : & ["$messageId"] , exception : Some ("OCA\\UserStatus\\Exception\\InvalidMessageIdException") , regex : "^Message\\-Id \"(.*)\" is not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/lib/Service/StatusService.php" , line : 219usize , placeholders : & [] , exception : Some ("OCA\\UserStatus\\Exception\\InvalidClearAtException") , regex : "^ClearAt is in the past$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/lib/Service/StatusService.php" , line : 251usize , placeholders : & ["$status"] , exception : Some ("OCA\\UserStatus\\Exception\\InvalidStatusTypeException") , regex : "^Status\\-type \"(.*)\" is not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/lib/Service/StatusService.php" , line : 255usize , placeholders : & ["$messageId"] , exception : Some ("OCA\\UserStatus\\Exception\\InvalidMessageIdException") , regex : "^Message\\-Id \"(.*)\" is not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/lib/Service/StatusService.php" , line : 340usize , placeholders : & [] , exception : Some ("OCA\\UserStatus\\Exception\\InvalidStatusIconException") , regex : "^Status\\-Icon is longer than one character$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/lib/Service/StatusService.php" , line : 344usize , placeholders : & ["self::MAXIMUM_MESSAGE_LENGTH"] , exception : Some ("OCA\\UserStatus\\Exception\\StatusMessageTooLongException") , regex : "^Message is longer than supported length of (.*) characters$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/lib/Service/StatusService.php" , line : 348usize , placeholders : & [] , exception : Some ("OCA\\UserStatus\\Exception\\InvalidClearAtException") , regex : "^ClearAt is in the past$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/lib/Controller/StatusesController.php" , line : 101usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^No status for the requested userId$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/lib/Controller/UserStatusController.php" , line : 82usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^No status for the current user$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_status/lib/Controller/UserStatusController.php" , line : 107usize , placeholders : & ["$this->userId" , "$statusType"] , exception : None , regex : "^New user\\-status for \"(.*)\" was rejected due to an invalid status type \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/lib/Controller/UserStatusController.php" , line : 108usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_status/lib/Controller/UserStatusController.php" , line : 132usize , placeholders : & ["$this->userId" , "$clearAt"] , exception : None , regex : "^New user\\-status for \"(.*)\" was rejected due to an invalid clearAt value \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/lib/Controller/UserStatusController.php" , line : 133usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_status/lib/Controller/UserStatusController.php" , line : 135usize , placeholders : & ["$this->userId" , "$messageId"] , exception : None , regex : "^New user\\-status for \"(.*)\" was rejected due to an invalid message\\-id \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/lib/Controller/UserStatusController.php" , line : 136usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_status/lib/Controller/UserStatusController.php" , line : 167usize , placeholders : & ["$this->userId" , "$clearAt"] , exception : None , regex : "^New user\\-status for \"(.*)\" was rejected due to an invalid clearAt value \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/lib/Controller/UserStatusController.php" , line : 168usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_status/lib/Controller/UserStatusController.php" , line : 170usize , placeholders : & ["$this->userId" , "$statusIcon"] , exception : None , regex : "^New user\\-status for \"(.*)\" was rejected due to an invalid icon value \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/lib/Controller/UserStatusController.php" , line : 171usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_status/lib/Controller/UserStatusController.php" , line : 173usize , placeholders : & ["$this->userId"] , exception : None , regex : "^New user\\-status for \"(.*)\" was rejected due to a too long status message\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/lib/Controller/UserStatusController.php" , line : 174usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_status/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/weather_status/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/weather_status/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/weather_status/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/weather_status/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/weather_status/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/weather_status/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/weather_status/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/weather_status/lib/Service/WeatherStatusService.php" , line : 398usize , placeholders : & ["$url" , "$e->getMessage()"] , exception : None , regex : "^(.*) API error : (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/theming/lib/Controller/UserThemeController.php" , line : 138usize , placeholders : & ["$themeId"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^Invalid theme id: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/theming/lib/Controller/UserThemeController.php" , line : 143usize , placeholders : & ["$themeId"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^Invalid theme id: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/theming/lib/Controller/UserThemeController.php" , line : 149usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^Theme switching is disabled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/theming/lib/Service/ThemesService.php" , line : 74usize , placeholders : & [] , exception : None , regex : "^Enforced theme not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/theming/lib/Service/BackgroundService.php" , line : 224usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid image file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/theming/lib/Service/BackgroundService.php" , line : 232usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given file name is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/theming/lib/Service/BackgroundService.php" , line : 240usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given color is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/theming/lib/Jobs/MigrateBackgroundImages.php" , line : 74usize , placeholders : & ["self::class"] , exception : Some ("Exception") , regex : "^Job (.*) called with wrong argument$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/theming/lib/Jobs/MigrateBackgroundImages.php" , line : 178usize , placeholders : & ["{file}"] , exception : None , regex : "^Lacking permissions to create (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/theming/lib/Jobs/MigrateBackgroundImages.php" , line : 198usize , placeholders : & ["{file}"] , exception : None , regex : "^Could not delete (.*)Could not delete \\{file\\} due to permissions\\. It is safe to delete manually inside data \\-> appdata \\-> theming \\-> global\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/theming/lib/ImageManager.php" , line : 104usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/theming/lib/ImageManager.php" , line : 118usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^The image was requested to be no SVG file, but converting it to PNG failed: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/theming/lib/ImageManager.php" , line : 227usize , placeholders : & ["$detectedMimeType"] , exception : Some ("Exception") , regex : "^Unsupported image type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/theming/lib/ImageManager.php" , line : 236usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not read background image, possibly corrupted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/theming/lib/ImageManager.php" , line : 247usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not scale uploaded background image\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/theming/lib/ImageManager.php" , line : 255usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not recompress background image as JPEG$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/theming/lib/ImageManager.php" , line : 259usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not recompress background image as PNG$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/theming/lib/ImageManager.php" , line : 269usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/theming/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/theming/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/theming/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/theming/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/theming/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/theming/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/theming/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/logreader/lib/Controller/LogController.php" , line : 61usize , placeholders : & [] , exception : None , regex : "^File\\-based logging must be enabled to access logs from the Web UI\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/logreader/lib/Controller/LogController.php" , line : 106usize , placeholders : & [] , exception : None , regex : "^File\\-based logging must be enabled to access logs from the Web UI\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/logreader/lib/Controller/SettingsController.php" , line : 68usize , placeholders : & ["{settingsKey}" , "{settingsValue}"] , exception : None , regex : "^Updating AppConfig: (.*) => (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/logreader/lib/Controller/SettingsController.php" , line : 75usize , placeholders : & ["$settingsKey"] , exception : None , regex : "^Unknown appConfig key: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/logreader/lib/Controller/SettingsController.php" , line : 82usize , placeholders : & [] , exception : None , regex : "^Incorrect value type for appConfig key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/logreader/lib/Controller/SettingsController.php" , line : 89usize , placeholders : & [] , exception : None , regex : "^Invalid logging level given$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/logreader/lib/Controller/SettingsController.php" , line : 98usize , placeholders : & ["{settingsValue}"] , exception : None , regex : "^Cannot set (.*)Cannot set \\{settingsValue\\} as loglevel$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/logreader/lib/Listener/LogListener.php" , line : 61usize , placeholders : & ["$event->getLevel()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/logreader/lib/Log/LogIteratorFactory.php" , line : 47usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Logreader application only supports \"file\" log_type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/logreader/lib/Log/LogIteratorFactory.php" , line : 58usize , placeholders : & ["$log->getLogFilePath()"] , exception : Some ("Exception") , regex : "^Error while opening (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/logreader/lib/Log/LogIteratorFactory.php" , line : 61usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Can't find log class$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/logreader/lib/Log/Console.php" , line : 84usize , placeholders : & ["$level"] , exception : Some ("Exception") , regex : "^Unknown log level (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/serverinfo/lib/OperatingSystems/FreeBSD.php" , line : 239usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^shell_exec unavailable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/serverinfo/lib/OperatingSystems/FreeBSD.php" , line : 244usize , placeholders : & ["$command"] , exception : Some ("RuntimeException") , regex : "^No output for command: \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/serverinfo/lib/OperatingSystems/FreeBSD.php" , line : 258usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Unable to get network interfaces$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/serverinfo/lib/OperatingSystems/Linux.php" , line : 268usize , placeholders : & ["$filename"] , exception : Some ("RuntimeException") , regex : "^Unable to read: \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/serverinfo/lib/OperatingSystems/Linux.php" , line : 282usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^shell_exec unavailable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/serverinfo/lib/OperatingSystems/Linux.php" , line : 287usize , placeholders : & ["$command"] , exception : Some ("RuntimeException") , regex : "^No output for command: \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/serverinfo/lib/OperatingSystems/Linux.php" , line : 301usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Unable to get network interfaces$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/AddressHandler.php" , line : 79usize , placeholders : & [] , exception : Some ("OCP\\HintException") , regex : "^Invalid Federated Cloud ID$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 108usize , placeholders : & [] , exception : Some ("OCP\\Federation\\Exceptions\\ProviderCouldNotAddShareException") , regex : "^Server does not support federated cloud sharing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 113usize , placeholders : & [] , exception : Some ("OCP\\Federation\\Exceptions\\ProviderCouldNotAddShareException") , regex : "^Unsupported protocol for data exchange\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 142usize , placeholders : & [] , exception : Some ("OCP\\Federation\\Exceptions\\ProviderCouldNotAddShareException") , regex : "^The mountpoint name contains invalid characters\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 147usize , placeholders : & ["$shareWith"] , exception : None , regex : "^shareWith before, (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 153usize , placeholders : & ["$shareWith"] , exception : None , regex : "^shareWith after, (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 156usize , placeholders : & [] , exception : Some ("OCP\\Federation\\Exceptions\\ProviderCouldNotAddShareException") , regex : "^User does not exists$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 163usize , placeholders : & [] , exception : Some ("OCP\\Federation\\Exceptions\\ProviderCouldNotAddShareException") , regex : "^Group does not exists$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 197usize , placeholders : & [] , exception : None , regex : "^Server can not add remote share\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 201usize , placeholders : & ["$remote"] , exception : Some ("OCP\\Federation\\Exceptions\\ProviderCouldNotAddShareException") , regex : "^internal server error, was not able to add share from (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 205usize , placeholders : & [] , exception : Some ("OCP\\Federation\\Exceptions\\ProviderCouldNotAddShareException") , regex : "^server can not add remote share, missing parameter$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 239usize , placeholders : & ["[$notificationType]"] , exception : Some ("OCP\\Federation\\Exceptions\\BadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 291usize , placeholders : & [] , exception : Some ("OCP\\Federation\\Exceptions\\ActionNotSupportedException") , regex : "^Server does not support federated cloud sharing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 295usize , placeholders : & ["['sharedSecret']"] , exception : Some ("OCP\\Federation\\Exceptions\\BadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 333usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 361usize , placeholders : & [] , exception : Some ("OCP\\Federation\\Exceptions\\ActionNotSupportedException") , regex : "^Server does not support federated cloud sharing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 365usize , placeholders : & ["['sharedSecret']"] , exception : Some ("OCP\\Federation\\Exceptions\\BadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 409usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 433usize , placeholders : & ["['sharedSecret']"] , exception : Some ("OCP\\Federation\\Exceptions\\BadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 455usize , placeholders : & [] , exception : Some ("OCP\\Federation\\Exceptions\\ActionNotSupportedException") , regex : "^incoming shares disabled!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 459usize , placeholders : & ["['sharedSecret']"] , exception : Some ("OCP\\Federation\\Exceptions\\BadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 547usize , placeholders : & ["['sharedSecret']"] , exception : Some ("OCP\\Federation\\Exceptions\\BadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 552usize , placeholders : & ["['shareWith']"] , exception : Some ("OCP\\Federation\\Exceptions\\BadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 557usize , placeholders : & ["['senderId']"] , exception : Some ("OCP\\Federation\\Exceptions\\BadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 573usize , placeholders : & ["$id"] , exception : Some ("OCP\\Federation\\Exceptions\\ProviderCouldNotAddShareException") , regex : "^Resharing back to the owner is not allowed: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 576usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\Federation\\Exceptions\\ProviderCouldNotAddShareException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 590usize , placeholders : & ["$id"] , exception : Some ("OCP\\Federation\\Exceptions\\ProviderCouldNotAddShareException") , regex : "^resharing not allowed for share: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 605usize , placeholders : & [] , exception : Some ("OCP\\HintException") , regex : "^Updating reshares not allowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 629usize , placeholders : & ["['permission']"] , exception : Some ("OCP\\Federation\\Exceptions\\BadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 714usize , placeholders : & [] , exception : Some ("OCP\\Federation\\Exceptions\\AuthenticationFailedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/federatedfilesharing/lib/OCM/CloudFederationProviderFiles.php" , line : 760usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/Notifier.php" , line : 93usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/Notifier.php" , line : 164usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/Notifier.php" , line : 248usize , placeholders : & [] , exception : Some ("OutOfBoundsException") , regex : "^No contact found for federated cloud id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/Notifier.php" , line : 270usize , placeholders : & [] , exception : Some ("OutOfBoundsException") , regex : "^No contact found for federated cloud id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/federatedfilesharing/lib/FederatedShareProvider.php" , line : 124usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/FederatedShareProvider.php" , line : 125usize , placeholders : & ["$message_t"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/federatedfilesharing/lib/FederatedShareProvider.php" , line : 136usize , placeholders : & ["sprintf($message, $share->getNode()->getName(), $shareWith)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/FederatedShareProvider.php" , line : 137usize , placeholders : & ["$message_t"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/federatedfilesharing/lib/FederatedShareProvider.php" , line : 148usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/FederatedShareProvider.php" , line : 149usize , placeholders : & ["$message_t"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/federatedfilesharing/lib/FederatedShareProvider.php" , line : 156usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/FederatedShareProvider.php" , line : 157usize , placeholders : & ["$message_t"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/FederatedShareProvider.php" , line : 188usize , placeholders : & ["$message_t"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/federatedfilesharing/lib/FederatedShareProvider.php" , line : 245usize , placeholders : & [] , exception : None , regex : "^Failed to notify remote server of federated share, removing share\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/FederatedShareProvider.php" , line : 256usize , placeholders : & ["$message_t"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/FederatedShareProvider.php" , line : 308usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^share not found in share_external table$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/FederatedShareProvider.php" , line : 444usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/FederatedShareProvider.php" , line : 576usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\GenericShareException") , regex : "^not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/FederatedShareProvider.php" , line : 699usize , placeholders : & ["$id"] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^Can not find share with ID: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/FederatedShareProvider.php" , line : 705usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/FederatedShareProvider.php" , line : 795usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^Share not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/FederatedShareProvider.php" , line : 801usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^Share not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/FederatedShareProvider.php" , line : 891usize , placeholders : & [] , exception : Some ("OC\\Share20\\Exception\\InvalidShare") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/FederatedShareProvider.php" , line : 897usize , placeholders : & [] , exception : Some ("OC\\Share20\\Exception\\InvalidShare") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/federatedfilesharing/lib/Notifications.php" , line : 101usize , placeholders : & ["$name" , "$shareWith"] , exception : None , regex : "^failed sharing (.*) with (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/federatedfilesharing/lib/Notifications.php" , line : 107usize , placeholders : & ["$name" , "$shareWith"] , exception : None , regex : "^could not share (.*), invalid contact (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/federatedfilesharing/lib/Notifications.php" , line : 162usize , placeholders : & ["$filename" , "$remote"] , exception : None , regex : "^invalid or missing token requesting re\\-share for (.*) to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/federatedfilesharing/lib/Notifications.php" , line : 167usize , placeholders : & ["$filename" , "$remote"] , exception : None , regex : "^missing remote id requesting re\\-share for (.*) to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/federatedfilesharing/lib/Notifications.php" , line : 172usize , placeholders : & ["$filename" , "$remote"] , exception : None , regex : "^failed requesting re\\-share for (.*) to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 185usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^Server does not support federated cloud sharing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 187usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 189usize , placeholders : & ["$remote"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^internal server error, was not able to add share from (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 216usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 234usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^Server does not support federated cloud sharing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 236usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Share not found: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 238usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^internal server error, can not process notification: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 241usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 271usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^Server does not support federated cloud sharing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 273usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Share not found: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 275usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^internal server error, can not process notification: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 305usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^Server does not support federated cloud sharing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 307usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Share not found: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 309usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^internal server error, can not process notification: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 330usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^Server does not support federated cloud sharing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 339usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^processing unshare notification failed: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 372usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 418usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 419usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 467usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^Server does not support federated cloud sharing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/federatedfilesharing/lib/Controller/RequestHandlerController.php" , line : 485usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^Share not found or token invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/federatedfilesharing/lib/Controller/MountPublicLinkController.php" , line : 140usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/text/lib/Cron/Cleanup.php" , line : 58usize , placeholders : & [] , exception : None , regex : "^Run cleanup job for text documents$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/text/lib/Cron/Cleanup.php" , line : 72usize , placeholders : & [] , exception : None , regex : "^Run cleanup job for text sessions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/text/lib/Cron/Cleanup.php" , line : 74usize , placeholders : & ["$removedSessions"] , exception : None , regex : "^Removed (.*) inactive sessions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/text/lib/Cron/Cleanup.php" , line : 76usize , placeholders : & [] , exception : None , regex : "^Run cleanup job for obsolete documents folders$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/AttachmentService.php" , line : 223usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^Unable to read document$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/AttachmentService.php" , line : 285usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^No write permissions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/AttachmentService.php" , line : 314usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^No write permissions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/AttachmentService.php" , line : 344usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^No write permissions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/AttachmentService.php" , line : 436usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^File has no owner$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/AttachmentService.php" , line : 454usize , placeholders : & ["$textFile->getId()"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Attachment dir for document (.*) was not found or could not be created\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/AttachmentService.php" , line : 471usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/AttachmentService.php" , line : 512usize , placeholders : & ["$documentId" , "$userId"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Text file with id=(.*) was not found in storage of (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/AttachmentService.php" , line : 549usize , placeholders : & ["$documentId" , "$shareToken"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Text file with id=(.*) and shareToken (.*) was not found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/text/lib/Service/ApiService.php" , line : 94usize , placeholders : & [] , exception : None , regex : "^No permission to access this file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/text/lib/Service/ApiService.php" , line : 123usize , placeholders : & ["$file->getId()"] , exception : None , regex : "^Create new document of (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/text/lib/Service/ApiService.php" , line : 131usize , placeholders : & ["$file->getId()"] , exception : None , regex : "^Keep previous document of (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/text/lib/Service/ApiService.php" , line : 134usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/text/lib/Service/ApiService.php" , line : 145usize , placeholders : & ["$file->getId()"] , exception : None , regex : "^Starting a fresh editing session for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/text/lib/Service/ApiService.php" , line : 148usize , placeholders : & ["$file->getId()"] , exception : None , regex : "^Loading existing session for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/text/lib/Service/ApiService.php" , line : 152usize , placeholders : & ["$file->getId()"] , exception : None , regex : "^Existing document, state file loaded (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/text/lib/Service/ApiService.php" , line : 154usize , placeholders : & ["$file->getId()"] , exception : None , regex : "^Existing document, but state file not found for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/text/lib/Service/ApiService.php" , line : 232usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/text/lib/Service/ApiService.php" , line : 237usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/text/lib/Service/ApiService.php" , line : 257usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/text/lib/Service/ApiService.php" , line : 262usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/text/lib/Service/ApiService.php" , line : 280usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/text/lib/Service/ApiService.php" , line : 298usize , placeholders : & ["$file->getId()"] , exception : None , regex : "^Failed to encode file to UTF8\\. File ID: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/text/lib/Service/ApiService.php" , line : 301usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/SessionService.php" , line : 219usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Logged in users cannot set a guest name$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/SessionService.php" , line : 236usize , placeholders : & [] , exception : Some ("ValueError") , regex : "^Message passed was not an awareness message$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/text/lib/Service/DocumentService.php" , line : 144usize , placeholders : & [] , exception : None , regex : "^Unsaved steps, continue collaborative editing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/DocumentService.php" , line : 154usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^No app data folder present for text documents$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/DocumentService.php" , line : 170usize , placeholders : & [] , exception : Some ("OCP\\Files\\AlreadyExistsException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/DocumentService.php" , line : 186usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^No app data folder present for text documents$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/text/lib/Service/DocumentService.php" , line : 212usize , placeholders : & [] , exception : None , regex : "^Failed to create document state file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/DocumentService.php" , line : 244usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^Read\\-only client tries to push steps with changes$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/text/lib/Service/DocumentService.php" , line : 288usize , placeholders : & ["$document->getId()" , "$stepsVersion" , "$newVersion"] , exception : None , regex : "^Adding steps to (.*): bumping version from (.*) to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/text/lib/Service/DocumentService.php" , line : 294usize , placeholders : & [] , exception : None , regex : "^This should never happen\\. An error occurred when storing the version, trying to recover the last stable one$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/DocumentService.php" , line : 327usize , placeholders : & [] , exception : Some ("OCA\\Text\\Exception\\DocumentSaveConflictException") , regex : "^File changed in the meantime from outside$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/DocumentService.php" , line : 342usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/text/lib/Service/DocumentService.php" , line : 371usize , placeholders : & [] , exception : None , regex : "^Saving empty document$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/text/lib/Service/DocumentService.php" , line : 433usize , placeholders : & ["$documentId"] , exception : None , regex : "^did not reset document for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/DocumentService.php" , line : 434usize , placeholders : & [] , exception : Some ("OCA\\Text\\Exception\\DocumentHasUnsavedChangesException") , regex : "^Did not reset document, as it has unsaved changes$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/text/lib/Service/DocumentService.php" , line : 444usize , placeholders : & ["$documentId"] , exception : None , regex : "^document reset for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/DocumentService.php" , line : 467usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^No proper share data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/DocumentService.php" , line : 473usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/DocumentService.php" , line : 483usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^No proper share data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/DocumentService.php" , line : 498usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Could not fallback to file from mounts$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/DocumentService.php" , line : 508usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/DocumentService.php" , line : 513usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/DocumentService.php" , line : 525usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/DocumentService.php" , line : 529usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/DocumentService.php" , line : 542usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/DocumentService.php" , line : 552usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^No proper share data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/DocumentService.php" , line : 602usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/DocumentService.php" , line : 606usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/text/lib/Service/DocumentService.php" , line : 623usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Service/DocumentService.php" , line : 672usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Folder not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/TextFile.php" , line : 64usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^File not compatible with text because it could not be encoded to UTF\\-8\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Middleware/SessionMiddleware.php" , line : 79usize , placeholders : & [] , exception : Some ("OCA\\Text\\Exception\\InvalidDocumentBaseVersionEtagException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Middleware/SessionMiddleware.php" , line : 94usize , placeholders : & [] , exception : Some ("OCA\\Text\\Exception\\InvalidSessionException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Middleware/SessionMiddleware.php" , line : 99usize , placeholders : & [] , exception : Some ("OCA\\Text\\Exception\\InvalidSessionException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Middleware/SessionMiddleware.php" , line : 119usize , placeholders : & [] , exception : Some ("OCA\\Text\\Exception\\InvalidSessionException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Middleware/SessionMiddleware.php" , line : 126usize , placeholders : & [] , exception : Some ("OCA\\Text\\Exception\\InvalidSessionException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Middleware/SessionMiddleware.php" , line : 130usize , placeholders : & [] , exception : Some ("OCA\\Text\\Exception\\InvalidSessionException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Middleware/SessionMiddleware.php" , line : 133usize , placeholders : & [] , exception : Some ("OCA\\Text\\Exception\\InvalidSessionException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Middleware/SessionMiddleware.php" , line : 138usize , placeholders : & [] , exception : Some ("OCA\\Text\\Exception\\InvalidSessionException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/YjsMessage.php" , line : 59usize , placeholders : & [] , exception : Some ("OutOfBoundsException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/YjsMessage.php" , line : 62usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/YjsMessage.php" , line : 78usize , placeholders : & [] , exception : Some ("ValueError") , regex : "^Message is not a sync message$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Db/Session.php" , line : 67usize , placeholders : & [] , exception : Some ("OCA\\Text\\Exception\\InvalidSessionException") , regex : "^No user id found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Db/DocumentMapper.php" , line : 54usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\Db\\DoesNotExistException") , regex : "^Document doesn't exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Db/Step.php" , line : 64usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Failed to parse step data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Db/SessionMapper.php" , line : 69usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\Db\\DoesNotExistException") , regex : "^Session is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Notification/Notifier.php" , line : 65usize , placeholders : & ["$notification->getApp()"] , exception : Some ("InvalidArgumentException") , regex : "^Application should be text instead of (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Notification/Notifier.php" , line : 79usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Notification/Notifier.php" , line : 85usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Notification/Notifier.php" , line : 91usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Notification/Notifier.php" , line : 112usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Controller/PublicSessionController.php" , line : 58usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Share has not been set yet$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/text/lib/Controller/AttachmentController.php" , line : 121usize , placeholders : & [] , exception : None , regex : "^File insertion error$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Controller/AttachmentController.php" , line : 137usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not read file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/text/lib/Controller/AttachmentController.php" , line : 154usize , placeholders : & [] , exception : None , regex : "^Upload error$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Controller/AttachmentController.php" , line : 180usize , placeholders : & ["$error"] , exception : Some ("OCA\\Text\\Exception\\UploadException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/text/lib/Controller/AttachmentController.php" , line : 215usize , placeholders : & [] , exception : None , regex : "^getImageFile error$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/text/lib/Controller/AttachmentController.php" , line : 249usize , placeholders : & [] , exception : None , regex : "^getMediaFile error$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/text/lib/Controller/AttachmentController.php" , line : 285usize , placeholders : & [] , exception : None , regex : "^getMediaFilePreview error$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Controller/TSessionAwareController.php" , line : 30usize , placeholders : & [] , exception : Some ("OCA\\Text\\Exception\\InvalidSessionException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Controller/TSessionAwareController.php" , line : 38usize , placeholders : & [] , exception : Some ("OCA\\Text\\Exception\\InvalidSessionException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Controller/TSessionAwareController.php" , line : 46usize , placeholders : & [] , exception : Some ("OCA\\Text\\Exception\\InvalidSessionException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/text/lib/Controller/WorkspaceController.php" , line : 128usize , placeholders : & [] , exception : None , regex : "^Failed to get workspace file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Controller/WorkspaceController.php" , line : 146usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/lib/Controller/WorkspaceController.php" , line : 152usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/text/lib/Controller/WorkspaceController.php" , line : 176usize , placeholders : & [] , exception : None , regex : "^Failed to get public workspace file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/text/lib/Controller/WorkspaceController.php" , line : 202usize , placeholders : & [] , exception : None , regex : "^Exception when creating a new file through direct editing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/text/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/password_policy/lib/Compliance/HistoryCompliance.php" , line : 87usize , placeholders : & ["$message"] , exception : Some ("OC\\HintException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/password_policy/lib/Compliance/HistoryCompliance.php" , line : 123usize , placeholders : & ["{uid}" , "{history}"] , exception : None , regex : "^Received password history of (.*) had the unexpected value of (.*)Received password history of \\{uid\\} had the unexpected value of \\{history\\}, resetting\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/password_policy/lib/Compliance/Expiration.php" , line : 94usize , placeholders : & ["$message"] , exception : Some ("OC\\HintException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/password_policy/lib/PasswordValidator.php" , line : 70usize , placeholders : & [] , exception : None , regex : "^Could not get validator from container$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/password_policy/lib/PasswordValidator.php" , line : 83usize , placeholders : & ["implode(' ', $errors)"] , exception : Some ("OC\\HintException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/password_policy/lib/Validator/CommonPasswordsValidator.php" , line : 54usize , placeholders : & ["$message"] , exception : Some ("OC\\HintException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/password_policy/lib/Validator/SpecialCharactersValidator.php" , line : 51usize , placeholders : & ["$message"] , exception : Some ("OC\\HintException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/password_policy/lib/Validator/LengthValidator.php" , line : 51usize , placeholders : & ["$message"] , exception : Some ("OC\\HintException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/password_policy/lib/Validator/UpperCaseLoweCaseValidator.php" , line : 52usize , placeholders : & ["$message"] , exception : Some ("OC\\HintException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/password_policy/lib/Validator/HIBPValidator.php" , line : 86usize , placeholders : & ["$message"] , exception : Some ("OC\\HintException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/password_policy/lib/Validator/NumericCharacterValidator.php" , line : 52usize , placeholders : & ["$message"] , exception : Some ("OC\\HintException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/password_policy/lib/Generator.php" , line : 111usize , placeholders : & [] , exception : Some ("OC\\HintException") , regex : "^Could not generate a valid password$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/password_policy/lib/ComplianceService.php" , line : 92usize , placeholders : & ["$e->getHint()"] , exception : Some ("OC\\User\\LoginException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/password_policy/lib/ComplianceService.php" , line : 109usize , placeholders : & [] , exception : None , regex : "^Could not query compliance$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Util.php" , line : 145usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Unknown user: method expects path to a user folder relative to the data folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/encryption/lib/Command/FixEncryptedVersion.php" , line : 222usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Issue: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Command/DropLegacyFileKey.php" , line : 134usize , placeholders : & ["$source" , "$target"] , exception : Some ("OC\\Encryption\\Exceptions\\DecryptionFailedException") , regex : "^Failed to open (.*) or (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Command/FixKeyLocation.php" , line : 68usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Wrong encryption manager$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Command/FixKeyLocation.php" , line : 306usize , placeholders : & ["$node->getPath()"] , exception : Some ("Exception") , regex : "^Failed to open (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Command/FixKeyLocation.php" , line : 357usize , placeholders : & ["$basePath"] , exception : Some ("Exception") , regex : "^Invalid base path (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Command/FixKeyLocation.php" , line : 416usize , placeholders : & ["$node->getPath()" , "$key"] , exception : Some ("Exception") , regex : "^Failed to open (.*) with (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Command/FixKeyLocation.php" , line : 436usize , placeholders : & ["$node->getPath()" , "$key"] , exception : Some ("Exception") , regex : "^(.*) still encrypted after attempting to decrypt with (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 117usize , placeholders : & ["$this->user"] , exception : None , regex : "^Encryption Library couldn't generate users key\\-pair for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 121usize , placeholders : & ["openssl_error_string()"] , exception : None , regex : "^Encryption library openssl_pkey_new\\(\\) fails: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 136usize , placeholders : & ["$this->user"] , exception : None , regex : "^Encryption library couldn't export users private key, please check your servers OpenSSL configuration\\.(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 139usize , placeholders : & ["openssl_error_string()"] , exception : None , regex : "^Encryption Library:(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 170usize , placeholders : & [] , exception : None , regex : "^Encryption Library, symmetrical encryption failed no content given$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 200usize , placeholders : & ["$keyFormat"] , exception : Some ("InvalidArgumentException") , regex : "^key format \"(.*)\" is not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 229usize , placeholders : & ["$error" , "openssl_error_string()"] , exception : None , regex : "^(.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 231usize , placeholders : & ["$error"] , exception : Some ("OC\\Encryption\\Exceptions\\EncryptionFailedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 249usize , placeholders : & ["sprintf(\n\t\t\t\t\t'Unsupported cipher (%s) defined in config.php supported. Falling back to %s',\n\t\t\t\t\t$cipher,\n\t\t\t\t\tself::DEFAULT_CIPHER\n\t\t\t\t)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 286usize , placeholders : & ["sprintf(\n\t\t\t\t'Unsupported cipher (%s) defined.',\n\t\t\t\t$cipher\n\t\t\t)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 301usize , placeholders : & [] , exception : Some ("OC\\ServerNotAvailableException") , regex : "^Legacy cipher is no longer supported!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 483usize , placeholders : & [] , exception : Some ("OCP\\Encryption\\Exceptions\\GenericEncryptionException") , regex : "^Bad Signature$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 485usize , placeholders : & [] , exception : None , regex : "^Signature check skipped$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 551usize , placeholders : & [] , exception : Some ("OCP\\Encryption\\Exceptions\\GenericEncryptionException") , regex : "^Missing Signature$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 556usize , placeholders : & [] , exception : Some ("OCP\\Encryption\\Exceptions\\GenericEncryptionException") , regex : "^Missing Signature$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 577usize , placeholders : & ["openssl_error_string()"] , exception : Some ("OC\\Encryption\\Exceptions\\DecryptionFailedException") , regex : "^Encryption library: Decryption \\(symmetric\\) of content failed: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 638usize , placeholders : & ["openssl_error_string()"] , exception : Some ("OCA\\Encryption\\Exceptions\\MultiKeyDecryptException") , regex : "^multikeydecrypt with share key failed:(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 648usize , placeholders : & [] , exception : Some ("OCA\\Encryption\\Exceptions\\MultiKeyDecryptException") , regex : "^Cannot multikey decrypt empty plain content$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 655usize , placeholders : & ["openssl_error_string()"] , exception : Some ("OCA\\Encryption\\Exceptions\\MultiKeyDecryptException") , regex : "^multikeydecrypt with share key failed:(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 665usize , placeholders : & [] , exception : Some ("OCA\\Encryption\\Exceptions\\MultiKeyEncryptException") , regex : "^Cannot multikeyencrypt empty plain content$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 698usize , placeholders : & ["openssl_error_string()"] , exception : Some ("OCA\\Encryption\\Exceptions\\MultiKeyEncryptException") , regex : "^multikeyencryption failed (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 712usize , placeholders : & [] , exception : Some ("OCA\\Encryption\\Exceptions\\MultiKeyEncryptException") , regex : "^Cannot multikeyencrypt empty plain content$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 734usize , placeholders : & ["openssl_error_string()"] , exception : Some ("OCA\\Encryption\\Exceptions\\MultiKeyEncryptException") , regex : "^multikeyencryption failed (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 788usize , placeholders : & ["$cipher_algo"] , exception : Some ("OC\\Encryption\\Exceptions\\DecryptionFailedException") , regex : "^Unsupported cipher (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Crypto/Crypt.php" , line : 835usize , placeholders : & ["$cipher_algo"] , exception : Some ("OC\\Encryption\\Exceptions\\EncryptionFailedException") , regex : "^Unsupported cipher (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/encryption/lib/Crypto/Encryption.php" , line : 240usize , placeholders : & ["{uid}"] , exception : None , regex : "^no public key found for user \"(.*)no public key found for user \"\\{uid\\}\", user will not be able to read the file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/encryption/lib/Crypto/Encryption.php" , line : 255usize , placeholders : & ["{path}"] , exception : None , regex : "^Failed to delete legacy filekey for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/encryption/lib/Crypto/Encryption.php" , line : 338usize , placeholders : & ["$msg"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Crypto/Encryption.php" , line : 340usize , placeholders : & ["$msg"] , exception : Some ("OC\\Encryption\\Exceptions\\DecryptionFailedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/encryption/lib/Crypto/Encryption.php" , line : 374usize , placeholders : & ["$user" , "$e->getMessage()"] , exception : None , regex : "^Could not encrypt file for (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/encryption/lib/Crypto/Encryption.php" , line : 389usize , placeholders : & ["{file}"] , exception : None , regex : "^no file key found, we assume that the file \"(.*)no file key found, we assume that the file \"\\{file\\}\" is not encrypted$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/encryption/lib/Crypto/Encryption.php" , line : 477usize , placeholders : & ["$msg"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Crypto/Encryption.php" , line : 478usize , placeholders : & ["$msg"] , exception : Some ("OC\\Encryption\\Exceptions\\DecryptionFailedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/encryption/lib/Hooks/UserHooks.php" , line : 210usize , placeholders : & [] , exception : None , regex : "^Encryption could not update users encryption password$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Hooks/UserHooks.php" , line : 230usize , placeholders : & ["$message"] , exception : Some ("OCP\\Encryption\\Exceptions\\GenericEncryptionException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/encryption/lib/Hooks/UserHooks.php" , line : 262usize , placeholders : & [] , exception : None , regex : "^Encryption Could not update users encryption password$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/encryption/lib/KeyManager.php" , line : 153usize , placeholders : & [] , exception : None , regex : "^A private master key is available but the public key could not be found\\. This should never happen\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/encryption/lib/KeyManager.php" , line : 156usize , placeholders : & [] , exception : None , regex : "^A public master key is available but the private key could not be found\\. This should never happen\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/encryption/lib/KeyManager.php" , line : 335usize , placeholders : & ["$uid"] , exception : None , regex : "^Could not decrypt the private key from user \"(.*)\"\" during login\\. Assume password change on the user back\\-end\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/KeyManager.php" , line : 366usize , placeholders : & ["$userId"] , exception : Some ("OCA\\Encryption\\Exceptions\\PrivateKeyMissingException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/KeyManager.php" , line : 539usize , placeholders : & ["$userId"] , exception : Some ("OCA\\Encryption\\Exceptions\\PublicKeyMissingException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/KeyManager.php" , line : 653usize , placeholders : & ["$this->getPublicShareKeyId()"] , exception : Some ("OCA\\Encryption\\Exceptions\\PublicKeyMissingException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/KeyManager.php" , line : 675usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Can not get secret from Nextcloud instance$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Session.php" , line : 90usize , placeholders : & [] , exception : Some ("OCA\\Encryption\\Exceptions\\PrivateKeyMissingException") , regex : "^please try to log\\-out and log\\-in again$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Session.php" , line : 151usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No uid found while in decrypt all mode$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Session.php" , line : 153usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Please activate decrypt all mode first$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Session.php" , line : 168usize , placeholders : & [] , exception : Some ("OCA\\Encryption\\Exceptions\\PrivateKeyMissingException") , regex : "^No private key found while in decrypt all mode$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/lib/Session.php" , line : 170usize , placeholders : & [] , exception : Some ("OCA\\Encryption\\Exceptions\\PrivateKeyMissingException") , regex : "^Please activate decrypt all mode first$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/encryption/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/oauth2/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/oauth2/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/oauth2/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/oauth2/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/oauth2/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/oauth2/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/oauth2/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/oauth2/lib/Settings/Admin.php" , line : 63usize , placeholders : & [] , exception : None , regex : "^\\[Settings\\] OAuth client secret decryption error$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/oauth2/lib/Db/AccessTokenMapper.php" , line : 67usize , placeholders : & [] , exception : Some ("OCA\\OAuth2\\Exceptions\\AccessTokenNotFoundException") , regex : "^Could not find access token$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/oauth2/lib/Db/ClientMapper.php" , line : 63usize , placeholders : & ["$clientIdentifier"] , exception : Some ("OCA\\OAuth2\\Exceptions\\ClientNotFoundException") , regex : "^could not find client (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/oauth2/lib/Db/ClientMapper.php" , line : 83usize , placeholders : & ["$id"] , exception : Some ("OCA\\OAuth2\\Exceptions\\ClientNotFoundException") , regex : "^could not find client with id (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/oauth2/lib/Controller/OauthApiController.php" , line : 161usize , placeholders : & [] , exception : None , regex : "^OAuth client secret decryption error$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/oauth2/lib/BackgroundJob/CleanupExpiredAuthorizationCode.php" , line : 58usize , placeholders : & [] , exception : None , regex : "^Failed to cleanup tokens with expired authorization code$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 104usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 154usize , placeholders : & ["$providerId" , "$itemId"] , exception : None , regex : "^retrieving related to item (.*)\\.(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 247usize , placeholders : & ["$providerId" , "$itemId" , "json_encode($result)"] , exception : None , regex : "^get related to (.*)\\.(.*) \\- (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 250usize , placeholders : & [] , exception : Some ("OCA\\RelatedResources\\Exceptions\\RelatedResourceNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 274usize , placeholders : & [] , exception : Some ("OCA\\RelatedResources\\Exceptions\\CacheNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 281usize , placeholders : & [] , exception : Some ("OCA\\RelatedResources\\Exceptions\\CacheNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 284usize , placeholders : & ["$providerId" , "$itemId" , "json_encode($result)"] , exception : None , regex : "^existing cache on related from (.*)\\.(.*) \\- (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 301usize , placeholders : & ["$providerId" , "$itemId" , "json_encode($related)"] , exception : None , regex : "^caching related from (.*)\\.(.*) \\- (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 339usize , placeholders : & ["$entity->getSingleId()" , "$provider->getProviderId()" , "json_encode($result)"] , exception : None , regex : "^get available items to (.*) from (.*) \\- (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 364usize , placeholders : & [] , exception : Some ("OCA\\RelatedResources\\Exceptions\\CacheNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 369usize , placeholders : & [] , exception : Some ("OCA\\RelatedResources\\Exceptions\\CacheNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 372usize , placeholders : & ["$singleId" , "$providerId" , "json_encode($result)"] , exception : None , regex : "^existing cache on available items to (.*) from (.*) \\- (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 390usize , placeholders : & ["$singleId" , "$providerId" , "json_encode($result)"] , exception : None , regex : "^caching available items to (.*) from (.*) \\- (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 522usize , placeholders : & ["$class"] , exception : Some ("ReflectionException") , regex : "^(.*) does not implements ILinkWeightCalculator$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 529usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 547usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 554usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 561usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 569usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 577usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 585usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 605usize , placeholders : & [] , exception : Some ("OCA\\RelatedResources\\Exceptions\\RelatedResourceProviderNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/related_resources/lib/Service/RelatedService.php" , line : 622usize , placeholders : & [] , exception : None , regex : "^flush cache$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/RelatedResourceProviders/DeckRelatedResourceProvider.php" , line : 200usize , placeholders : & ["$share->getRecipientType()"] , exception : Some ("Exception") , regex : "^unknown deck share type \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/RelatedResourceProviders/FilesRelatedResourceProvider.php" , line : 326usize , placeholders : & ["$shareType"] , exception : Some ("Exception") , regex : "^unknown share type \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/RelatedResourceProviders/CalendarRelatedResourceProvider.php" , line : 219usize , placeholders : & [] , exception : Some ("Exception") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/related_resources/lib/RelatedResourceProviders/TalkRelatedResourceProvider.php" , line : 119usize , placeholders : & [] , exception : None , regex : "^session restarted$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/RelatedResourceProviders/TalkRelatedResourceProvider.php" , line : 242usize , placeholders : & ["$actor->getActorType()"] , exception : Some ("Exception") , regex : "^unknown actor type \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/RelatedResourceProviders/GroupFoldersRelatedResourceProvider.php" , line : 197usize , placeholders : & [] , exception : Some ("OCA\\RelatedResources\\Exceptions\\GroupFolderNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Command/Test.php" , line : 119usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^must specify a valid local user$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Command/Test.php" , line : 128usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Circles needs to be enabled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Tools/Traits/TArrayTools.php" , line : 337usize , placeholders : & [] , exception : Some ("OCA\\RelatedResources\\Tools\\Exceptions\\ArrayNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Tools/Traits/TArrayTools.php" , line : 378usize , placeholders : & [] , exception : Some ("OCA\\RelatedResources\\Tools\\Exceptions\\UnknownTypeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Tools/Traits/TArrayTools.php" , line : 384usize , placeholders : & [] , exception : Some ("OCA\\RelatedResources\\Tools\\Exceptions\\ItemNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Tools/Traits/TArrayTools.php" , line : 393usize , placeholders : & [] , exception : Some ("OCA\\RelatedResources\\Tools\\Exceptions\\ItemNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Tools/Traits/TArrayTools.php" , line : 406usize , placeholders : & ["json_encode($arr)" , "$key"] , exception : Some ("OCA\\RelatedResources\\Tools\\Exceptions\\MalformedArrayException") , regex : "^source: (.*) \\- missing key: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Tools/Traits/TDeserialize.php" , line : 71usize , placeholders : & ["$class"] , exception : Some ("OCA\\RelatedResources\\Tools\\Exceptions\\InvalidItemException") , regex : "^cannot ReflectionClass (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Tools/Traits/TDeserialize.php" , line : 75usize , placeholders : & ["$class"] , exception : Some ("OCA\\RelatedResources\\Tools\\Exceptions\\InvalidItemException") , regex : "^(.*) does not implement IDeserializable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Tools/Db/ExtendedQueryBuilder.php" , line : 257usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCA\\RelatedResources\\Tools\\Exceptions\\DateTimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Tools/Db/ExtendedQueryBuilder.php" , line : 997usize , placeholders : & [] , exception : Some ("OCA\\RelatedResources\\Tools\\Exceptions\\InvalidItemException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Tools/Db/ExtendedQueryBuilder.php" , line : 1032usize , placeholders : & [] , exception : Some ("OCA\\RelatedResources\\Tools\\Exceptions\\RowNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Db/TalkRoomRequestBuilder.php" , line : 71usize , placeholders : & [] , exception : Some ("OCA\\RelatedResources\\Exceptions\\TalkDataNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Db/DeckRequestBuilder.php" , line : 67usize , placeholders : & [] , exception : Some ("OCA\\RelatedResources\\Exceptions\\DeckDataNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Db/FilesShareRequestBuilder.php" , line : 62usize , placeholders : & [] , exception : Some ("OCA\\RelatedResources\\Exceptions\\FilesShareNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Db/CalendarShareRequestBuilder.php" , line : 70usize , placeholders : & [] , exception : Some ("OCA\\RelatedResources\\Exceptions\\CalendarDataNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/related_resources/lib/Controller/ApiController.php" , line : 98usize , placeholders : & [] , exception : None , regex : "^RelatedResources require Circles$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/related_resources/lib/Controller/ApiController.php" , line : 122usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/lib/Controller/ApiController.php" , line : 123usize , placeholders : & ["($e->getMessage() === '') ? get_class($e) : $e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/vendor/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/vendor/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/vendor/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/vendor/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/vendor/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/vendor/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/related_resources/vendor/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Service/UserGlobalStoragesService.php" , line : 90usize , placeholders : & [] , exception : Some ("DomainException") , regex : "^UserGlobalStoragesService writing disallowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Service/UserGlobalStoragesService.php" , line : 94usize , placeholders : & [] , exception : Some ("DomainException") , regex : "^UserGlobalStoragesService writing disallowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Service/UserGlobalStoragesService.php" , line : 101usize , placeholders : & [] , exception : Some ("DomainException") , regex : "^UserGlobalStoragesService writing disallowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Service/LegacyStoragesService.php" , line : 64usize , placeholders : & ["$storageOptions['backend']"] , exception : Some ("UnexpectedValueException") , regex : "^Invalid backend (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Service/LegacyStoragesService.php" , line : 74usize , placeholders : & ["$storageOptions['authMechanism']"] , exception : Some ("UnexpectedValueException") , regex : "^Invalid authentication mechanism (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Service/LegacyStoragesService.php" , line : 146usize , placeholders : & ["$rootMountPath"] , exception : None , regex : "^Could not parse mount point \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Service/LegacyStoragesService.php" , line : 194usize , placeholders : & [] , exception : None , regex : "^Could not load storage\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Service/StoragesService.php" , line : 122usize , placeholders : & [] , exception : None , regex : "^Could not load storage\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Service/StoragesService.php" , line : 128usize , placeholders : & [] , exception : None , regex : "^Could not load storage\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Service/StoragesService.php" , line : 167usize , placeholders : & ["$id"] , exception : Some ("OCA\\Files_External\\NotFoundException") , regex : "^Storage with ID \"(.*)\" not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Service/StoragesService.php" , line : 174usize , placeholders : & ["$id"] , exception : Some ("OCA\\Files_External\\NotFoundException") , regex : "^Storage with ID \"(.*)\" not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Service/StoragesService.php" , line : 398usize , placeholders : & ["$id"] , exception : Some ("OCA\\Files_External\\NotFoundException") , regex : "^Storage with ID \"(.*)\" not found while updating storage$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Service/StoragesService.php" , line : 404usize , placeholders : & ["$id"] , exception : Some ("OCA\\Files_External\\NotFoundException") , regex : "^Storage with id \"(.*)\" cannot be edited due to missing backend$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Service/StoragesService.php" , line : 483usize , placeholders : & ["$id"] , exception : Some ("OCA\\Files_External\\NotFoundException") , regex : "^Storage with ID \"(.*)\" not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Service/BackendService.php" , line : 327usize , placeholders : & ["sprintf(\n\t\t\t\t'Invalid placeholder %s, only [a-z0-9] are allowed', $placeholder\n\t\t\t)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Service/BackendService.php" , line : 332usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Invalid empty placeholder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Service/BackendService.php" , line : 335usize , placeholders : & ["sprintf('A handler is already registered for %s', $placeholder)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Service/BackendService.php" , line : 346usize , placeholders : & ["sprintf(\n\t\t\t\t\t'Handler for %s is not an instance of IConfigHandler', $placeholder\n\t\t\t\t)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Controller/StoragesController.php" , line : 120usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Auth/Password/GlobalAuth.php" , line : 80usize , placeholders : & [] , exception : Some ("OCA\\Files_External\\Lib\\InsufficientDataForMeaningfulAnswerException") , regex : "^No credentials saved$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Auth/Password/SessionCredentials.php" , line : 61usize , placeholders : & [] , exception : Some ("OCA\\Files_External\\Lib\\InsufficientDataForMeaningfulAnswerException") , regex : "^No session credentials saved$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Auth/Password/SessionCredentials.php" , line : 65usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageAuthException") , regex : "^Session unavailable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Auth/Password/SessionCredentials.php" , line : 69usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageAuthException") , regex : "^Session credentials for storage owner not available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Auth/Password/UserProvided.php" , line : 79usize , placeholders : & [] , exception : Some ("OCA\\Files_External\\Lib\\InsufficientDataForMeaningfulAnswerException") , regex : "^No credentials saved$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Auth/Password/UserProvided.php" , line : 85usize , placeholders : & [] , exception : Some ("OCA\\Files_External\\Lib\\InsufficientDataForMeaningfulAnswerException") , regex : "^No credentials saved$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Auth/Password/UserGlobalAuth.php" , line : 77usize , placeholders : & [] , exception : Some ("OCA\\Files_External\\Lib\\InsufficientDataForMeaningfulAnswerException") , regex : "^No credentials saved$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Auth/Password/LoginCredentials.php" , line : 98usize , placeholders : & [] , exception : Some ("OCP\\Authentication\\Exceptions\\CredentialsUnavailableException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Auth/Password/LoginCredentials.php" , line : 108usize , placeholders : & [] , exception : Some ("OCA\\Files_External\\Lib\\InsufficientDataForMeaningfulAnswerException") , regex : "^No login credentials saved$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Auth/Password/LoginCredentials.php" , line : 120usize , placeholders : & [] , exception : Some ("OCA\\Files_External\\Lib\\InsufficientDataForMeaningfulAnswerException") , regex : "^No login credentials saved$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Auth/Password/LoginCredentials.php" , line : 130usize , placeholders : & ["$user->getUID()"] , exception : Some ("OCA\\Files_External\\Lib\\InsufficientDataForMeaningfulAnswerException") , regex : "^Custom ldap attribute not set for user (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Auth/Password/LoginCredentials.php" , line : 134usize , placeholders : & ["$user->getUID()"] , exception : Some ("OCA\\Files_External\\Lib\\InsufficientDataForMeaningfulAnswerException") , regex : "^Custom ldap attribute configured but user (.*) is not an ldap user$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Auth/PublicKey/RSAPrivateKey.php" , line : 67usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^unable to load private key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Auth/PublicKey/RSA.php" , line : 69usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^unable to load private key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/AmazonS3.php" , line : 259usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/AmazonS3.php" , line : 327usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/AmazonS3.php" , line : 418usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/AmazonS3.php" , line : 444usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/AmazonS3.php" , line : 473usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/AmazonS3.php" , line : 498usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/AmazonS3.php" , line : 565usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/AmazonS3.php" , line : 587usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/AmazonS3.php" , line : 600usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/AmazonS3.php" , line : 666usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/FtpConnection.php" , line : 41usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Failed to connect to ftp$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/FtpConnection.php" , line : 45usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Failed to connect to login to ftp$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/FtpConnection.php" , line : 157usize , placeholders : & ["$item"] , exception : Some ("RuntimeException") , regex : "^Metadata can't be parsed from item '(.*)' , not enough parts\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/FtpConnection.php" , line : 215usize , placeholders : & ["$item"] , exception : Some ("RuntimeException") , regex : "^Metadata can't be parsed from item '(.*)' , not enough parts\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 103usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid configuration, no host provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 112usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid configuration, no credentials provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 117usize , placeholders : & ["get_class($params['logger'])" , "LoggerInterface::class"] , exception : Some ("Exception") , regex : "^Invalid logger\\. Got (.*) Expected (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 208usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 215usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\Files\\ForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 225usize , placeholders : & [] , exception : None , regex : "^Error while getting file info$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 226usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\Files\\StorageAuthException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 258usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 259usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 278usize , placeholders : & ["$file->getName()"] , exception : None , regex : "^Hiding non readable entry (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 284usize , placeholders : & ["$file->getName()"] , exception : None , regex : "^hiding hidden file (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 290usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 292usize , placeholders : & ["$file->getName()"] , exception : None , regex : "^Hiding forbidden entry (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 296usize , placeholders : & [] , exception : None , regex : "^Error while getting folder content$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 297usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 299usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 347usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 355usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 359usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 450usize , placeholders : & [] , exception : None , regex : "^Error while deleting file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 451usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 535usize , placeholders : & [] , exception : Some ("OCP\\Files\\EntityTooLargeException") , regex : "^not enough available space to create file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 537usize , placeholders : & [] , exception : None , regex : "^Error while opening file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 538usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 564usize , placeholders : & [] , exception : None , regex : "^Error while removing folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 565usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 578usize , placeholders : & [] , exception : Some ("OCP\\Files\\EntityTooLargeException") , regex : "^not enough available space to create file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 580usize , placeholders : & [] , exception : None , regex : "^Error while creating file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 581usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 677usize , placeholders : & [] , exception : None , regex : "^Error while creating folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 678usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 704usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/SMB.php" , line : 766usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/FTP.php" , line : 66usize , placeholders : & ["self::class"] , exception : Some ("Exception") , regex : "^Creating (.*) storage failed, required parameters not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/FTP.php" , line : 85usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^Failed to create ftp connection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/FTP.php" , line : 89usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^Could not set UTF\\-8 mode$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/files_external/lib/Lib/Storage/FTP.php" , line : 120usize , placeholders : & ["$path"] , exception : None , regex : "^Unable to get last modified date for ftp folder \\((.*)\\), failed to list folder contents$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/FTP.php" , line : 130usize , placeholders : & ["$currentDir"] , exception : Some ("Exception") , regex : "^Invalid date format for directory: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/files_external/lib/Lib/Storage/FTP.php" , line : 134usize , placeholders : & ["$path"] , exception : None , regex : "^Unable to get last modified date for ftp folder \\((.*)\\), folder contents doesn't include current folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SFTPWriteStream.php" , line : 71usize , placeholders : & ["$name"] , exception : Some ("BadMethodCallException") , regex : "^Invalid context, \"(.*)\" options not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SFTPWriteStream.php" , line : 76usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Invalid context, session not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/Swift.php" , line : 142usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/Swift.php" , line : 170usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageBadConfigException") , regex : "^API Key or password, Login, Bucket and Region have to be configured\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/Swift.php" , line : 236usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/Swift.php" , line : 280usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/Swift.php" , line : 318usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/Swift.php" , line : 341usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/Swift.php" , line : 395usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/Swift.php" , line : 419usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/Swift.php" , line : 506usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Lib/Storage/Swift.php" , line : 522usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/Swift.php" , line : 561usize , placeholders : & [] , exception : Some ("Exception") , regex : "^failed to remove original$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SFTP.php" , line : 102usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^no authentication parameters specified$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SFTP.php" , line : 114usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^no authentication parameters specified$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SFTP.php" , line : 143usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Host public key does not match known key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SFTP.php" , line : 160usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Login failed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SFTP.php" , line : 509usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Failed to wrap stream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SFTP.php" , line : 518usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Failed to write steam to sftp storage$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SFTPReadStream.php" , line : 73usize , placeholders : & ["$name"] , exception : Some ("BadMethodCallException") , regex : "^Invalid context, \"(.*)\" options not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Storage/SFTPReadStream.php" , line : 78usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Invalid context, session not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Backend/SMB.php" , line : 87usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^user or password is not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Backend/SMB.php" , line : 102usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^invalid authentication backend$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Backend/SMB.php" , line : 132usize , placeholders : & [] , exception : Some ("OCA\\Files_External\\Lib\\InsufficientDataForMeaningfulAnswerException") , regex : "^No session credentials saved$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Lib/Backend/SMB.php" , line : 138usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^unknown authentication backend$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Migration/Version1015Date20211104103506.php" , line : 58usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not fetch existing mounts for migration$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/files_external/lib/Migration/Version1015Date20211104103506.php" , line : 72usize , placeholders : & ["$mount['mount_id']" , "$newId"] , exception : None , regex : "^Migrated s3 storage id for mount with id (.*) to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/Migration/Version1015Date20211104103506.php" , line : 74usize , placeholders : & ["$mount['mount_id']"] , exception : None , regex : "^Failed to migrate external s3 storage id for mount with id (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Command/ListCommand.php" , line : 252usize , placeholders : & ["$userId"] , exception : Some ("OC\\User\\NoUserException") , regex : "^user (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Command/Create.php" , line : 196usize , placeholders : & ["$userId"] , exception : Some ("OC\\User\\NoUserException") , regex : "^user (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Command/StorageAuthBase.php" , line : 118usize , placeholders : & [] , exception : Some ("Exception") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Command/Import.php" , line : 191usize , placeholders : & ["$userId"] , exception : Some ("OC\\User\\NoUserException") , regex : "^user (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/files_external/lib/Command/Notify.php" , line : 138usize , placeholders : & [] , exception : None , regex : "^Error while trying to find correct storage ids\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/files_external/lib/Command/Notify.php" , line : 165usize , placeholders : & ["$path"] , exception : None , regex : "^Failed updating parent for \"(.*)\" while trying to register change\\. It may not exist in the filecache\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/files_external/lib/Command/Notify.php" , line : 219usize , placeholders : & [] , exception : None , regex : "^Error while disconnecting from DB$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/files_external/lib/Command/Notify.php" , line : 227usize , placeholders : & [] , exception : None , regex : "^Error while re\\-connecting to database$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_external/lib/MountConfig.php" , line : 141usize , placeholders : & ["$exception->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Config/SimpleSubstitutionTrait.php" , line : 67usize , placeholders : & ["sprintf(\n\t\t\t\t'Invalid placeholder %s, only [a-z0-9] are allowed', $this->sanitizedPlaceholder\n\t\t\t)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Config/SimpleSubstitutionTrait.php" , line : 72usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Invalid empty placeholder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/lib/Config/ConfigAdapter.php" , line : 73usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid object store$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/composer/ClassLoader.php" , line : 256usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/composer/ClassLoader.php" , line : 311usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Native/NativeFileInfo.php" , line : 55usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\Exception") , regex : "^Invalid attribute response$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Native/NativeFileInfo.php" , line : 58usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\Exception") , regex : "^Invalid attribute response$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Native/NativeFileInfo.php" , line : 61usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\Exception") , regex : "^Invalid attribute response$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Native/NativeState.php" , line : 373usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\Exception") , regex : "^Failed to free smb state$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Native/NativeShare.php" , line : 227usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\InvalidPathException") , regex : "^Invalid target path: Filename cannot be empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Native/NativeShare.php" , line : 241usize , placeholders : & ["$target" , "$reason"] , exception : Some ("Icewind\\SMB\\Exception\\InvalidResourceException") , regex : "^Failed opening local file \"(.*)\" for writing: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Native/NativeShare.php" , line : 321usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid value for attribute$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Native/NativeShare.php" , line : 350usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\DependencyException") , regex : "^smbclient not found in path for notify command$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Native/NativeStream.php" , line : 56usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\Exception") , regex : "^Failed to register stream wrapper$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Native/NativeStream.php" , line : 67usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\Exception") , regex : "^Failed to unregister stream wrapper$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Native/NativeStream.php" , line : 92usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^context not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Native/NativeStream.php" , line : 96usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^invalid context set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Native/NativeStream.php" , line : 101usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^invalid context set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Native/NativeStream.php" , line : 106usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^invalid context set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Share.php" , line : 93usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\Exception") , regex : "^Backend not available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Share.php" , line : 111usize , placeholders : & ["(string)$connection->readLine()"] , exception : Some ("Icewind\\SMB\\Exception\\ConnectionException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Share.php" , line : 144usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\ConnectionException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Share.php" , line : 271usize , placeholders : & ["$path"] , exception : Some ("Icewind\\SMB\\Exception\\InvalidTypeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Share.php" , line : 357usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\Exception") , regex : "^Failed to wrap file output$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Share.php" , line : 391usize , placeholders : & ["$target"] , exception : Some ("Icewind\\SMB\\Exception\\InvalidRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Share.php" , line : 404usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\DependencyException") , regex : "^php\\-libsmbclient is required for append$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Share.php" , line : 444usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\DependencyException") , regex : "^stdbuf is required for usage of the notify command$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Share.php" , line : 540usize , placeholders : & ["(string)$connection->readLine()"] , exception : Some ("Icewind\\SMB\\Exception\\ConnectionException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Connection.php" , line : 57usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\ConnectionRefusedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Connection.php" , line : 75usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\ConnectionException") , regex : "^Connection not valid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Connection.php" , line : 98usize , placeholders : & ["$promptLine"] , exception : Some ("Icewind\\SMB\\Exception\\ConnectException") , regex : "^Unknown error \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Connection.php" , line : 102usize , placeholders : & ["$error"] , exception : Some ("Icewind\\SMB\\Exception\\ConnectException") , regex : "^Unknown error \\(stderr: (.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Connection.php" , line : 104usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\ConnectException") , regex : "^Unknown error$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Server.php" , line : 51usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\Exception") , regex : "^Backend not available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Server.php" , line : 66usize , placeholders : & ["(string)$connection->readLine()"] , exception : Some ("Icewind\\SMB\\Exception\\ConnectionException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Server.php" , line : 85usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\ConnectionRefusedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Parser.php" , line : 83usize , placeholders : & ["$path"] , exception : Some ("Icewind\\SMB\\Exception\\NotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Parser.php" , line : 89usize , placeholders : & ["$localPath"] , exception : Some ("Icewind\\SMB\\Exception\\InvalidResourceException") , regex : "^Failed opening local file \"(.*)\" for writing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Parser.php" , line : 107usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\AuthenticationException") , regex : "^Invalid login$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Parser.php" , line : 110usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\InvalidHostException") , regex : "^Invalid hostname$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Parser.php" , line : 113usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\InvalidHostException") , regex : "^Connection unsuccessful$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Parser.php" , line : 116usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\InvalidHostException") , regex : "^Connection refused$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Parser.php" , line : 119usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\NoLoginServerException") , regex : "^No login server$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Parser.php" , line : 122usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\AccessDeniedException") , regex : "^Access denied$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/Parser.php" , line : 157usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\Exception") , regex : "^Malformed state response from server$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/RawConnection.php" , line : 60usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\ConnectException") , regex : "^Authentication not set before connecting$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/Wrapped/RawConnection.php" , line : 83usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\ConnectionException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/ServerFactory.php" , line : 83usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\DependencyException") , regex : "^No valid backend available, ensure smbclient is in the path or php\\-smbclient is installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/System.php" , line : 33usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\Exception") , regex : "^Cant find file descriptor path$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/KerberosAuth.php" , line : 51usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\Exception") , regex : "^Failed to set smbclient options for kerberos auth$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/KerberosApacheAuth.php" , line : 104usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\DependencyException") , regex : "^Ensure php\\-krb5 is installed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/KerberosApacheAuth.php" , line : 109usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\Exception") , regex : "^No kerberos ticket cache environment variable \\(KRB5CCNAME\\) found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/AnonymousAuth.php" , line : 45usize , placeholders : & [] , exception : Some ("Icewind\\SMB\\Exception\\Exception") , regex : "^Failed to set smbclient options for anonymous auth$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/smb/src/AbstractShare.php" , line : 27usize , placeholders : & ["$char"] , exception : Some ("Icewind\\SMB\\Exception\\InvalidPathException") , regex : "^Invalid path, \"(.*)\" is not allowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/streams/src/UrlCallback.php" , line : 133usize , placeholders : & [] , exception : Some ("Exception") , regex : "^stat is not supported due to php bug 50526$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/streams/src/CountWrapper.php" , line : 64usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid or missing callback$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/streams/src/IteratorDirectory.php" , line : 48usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Invalid context, iterator or array not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/streams/src/IteratorDirectory.php" , line : 109usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^\\$source should be an Iterator or array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/streams/src/Wrapper.php" , line : 40usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Invalid context, source not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/streams/src/WrapperHandler.php" , line : 87usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Invalid stream source$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_external/3rdparty/icewind/streams/src/WrapperHandler.php" , line : 110usize , placeholders : & ["$name"] , exception : Some ("BadMethodCallException") , regex : "^Invalid context, \"(.*)\" options not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesCreate.php" , line : 126usize , placeholders : & ["get_class($e)" , "$e->getStatus()" , "$e->getMessage()"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemException") , regex : "^ \\[(.*), (.*)\\]\n(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesTest.php" , line : 431usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\ItemNotFoundException") , regex : "^local not defined$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesTest.php" , line : 517usize , placeholders : & ["$v"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesTest.php" , line : 534usize , placeholders : & [] , exception : Some ("Exception") , regex : "^no$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesTest.php" , line : 715usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\InvalidItemException") , regex : "^could not parse circle\\.name$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesTest.php" , line : 751usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\InvalidItemException") , regex : "^empty id or owner\\.member_id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesTest.php" , line : 973usize , placeholders : & [] , exception : Some ("Exception") , regex : "^empty owner$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesTest.php" , line : 976usize , placeholders : & ["$prefix" , "$prefix"] , exception : Some ("Exception") , regex : "^(.*)\\.owner\\.circleId is different than (.*)\\.id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesTest.php" , line : 985usize , placeholders : & [] , exception : Some ("Exception") , regex : "^empty initiator$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesTest.php" , line : 989usize , placeholders : & ["$prefix" , "$prefix"] , exception : Some ("Exception") , regex : "^(.*)\\.initiator\\.circleId is different than (.*)\\.id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesTest.php" , line : 1030usize , placeholders : & ["$prefix"] , exception : Some ("Exception") , regex : "^empty (.*)\\.basedOn$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesTest.php" , line : 1055usize , placeholders : & ["$def" , "$compare" , "$expected"] , exception : Some ("Exception") , regex : "^(.*): (.*) \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesTest.php" , line : 1071usize , placeholders : & ["$def" , "$compare" , "$expected"] , exception : Some ("Exception") , regex : "^wrong (.*): (.*) \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesTest.php" , line : 1107usize , placeholders : & ["$userId"] , exception : Some ("OCA\\Circles\\Exceptions\\CircleNotFoundException") , regex : "^cannot find (.*) in the list of Single Circle$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesTest.php" , line : 1124usize , placeholders : & ["$name"] , exception : Some ("OCA\\Circles\\Exceptions\\CircleNotFoundException") , regex : "^cannot extract '(.*)' from the list of generated Circles$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesTest.php" , line : 1144usize , placeholders : & ["$name"] , exception : Some ("OCA\\Circles\\Exceptions\\CircleNotFoundException") , regex : "^cannot extract  '(.*)' from the list of provided Circles$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesTest.php" , line : 1190usize , placeholders : & ["$instance"] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\ItemNotFoundException") , regex : "^(.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesTest.php" , line : 1235usize , placeholders : & ["implode(' ', $command)"] , exception : Some ("Exception") , regex : "^(.*) failed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesDestroy.php" , line : 130usize , placeholders : & ["get_class($e)" , "$e->getStatus()" , "$e->getMessage()"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemException") , regex : "^ \\[(.*), (.*)\\]\n(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesMemberships.php" , line : 203usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Not enough arguments \\(missing: \"userId\"\\)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesConfig.php" , line : 138usize , placeholders : & ["get_class($e)" , "$e->getStatus()" , "$e->getMessage()"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemException") , regex : "^ \\[(.*), (.*)\\]\n(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesConfig.php" , line : 180usize , placeholders : & ["$item" , "implode(', ', array_values($valid))"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid config '(.*)'\\. Available values: (.*)\\. To disable a config, start the value with an underscore$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesRemote.php" , line : 519usize , placeholders : & ["implode(', ', RemoteInstance::$LIST_TYPE)"] , exception : Some ("Exception") , regex : "^Unknown type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesRemote.php" , line : 532usize , placeholders : & ["implode(', ', InterfaceService::$LIST_IFACE)"] , exception : Some ("Exception") , regex : "^Unknown interface: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/MembersAdd.php" , line : 131usize , placeholders : & ["get_class($e)" , "$e->getStatus()" , "$e->getMessage()"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemException") , regex : "^ \\[(.*), (.*)\\]\n(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesCheck.php" , line : 128usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Please specify a \\-\\-type for the test$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesCheck.php" , line : 131usize , placeholders : & ["implode(', ', self::$checks)"] , exception : Some ("Exception") , regex : "^Unknown type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesCheck.php" , line : 211usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Your Circles App is not fully configured\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesCheck.php" , line : 247usize , placeholders : & [] , exception : Some ("Exception") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesCheck.php" , line : 814usize , placeholders : & [] , exception : Some ("Exception") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesJoin.php" , line : 141usize , placeholders : & ["get_class($e)" , "$e->getStatus()" , "$e->getMessage()"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemException") , regex : "^ \\[(.*), (.*)\\]\n(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesLeave.php" , line : 121usize , placeholders : & ["get_class($e)" , "$e->getStatus()" , "$e->getMessage()"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemException") , regex : "^ \\[(.*), (.*)\\]\n(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesSetting.php" , line : 141usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^you need to specify a value$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesSetting.php" , line : 151usize , placeholders : & ["get_class($e)" , "$e->getStatus()" , "$e->getMessage()"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemException") , regex : "^ \\[(.*), (.*)\\]\n(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesDetails.php" , line : 173usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\CircleNotFoundException") , regex : "^unknown circle, use \\-\\-instance to retrieve the data from a remote instance$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesDetails.php" , line : 180usize , placeholders : & ["get_class($e)" , "$e->getStatus()" , "$e->getMessage()"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemException") , regex : "^ \\[(.*), (.*)\\]\n(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/SharesFiles.php" , line : 316usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Specify a FileId or an option: \\-\\-with \\(USER\\), \\-\\-by \\(USER\\), \\-\\-to \\(CIRCLE\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/MembersLevel.php" , line : 155usize , placeholders : & ["get_class($e)" , "$e->getStatus()" , "$e->getMessage()"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemException") , regex : "^ \\[(.*), (.*)\\]\n(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesReport.php" , line : 136usize , placeholders : & [] , exception : Some ("Exception") , regex : "^not available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesEdit.php" , line : 118usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^edit can only be 'displayName' or 'description'$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Command/CirclesEdit.php" , line : 122usize , placeholders : & ["get_class($e)" , "$e->getStatus()" , "$e->getMessage()"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemException") , regex : "^ \\[(.*), (.*)\\]\n(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/CircleConfig.php" , line : 158usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemBadRequestException") , regex : "^Configuration value is not valid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/SingleMemberAdd.php" , line : 209usize , placeholders : & ["StatusCode::$MEMBER_ADD[120]"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/SingleMemberAdd.php" , line : 215usize , placeholders : & ["StatusCode::$MEMBER_ADD[132]"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/SingleMemberAdd.php" , line : 219usize , placeholders : & ["StatusCode::$MEMBER_ADD[125]"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/SingleMemberAdd.php" , line : 225usize , placeholders : & ["StatusCode::$MEMBER_ADD[131]"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/SingleMemberAdd.php" , line : 229usize , placeholders : & ["StatusCode::$MEMBER_ADD[128]"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/SingleMemberAdd.php" , line : 234usize , placeholders : & ["StatusCode::$MEMBER_ADD[126]"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/SingleMemberAdd.php" , line : 240usize , placeholders : & ["StatusCode::$MEMBER_ADD[127]"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/SingleMemberAdd.php" , line : 290usize , placeholders : & ["StatusCode::$MEMBER_ADD[123]"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/SingleMemberAdd.php" , line : 294usize , placeholders : & ["StatusCode::$MEMBER_ADD[122]"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/SingleMemberAdd.php" , line : 322usize , placeholders : & ["StatusCode::$MEMBER_ADD[129]"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/SingleMemberAdd.php" , line : 327usize , placeholders : & ["StatusCode::$MEMBER_ADD[130]"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/CircleEdit.php" , line : 106usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\CircleNameTooShortException") , regex : "^Circle name is too short$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/CircleCreate.php" , line : 127usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedEventDSyncException") , regex : "^Circle already exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/CircleCreate.php" , line : 135usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedEventDSyncException") , regex : "^Owner already exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/MemberDisplayName.php" , line : 110usize , placeholders : & ["StatusCode::$MEMBER_DISPLAY_NAME[120]"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/CircleDestroy.php" , line : 105usize , placeholders : & ["StatusCode::$CIRCLE_DESTROY[120]"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/CircleLeave.php" , line : 150usize , placeholders : & ["StatusCode::$CIRCLE_LEAVE[120]"] , exception : Some ("OCA\\Circles\\Exceptions\\MemberNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/CircleLeave.php" , line : 155usize , placeholders : & ["StatusCode::$CIRCLE_LEAVE[121]"] , exception : Some ("OCA\\Circles\\Exceptions\\MemberNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/CircleLeave.php" , line : 253usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\MemberNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/MemberLevel.php" , line : 111usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemBadRequestException") , regex : "^This level cannot be edited$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/MemberLevel.php" , line : 116usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemBadRequestException") , regex : "^invalid level$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/MemberLevel.php" , line : 120usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemBadRequestException") , regex : "^This member already have the selected level$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/CircleJoin.php" , line : 284usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Blocked$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/CircleJoin.php" , line : 287usize , placeholders : & ["StatusCode::$CIRCLE_JOIN[123]"] , exception : Some ("OCA\\Circles\\Exceptions\\MemberAlreadyExistsException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/CircleJoin.php" , line : 298usize , placeholders : & ["StatusCode::$CIRCLE_JOIN[122]"] , exception : Some ("OCA\\Circles\\Exceptions\\MemberAlreadyExistsException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/FederatedItems/CircleJoin.php" , line : 301usize , placeholders : & ["StatusCode::$CIRCLE_JOIN[124]"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/Provider.php" , line : 84usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/Provider.php" , line : 88usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectMember.php" , line : 60usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectMember.php" , line : 85usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectMember.php" , line : 114usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectMember.php" , line : 139usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectMember.php" , line : 166usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectMember.php" , line : 194usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectMember.php" , line : 221usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectMember.php" , line : 248usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectMember.php" , line : 277usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectMember.php" , line : 302usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectMember.php" , line : 331usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectMember.php" , line : 356usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectMember.php" , line : 377usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectMember.php" , line : 406usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectMember.php" , line : 432usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectMember.php" , line : 456usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectCircle.php" , line : 54usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectCircle.php" , line : 74usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectCircleMember.php" , line : 91usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectCircleMember.php" , line : 116usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectCircleMember.php" , line : 141usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Activity/ProviderSubjectCircleMember.php" , line : 166usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FakeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Notification/Notifier.php" , line : 141usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Notification/Notifier.php" , line : 216usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Dashboard/TeamDashboardWidget.php" , line : 67usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FrontendException") , regex : "^frontend disabled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/circles/lib/Dashboard/TeamDashboardWidget.php" , line : 88usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/CirclesManager.php" , line : 257usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedUserNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/CirclesManager.php" , line : 410usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\CircleNotFoundException") , regex : "^This Circle is not managed from this instance$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Db/ShareTokenRequestBuilder.php" , line : 103usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\ShareTokenNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Db/CoreQueryBuilder.php" , line : 1715usize , placeholders : & ["$extension" , "$search"] , exception : Some ("OCA\\Circles\\Exceptions\\RequestBuilderException") , regex : "^(.*) not found in (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Db/CircleRequestBuilder.php" , line : 112usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\CircleNotFoundException") , regex : "^Circle not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Db/CircleRequestBuilder.php" , line : 114usize , placeholders : & ["$qb->getSQL()"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Db/EventWrapperRequestBuilder.php" , line : 104usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\EventWrapperNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Db/AccountsRequest.php" , line : 73usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\MemberDoesNotExistException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Db/MembershipRequestBuilder.php" , line : 105usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\MembershipNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Db/MemberRequestBuilder.php" , line : 121usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\MemberNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Db/CircleRequest.php" , line : 398usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedUserNotFoundException") , regex : "^singleId not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Db/CircleRequest.php" , line : 434usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\SingleCircleNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Db/RemoteRequestBuilder.php" , line : 106usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\RemoteNotFoundException") , regex : "^Unknown remote instance$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Db/CoreRequestBuilder.php" , line : 247usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\InvalidIdException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Db/MountRequestBuilder.php" , line : 101usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\MountNotFoundException") , regex : "^Mount not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Db/ShareLockRequestBuilder.php" , line : 102usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedShareNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Db/GSSharesRequest.php" , line : 152usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Db/GSSharesRequest.php" , line : 176usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Db/TokensRequest.php" , line : 56usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\TokenDoesNotExistException") , regex : "^Unknown share token$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Db/TokensRequest.php" , line : 81usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\TokenDoesNotExistException") , regex : "^Unknown share token$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Db/ShareWrapperRequestBuilder.php" , line : 106usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\ShareWrapperNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Membership.php" , line : 282usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\InvalidItemException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Membership.php" , line : 306usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\MembershipNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/DeprecatedCircle.php" , line : 242usize , placeholders : & ["$this->l10n->t(\"This feature is not available for personal circles\")"] , exception : Some ("OCA\\Circles\\Exceptions\\CircleTypeNotValidException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/DeprecatedCircle.php" , line : 254usize , placeholders : & ["$this->l10n->t('The team is not federated')"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedCircleNotAllowedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Helpers/MemberHelper.php" , line : 91usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\MemberHelperException") , regex : "^unknown method call$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Helpers/MemberHelper.php" , line : 106usize , placeholders : & ["$levelString"] , exception : Some ("OCA\\Circles\\Exceptions\\MemberHelperException") , regex : "^method (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Helpers/MemberHelper.php" , line : 124usize , placeholders : & ["$levelString"] , exception : Some ("OCA\\Circles\\Exceptions\\MemberHelperException") , regex : "^method (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Helpers/MemberHelper.php" , line : 128usize , placeholders : & ["$levelString"] , exception : Some ("OCA\\Circles\\Exceptions\\MemberLevelException") , regex : "^Member cannot be (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Helpers/MemberHelper.php" , line : 140usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\MemberLevelException") , regex : "^Insufficient rights$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Helpers/MemberHelper.php" , line : 152usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\MemberLevelException") , regex : "^Insufficient rights$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Helpers/MemberHelper.php" , line : 164usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\MemberLevelException") , regex : "^Insufficient rights$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/DeprecatedMember.php" , line : 42usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\CircleTypeNotValidException") , regex : "^Invalid circle type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/DeprecatedMember.php" , line : 68usize , placeholders : & ["$this->l10n->t('You cannot join this team')"] , exception : Some ("OCA\\Circles\\Exceptions\\MemberCantJoinCircleException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/DeprecatedMember.php" , line : 121usize , placeholders : & ["$this->l10n->t('This member is not a moderator')"] , exception : Some ("OCA\\Circles\\Exceptions\\MemberIsNotModeratorException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/DeprecatedMember.php" , line : 135usize , placeholders : & ["$this->l10n->t('Insufficient privileges')"] , exception : Some ("OCA\\Circles\\Exceptions\\ModeratorIsNotHighEnoughException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/DeprecatedMember.php" , line : 147usize , placeholders : & ["$this->l10n->t('This member does not exist')"] , exception : Some ("OCA\\Circles\\Exceptions\\MemberDoesNotExistException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/DeprecatedMember.php" , line : 162usize , placeholders : & ["$this->l10n->t('This member does not exist')"] , exception : Some ("OCA\\Circles\\Exceptions\\MemberDoesNotExistException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/DeprecatedMember.php" , line : 171usize , placeholders : & ["$this->l10n->t('This member is the owner of the team')"] , exception : Some ("OCA\\Circles\\Exceptions\\MemberIsOwnerException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/DeprecatedMember.php" , line : 212usize , placeholders : & ["$this->l10n->t('Level cannot be changed for this type of member')"] , exception : Some ("OCA\\Circles\\Exceptions\\MemberTypeCantEditLevelException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/DeprecatedMember.php" , line : 225usize , placeholders : & ["$this->l10n->t(\"You are already a member of this circle\")"] , exception : Some ("OCA\\Circles\\Exceptions\\MemberAlreadyExistsException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/DeprecatedMember.php" , line : 231usize , placeholders : & ["$this->l10n->t(\"You have been blocked from this circle\")"] , exception : Some ("OCA\\Circles\\Exceptions\\MemberIsBlockedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/DeprecatedMember.php" , line : 243usize , placeholders : & ["$this->l10n->t(\"The account is already a member of this circle\")"] , exception : Some ("OCA\\Circles\\Exceptions\\MemberAlreadyExistsException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/DeprecatedMember.php" , line : 249usize , placeholders : & ["$this->l10n->t(\"The account has already been invited into this circle\")"] , exception : Some ("OCA\\Circles\\Exceptions\\MemberAlreadyExistsException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Circle.php" , line : 635usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\OwnerNotFoundException") , regex : "^circle has no owner$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Circle.php" , line : 800usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\InvalidItemException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Circle.php" , line : 897usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\CircleNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Member.php" , line : 745usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\MembershipNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Member.php" , line : 796usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\InvalidItemException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Member.php" , line : 855usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\MemberNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Member.php" , line : 967usize , placeholders : & ["$all"] , exception : Some ("OCA\\Circles\\Exceptions\\ParseMemberLevelException") , regex : "^Available levels: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Member.php" , line : 986usize , placeholders : & ["$all"] , exception : Some ("OCA\\Circles\\Exceptions\\ParseMemberLevelException") , regex : "^Available levels: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Member.php" , line : 1007usize , placeholders : & ["$all"] , exception : Some ("OCA\\Circles\\Exceptions\\UserTypeNotFoundException") , regex : "^Available types: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/GlobalScale/GSEvent.php" , line : 407usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\JsonException") , regex : "^invalid JSON$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/GlobalScale/GSEvent.php" , line : 439usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\ModelException") , regex : "^invalid GSEvent$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/SharingFrame.php" , line : 268usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\SharingFrameSourceCannotBeAppCirclesException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/ShareToken.php" , line : 260usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\InvalidItemException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/ShareToken.php" , line : 285usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\ShareTokenNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/ShareWrapper.php" , line : 469usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\InvalidItemException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/FederatedUser.php" , line : 353usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\InvalidItemException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/FederatedUser.php" , line : 389usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\OwnerNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/FederatedUser.php" , line : 426usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedUserNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Federated/RemoteInstance.php" , line : 471usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\RemoteUidException") , regex : "^identity not authed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Federated/RemoteInstance.php" , line : 549usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\RemoteNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/Mount.php" , line : 432usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\CircleNotFoundException") , regex : "^ShareWrapper has no Circle$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/FileCacheWrapper.php" , line : 266usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\InvalidItemException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/FileCacheWrapper.php" , line : 300usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FileCacheNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/FederatedLink.php" , line : 310usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedCircleStatusUpdateException") , regex : "^The status could not be updated$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/FederatedLink.php" , line : 326usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedCircleStatusUpdateException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/FederatedLink.php" , line : 343usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedCircleStatusUpdateException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/FederatedLink.php" , line : 359usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedCircleStatusUpdateException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Model/FederatedLink.php" , line : 377usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedCircleStatusUpdateException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/circles/lib/Tools/ActivityPub/NCSignature.php" , line : 102usize , placeholders : & [] , exception : None , regex : "^\\[<<\\] incoming$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/ActivityPub/NCSignature.php" , line : 152usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\SignatureException") , regex : "^datetime exception$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/ActivityPub/NCSignature.php" , line : 156usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\SignatureException") , regex : "^object is too old$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/ActivityPub/NCSignature.php" , line : 170usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\SignatureException") , regex : "^issue with content\\-length$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/ActivityPub/NCSignature.php" , line : 175usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\SignatureException") , regex : "^issue with digest$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/ActivityPub/NCSignature.php" , line : 216usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\SignatureException") , regex : "^missing elements in 'headers'$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/ActivityPub/NCSignature.php" , line : 228usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\SignatureException") , regex : "^empty elements in 'headers'$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/ActivityPub/NCSignature.php" , line : 279usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\SignatureException") , regex : "^empty public key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/circles/lib/Tools/ActivityPub/NCSignature.php" , line : 290usize , placeholders : & [] , exception : None , regex : "^signature issue$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Model/NCRequestResult.php" , line : 165usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\RequestContentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Model/SimpleDataStore.php" , line : 281usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\InvalidItemException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Model/SimpleDataStore.php" , line : 291usize , placeholders : & ["$class"] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\InvalidItemException") , regex : "^(.*) does not implement IDeserializable and JsonSerializable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Model/SimpleDataStore.php" , line : 301usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\InvalidItemException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Model/SimpleDataStore.php" , line : 367usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\ItemNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Model/SimpleDataStore.php" , line : 419usize , placeholders : & ["$key" , "json_encode($this->keys())"] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\MalformedArrayException") , regex : "^(.*) missing in (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Traits/TArrayTools.php" , line : 337usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\ArrayNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Traits/TArrayTools.php" , line : 378usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\UnknownTypeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Traits/TArrayTools.php" , line : 384usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\ItemNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Traits/TArrayTools.php" , line : 393usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\ItemNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Traits/TArrayTools.php" , line : 406usize , placeholders : & ["json_encode($arr)" , "$key"] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\MalformedArrayException") , regex : "^source: (.*) \\- missing key: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Traits/TNCSignatory.php" , line : 57usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\SignatoryException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/circles/lib/Tools/Traits/TNCSignatory.php" , line : 94usize , placeholders : & [] , exception : None , regex : "^network issue while downloading Signatory$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Traits/TNCSignatory.php" , line : 95usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\SignatoryException") , regex : "^network issue: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/circles/lib/Tools/Traits/TNCSignatory.php" , line : 120usize , placeholders : & [] , exception : None , regex : "^invalid format$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Traits/TNCSignatory.php" , line : 121usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\SignatoryException") , regex : "^invalid format$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Traits/TNCSignatory.php" , line : 124usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\SignatoryException") , regex : "^invalid origin$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Traits/TNCSignatory.php" , line : 141usize , placeholders : & ["$keyId"] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\InvalidOriginException") , regex : "^cannot retrieve origin from (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Traits/TNCSignatory.php" , line : 183usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\SignatoryException") , regex : "^empty private key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Traits/TNCSignatory.php" , line : 204usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\SignatureException") , regex : "^signature issue$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Tools/Traits/TNCLogger.php" , line : 74usize , placeholders : & ["$level"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Traits/TNCLogger.php" , line : 90usize , placeholders : & ["$e"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Tools/Traits/TNCLogger.php" , line : 114usize , placeholders : & ["$level"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Tools/Traits/TNCLogger.php" , line : 131usize , placeholders : & ["self::$EMERGENCY"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Tools/Traits/TNCLogger.php" , line : 140usize , placeholders : & ["self::$ALERT"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Tools/Traits/TNCLogger.php" , line : 149usize , placeholders : & ["self::$WARNING"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Tools/Traits/TNCLogger.php" , line : 158usize , placeholders : & ["self::$NOTICE"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Tools/Traits/TNCLogger.php" , line : 168usize , placeholders : & ["$debugLevel"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Tools/Traits/TNCLogger.php" , line : 187usize , placeholders : & ["$level"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/circles/lib/Tools/Traits/TNCRequest.php" , line : 83usize , placeholders : & [] , exception : None , regex : "^doRequest initiated$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Traits/TNCRequest.php" , line : 93usize , placeholders : & ["$e"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/circles/lib/Tools/Traits/TNCRequest.php" , line : 97usize , placeholders : & [] , exception : None , regex : "^doRequest done$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Traits/TNCRequest.php" , line : 100usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\RequestNetworkException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Traits/TNCRequest.php" , line : 175usize , placeholders : & ["json_encode($request)"] , exception : Some ("Exception") , regex : "^unknown request type (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Traits/TNCLocalSignatory.php" , line : 69usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\SignatoryException") , regex : "^signatory not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Traits/TNCWellKnown.php" , line : 126usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\WellKnownLinkNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Db/ExtendedQueryBuilder.php" , line : 261usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\DateTimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Db/ExtendedQueryBuilder.php" , line : 995usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\InvalidItemException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Tools/Db/ExtendedQueryBuilder.php" , line : 1030usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\RowNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/circles/lib/Service/OutputService.php" , line : 88usize , placeholders : & ["$message"] , exception : None , regex : "^\\(Circles\\) (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/ContactService.php" , line : 134usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\ContactFormatException") , regex : "^issue with contact format USERID/ADDRESSBOOK/CONTACTID$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/ContactService.php" , line : 151usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\ContactNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/ContactService.php" , line : 172usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\ContactAddressBookNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/ContactService.php" , line : 190usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\ContactAddressBookNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/PermissionService.php" , line : 77usize , placeholders : & ["$this->l10n->t('You have no permission to create a new team')"] , exception : Some ("OCA\\Circles\\Exceptions\\InsufficientPermissionException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/PermissionService.php" , line : 102usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\InsufficientPermissionException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/PermissionService.php" , line : 116usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\MembershipNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteDownstreamService.php" , line : 144usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedEventDSyncException") , regex : "^Circle is not from this instance$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteDownstreamService.php" , line : 150usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedEventException") , regex : "^Instance have no members in this Circle$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteDownstreamService.php" , line : 225usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedEventDSyncException") , regex : "^Could not verify Circle$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/circles/lib/Service/RemoteDownstreamService.php" , line : 266usize , placeholders : & [] , exception : None , regex : "^failed to compare Circles$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteDownstreamService.php" , line : 291usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedEventDSyncException") , regex : "^Could not verify Member$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/circles/lib/Service/RemoteDownstreamService.php" , line : 301usize , placeholders : & [] , exception : None , regex : "^verifyMember\\(\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/circles/lib/Service/RemoteDownstreamService.php" , line : 307usize , placeholders : & [] , exception : None , regex : "^Member not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/circles/lib/Service/RemoteDownstreamService.php" , line : 313usize , placeholders : & [] , exception : None , regex : "^failed to compare Members$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/circles/lib/Service/RemoteDownstreamService.php" , line : 333usize , placeholders : & [] , exception : None , regex : "^invalid origin$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteDownstreamService.php" , line : 334usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedEventException") , regex : "^invalid origin$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedShareService.php" , line : 110usize , placeholders : & ["$share->getInstance()"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedShareAlreadyLockedException") , regex : "^item already locked by (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedUserService.php" , line : 342usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\InitiatorNotFoundException") , regex : "^Invalid initiator$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedUserService.php" , line : 368usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\SuperSessionException") , regex : "^Must initialise Super Session$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedUserService.php" , line : 531usize , placeholders : & ["$userId"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedUserNotFoundException") , regex : "^user (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedUserService.php" , line : 637usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\CircleNotFoundException") , regex : "^This Circle is not managed from this instance, please use \\-\\-initiator$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedUserService.php" , line : 664usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\RemoteCircleException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedUserService.php" , line : 762usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\UserTypeNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedUserService.php" , line : 903usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedUserNotFoundException") , regex : "^remote group not supported yet\\. Use singleId$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedUserService.php" , line : 1019usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedUserException") , regex : "^FederatedUser must be local$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedUserService.php" , line : 1031usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\SingleCircleNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/circles/lib/Service/FederatedUserService.php" , line : 1101usize , placeholders : & [] , exception : None , regex : "^FederatedUser is not empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedUserService.php" , line : 1102usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedUserException") , regex : "^FederatedUser is not complete$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/circles/lib/Service/FederatedUserService.php" , line : 1121usize , placeholders : & [] , exception : None , regex : "^uniqueness of SingleId could not be confirmed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedUserService.php" , line : 1125usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedUserException") , regex : "^uniqueness of SingleId could not be confirmed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Service/FederatedUserService.php" , line : 1211usize , placeholders : & ["3"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedUserService.php" , line : 1219usize , placeholders : & ["$message"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedUserException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedUserService.php" , line : 1243usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\GroupNotFoundException") , regex : "^group not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedUserService.php" , line : 1290usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\SingleCircleNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedUserService.php" , line : 1297usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\SingleCircleNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteService.php" , line : 161usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\CircleNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteService.php" , line : 327usize , placeholders : & ["implode(', ', $knownInstance)"] , exception : Some ("OCA\\Circles\\Exceptions\\CircleNotFoundException") , regex : "^circle not found after browsing (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteService.php" , line : 403usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedUserNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteService.php" , line : 410usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedUserException") , regex : "^incorrect federated user returned from instance$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteService.php" , line : 413usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedUserException") , regex : "^incorrect instance on returned federated user$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/MembershipService.php" , line : 408usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\ItemNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/circles/lib/Service/MaintenanceService.php" , line : 187usize , placeholders : & ["$level"] , exception : None , regex : "^running maintenance \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/MaintenanceService.php" , line : 217usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\MaintenanceException") , regex : "^maintenance already running$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/MaintenanceService.php" , line : 447usize , placeholders : & [] , exception : Some ("OC\\User\\NoUserException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/MemberService.php" , line : 160usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\MemberNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteStreamService.php" , line : 230usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\RemoteInstanceException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteStreamService.php" , line : 290usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCA\\Circles\\Exceptions\\RemoteInstanceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteStreamService.php" , line : 314usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\RemoteResourceNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteStreamService.php" , line : 333usize , placeholders : & ["$instance"] , exception : Some ("OCA\\Circles\\Exceptions\\UnknownRemoteException") , regex : "^(.*) is set as 'unknown' in database$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteStreamService.php" , line : 377usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\SignatoryException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteStreamService.php" , line : 418usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\RemoteAlreadyExistsException") , regex : "^instance is local$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteStreamService.php" , line : 434usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\RemoteAlreadyExistsException") , regex : "^instance is already known$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteStreamService.php" , line : 457usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\RemoteNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteStreamService.php" , line : 490usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\SignatureException") , regex : "^invalid auth\\-signed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteStreamService.php" , line : 501usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\SignatureException") , regex : "^auth not confirmed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteStreamService.php" , line : 545usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedItemException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteStreamService.php" , line : 581usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\RemoteNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/RemoteStreamService.php" , line : 588usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\RemoteUidException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/MigrationService.php" , line : 185usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\MigrationException") , regex : "^A migration process is already running$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/MigrationService.php" , line : 665usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\MemberNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/InterfaceService.php" , line : 125usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\UnknownInterfaceException") , regex : "^interface not initialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/InterfaceService.php" , line : 272usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\UnknownInterfaceException") , regex : "^unknown interface$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/InterfaceService.php" , line : 360usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\UnknownInterfaceException") , regex : "^unknown configured interface$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/InterfaceService.php" , line : 409usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\UnknownInterfaceException") , regex : "^misconfigured scheme$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/ShareWrapperService.php" , line : 131usize , placeholders : & [] , exception : Some ("Exception") , regex : "^\\$initiator cannot be empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/ShareWrapperService.php" , line : 238usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\InvalidItemException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/ShareTokenService.php" , line : 103usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\ShareTokenNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/ShareTokenService.php" , line : 118usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\ShareTokenAlreadyExistException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Service/MiscService.php" , line : 73usize , placeholders : & ["$level"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/MiscService.php" , line : 109usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\MissingKeyInArrayException") , regex : "^missing_key_in_array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Service/MiscService.php" , line : 121usize , placeholders : & ["json_encode($data)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/MiscService.php" , line : 159usize , placeholders : & [] , exception : Some ("OC\\User\\NoUserException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/MiscService.php" , line : 331usize , placeholders : & [] , exception : Some ("OC\\User\\NoUserException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/ConfigService.php" , line : 444usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\GSStatusException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/CircleService.php" , line : 199usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\OwnerNotFoundException") , regex : "^owner not defined$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/CircleService.php" , line : 208usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\CircleNameTooShortException") , regex : "^Circle name is too short$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/CircleService.php" , line : 537usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\InvalidItemException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/CircleService.php" , line : 590usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\CircleNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/CircleService.php" , line : 624usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\CircleNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/CircleService.php" , line : 663usize , placeholders : & ["StatusCode::$MEMBER_ADD[121]"] , exception : Some ("OCA\\Circles\\Exceptions\\MembersLimitException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedEventService.php" , line : 228usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\InitiatorNotConfirmedException") , regex : "^Initiator does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedEventService.php" , line : 233usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\InitiatorNotConfirmedException") , regex : "^Initiator is not from the instance at the origin of the request$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedEventService.php" , line : 239usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\InitiatorNotConfirmedException") , regex : "^Initiator must belong to the instance at the origin of the request$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedEventService.php" , line : 247usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\InitiatorNotConfirmedException") , regex : "^Initiator must be a member of the Circle$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedEventService.php" , line : 264usize , placeholders : & ["$class" , "$e->getMessage()"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedEventException") , regex : "^ReflectionException with (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedEventService.php" , line : 268usize , placeholders : & ["$class"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedEventException") , regex : "^(.*) does not implements IFederatedItem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedEventService.php" , line : 273usize , placeholders : & ["$class"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedEventException") , regex : "^(.*) not an IFederatedItem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedEventService.php" , line : 330usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedEventException") , regex : "^FederatedEvent has no Circle linked$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedEventService.php" , line : 337usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedEventException") , regex : "^FederatedEvent has no Member linked$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedEventService.php" , line : 343usize , placeholders : & ["get_class($item)"] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedEventException") , regex : "^(.*) does not implements IFederatedItemMemberOptional nor IFederatedItemMemberRequired$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedEventService.php" , line : 350usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedEventException") , regex : "^FederatedItem must be executed locally$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedEventService.php" , line : 370usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedEventException") , regex : "^FederatedItem must contains ItemId$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Service/FederatedEventService.php" , line : 376usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedShareBelongingException") , regex : "^ShareLock belongs to another instance$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/circles/lib/Listeners/AccountUpdated.php" , line : 93usize , placeholders : & [] , exception : None , regex : "^issue on sync circle on user update$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/circles/lib/Listeners/AccountUpdated.php" , line : 97usize , placeholders : & [] , exception : None , regex : "^issue on sync circles data on user update$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Listeners/Examples/ExampleRequestingCircleMember.php" , line : 80usize , placeholders : & ["3"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Listeners/Examples/ExampleAddingCircleMember.php" , line : 104usize , placeholders : & ["3"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Listeners/Examples/ExampleMembershipsCreated.php" , line : 97usize , placeholders : & ["3"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Listeners/Examples/ExampleMembershipsRemoved.php" , line : 97usize , placeholders : & ["3"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/apps/circles/lib/Listeners/Files/RemovingMember.php" , line : 138usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^issue while deleting user shares: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Listeners/Files/CreatingShareSendMail.php" , line : 121usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\ShareWrapperNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Circles/FileSharingBroadcaster.php" , line : 137usize , placeholders : & ["1"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Circles/FileSharingBroadcaster.php" , line : 329usize , placeholders : & ["0"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Circles/FileSharingBroadcaster.php" , line : 422usize , placeholders : & ["1"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Circles/FileSharingBroadcaster.php" , line : 439usize , placeholders : & ["0"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Circles/FileSharingBroadcaster.php" , line : 479usize , placeholders : & ["0"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Circles/FileSharingBroadcaster.php" , line : 615usize , placeholders : & ["2"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Circles/FileSharingBroadcaster.php" , line : 638usize , placeholders : & ["0"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Circles/FileSharingBroadcaster.php" , line : 724usize , placeholders : & ["0"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/ShareByCircleProvider.php" , line : 182usize , placeholders : & ["$this->l10n->t('This item is already shared with this team')"] , exception : Some ("OCP\\Share\\Exceptions\\AlreadySharedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/ShareByCircleProvider.php" , line : 204usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/circles/lib/ShareByCircleProvider.php" , line : 305usize , placeholders : & [] , exception : None , regex : "^Shares::move\\(\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/circles/lib/ShareByCircleProvider.php" , line : 334usize , placeholders : & [] , exception : None , regex : "^Shares::move\\(\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/circles/lib/ShareByCircleProvider.php" , line : 358usize , placeholders : & [] , exception : None , regex : "^Shares::restore\\(\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/circles/lib/ShareByCircleProvider.php" , line : 408usize , placeholders : & [] , exception : None , regex : "^shared document is not available anymore$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/apps/circles/lib/ShareByCircleProvider.php" , line : 410usize , placeholders : & [] , exception : None , regex : "^share is not available while path is empty\\. might comes from an unsupported storage\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/ShareByCircleProvider.php" , line : 497usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/ShareByCircleProvider.php" , line : 587usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/ShareByCircleProvider.php" , line : 593usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/apps/circles/lib/ShareByCircleProvider.php" , line : 598usize , placeholders : & ["$share->getPassword()"] , exception : None , regex : "^share is protected by a password, hash: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/circles/lib/ShareByCircleProvider.php" , line : 615usize , placeholders : & [] , exception : None , regex : "^Circle not found while probeCircle$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/RemoteController.php" , line : 367usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedUserNotFoundException") , regex : "^Entity not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/circles/lib/Controller/RemoteController.php" , line : 504usize , placeholders : & [] , exception : None , regex : "^Signatory is not a known RemoteInstance$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/RemoteController.php" , line : 505usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\SignatoryException") , regex : "^Could not confirm identity$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/circles/lib/Controller/RemoteController.php" , line : 510usize , placeholders : & [] , exception : None , regex : "^Could not confirm identity$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/RemoteController.php" , line : 511usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Tools\\Exceptions\\SignatoryException") , regex : "^Could not confirm identity$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/RemoteController.php" , line : 559usize , placeholders : & [] , exception : Some ("OC\\AppFramework\\Middleware\\Security\\Exceptions\\NotLoggedInException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/RemoteController.php" , line : 562usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\JsonNotRequestedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/AdminController.php" , line : 159usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/AdminController.php" , line : 179usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/AdminController.php" , line : 201usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^works only from local instance$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/AdminController.php" , line : 220usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/AdminController.php" , line : 257usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/AdminController.php" , line : 283usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/AdminController.php" , line : 305usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/AdminController.php" , line : 325usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/AdminController.php" , line : 345usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/AdminController.php" , line : 371usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/AdminController.php" , line : 394usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/AdminController.php" , line : 413usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/AdminController.php" , line : 435usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/AdminController.php" , line : 457usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/AdminController.php" , line : 480usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/AdminController.php" , line : 505usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/AdminController.php" , line : 526usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/LocalController.php" , line : 155usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/LocalController.php" , line : 177usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/LocalController.php" , line : 197usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/LocalController.php" , line : 220usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/LocalController.php" , line : 243usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^works only from local instance$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/LocalController.php" , line : 255usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/LocalController.php" , line : 287usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/LocalController.php" , line : 309usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/LocalController.php" , line : 331usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/LocalController.php" , line : 362usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/LocalController.php" , line : 389usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/LocalController.php" , line : 413usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/LocalController.php" , line : 441usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/LocalController.php" , line : 461usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/LocalController.php" , line : 484usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/LocalController.php" , line : 507usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/LocalController.php" , line : 531usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/LocalController.php" , line : 554usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/LocalController.php" , line : 576usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/Controller/LocalController.php" , line : 592usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FrontendException") , regex : "^frontend disabled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/circles/lib/Search/GlobalScaleUsers.php" , line : 92usize , placeholders : & ["get_class($e)" , "$e->getMessage()"] , exception : None , regex : "^Issue while search users from lookup: (.*) (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/MountManager/CircleMountProvider.php" , line : 112usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\InitiatorNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/MountManager/CircleMount.php" , line : 81usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\MountPointConstructionException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/circles/lib/Migration/Version0028Date20230705222601.php" , line : 57usize , placeholders : & [] , exception : None , regex : "^Could not find circles_circle$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/circles/lib/Migration/ImportOwncloudCustomGroups.php" , line : 87usize , placeholders : & [] , exception : None , regex : "^Creating circles$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/circles/lib/Migration/ImportOwncloudCustomGroups.php" , line : 124usize , placeholders : & [] , exception : None , regex : "^Creating memberships$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/circles/lib/Migration/ImportOwncloudCustomGroups.php" , line : 181usize , placeholders : & [] , exception : None , regex : "^Update shares from custom groups to circles$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/lib/CirclesQueryHelper.php" , line : 102usize , placeholders : & [] , exception : Some ("OCA\\Circles\\Exceptions\\FederatedUserNotFoundException") , regex : "^session not initiated$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/vendor/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/vendor/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/vendor/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/vendor/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/vendor/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/vendor/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/circles/vendor/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/files_sharing/lib/SharedStorage.php" , line : 154usize , placeholders : & [] , exception : None , regex : "^Possible share setup recursion detected$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/SharedStorage.php" , line : 167usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Maximum share depth reached$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/SharedStorage.php" , line : 181usize , placeholders : & [] , exception : Some ("Exception") , regex : "^recursive share detected$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_sharing/lib/SharedStorage.php" , line : 205usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_sharing/lib/SharedStorage.php" , line : 578usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Middleware/OCSShareAPIMiddleware.php" , line : 56usize , placeholders : & ["$this->l->t('Share API is disabled')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Middleware/ShareInfoMiddleware.php" , line : 54usize , placeholders : & [] , exception : Some ("OCA\\Files_Sharing\\Exceptions\\S2SException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Middleware/SharingCheckMiddleware.php" , line : 91usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Sharing is disabled\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Middleware/SharingCheckMiddleware.php" , line : 96usize , placeholders : & [] , exception : Some ("OCA\\Files_Sharing\\Exceptions\\S2SException") , regex : "^Federated sharing not allowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/files_sharing/lib/BackgroundJob/FederatedSharesDiscoverJob.php" , line : 63usize , placeholders : & [] , exception : None , regex : "^exception while running files_sharing/lib/BackgroundJob/FederatedSharesDiscoverJob$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_sharing/lib/ShareBackend/File.php" , line : 237usize , placeholders : & [] , exception : None , regex : "^No owner found for reshare$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/files_sharing/lib/Listener/ShareInteractionListener.php" , line : 62usize , placeholders : & [] , exception : None , regex : "^Share type does not allow to emit interaction event$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/files_sharing/lib/Listener/ShareInteractionListener.php" , line : 68usize , placeholders : & [] , exception : None , regex : "^Share was not created by a user, can't emit interaction event$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/files_sharing/lib/DeleteOrphanedSharesJob.php" , line : 110usize , placeholders : & [] , exception : None , regex : "^\\{deleted\\} orphaned share\\(s\\) deleted$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Activity/Providers/PublicLinks.php" , line : 58usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Activity/Providers/PublicLinks.php" , line : 94usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Activity/Providers/RemoteShares.php" , line : 66usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Activity/Providers/RemoteShares.php" , line : 98usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Activity/Providers/RemoteShares.php" , line : 138usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Activity/Providers/Users.php" , line : 74usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Activity/Providers/Users.php" , line : 118usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Activity/Providers/Downloads.php" , line : 51usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Activity/Providers/Downloads.php" , line : 89usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Activity/Providers/Downloads.php" , line : 139usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Activity/Providers/Base.php" , line : 91usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Activity/Providers/Base.php" , line : 146usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Could not generate file parameter$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Activity/Providers/Groups.php" , line : 85usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Activity/Providers/Groups.php" , line : 119usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareController.php" , line : 227usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareController.php" , line : 335usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareController.php" , line : 339usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareController.php" , line : 350usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareController.php" , line : 358usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareController.php" , line : 408usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareController.php" , line : 507usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Downloading more than 1 file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareController.php" , line : 524usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Downloading a folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 175usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 342usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 424usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 472usize , placeholders : & ["$this->l->t('Wrong share ID, share does not exist')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 491usize , placeholders : & ["$this->l->t('Wrong share ID, share does not exist')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 510usize , placeholders : & ["$this->l->t('Wrong share ID, share does not exist')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 516usize , placeholders : & ["$this->l->t('Could not delete share')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 520usize , placeholders : & ["$this->l->t('Wrong share ID, share does not exist')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 531usize , placeholders : & ["$this->l->t('Could not delete share')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 595usize , placeholders : & ["$this->l->t('Please specify a file or folder path')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 603usize , placeholders : & ["$this->l->t('Wrong path, file/folder does not exist')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 620usize , placeholders : & ["$this->l->t('Could not create share')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 624usize , placeholders : & ["$this->l->t('Invalid permissions')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 656usize , placeholders : & ["$this->l->t('Invalid date, date format must be YYYY-MM-DD')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 671usize , placeholders : & ["$this->l->t('Please specify a valid account to share with')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 677usize , placeholders : & ["$this->l->t('Group sharing is disabled by the administrator')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 682usize , placeholders : & ["$this->l->t('Please specify a valid group')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 691usize , placeholders : & ["$this->l->t('Public link sharing is disabled by the administrator')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 697usize , placeholders : & ["$this->l->t('Public upload disabled by the administrator')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 702usize , placeholders : & ["$this->l->t('Public upload is only possible for publicly shared folders')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 735usize , placeholders : & ["$this->l->t('Sharing %s sending the password by Nextcloud Talk failed because Nextcloud Talk is not enabled', [$node->getPath()])"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 742usize , placeholders : & ["$this->l->t('Sharing %1$s failed because the back end does not allow shares from type %2$s', [$node->getPath(), $shareType])"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 746usize , placeholders : & ["$this->l->t('Please specify a valid federated account ID')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 754usize , placeholders : & ["$this->l->t('Sharing %1$s failed because the back end does not allow shares from type %2$s', [$node->getPath(), $shareType])"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 758usize , placeholders : & ["$this->l->t('Please specify a valid federated group ID')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 765usize , placeholders : & ["$this->l->t('You cannot share to a Circle if the app is not enabled')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 772usize , placeholders : & ["$this->l->t('Please specify a valid circle')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 780usize , placeholders : & ["$this->l->t('Sharing %s failed because the back end does not support room shares', [$node->getPath()])"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 786usize , placeholders : & ["$this->l->t('Sharing %s failed because the back end does not support room shares', [$node->getPath()])"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 792usize , placeholders : & ["$this->l->t('Sharing %s failed because the back end does not support ScienceMesh shares', [$node->getPath()])"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 795usize , placeholders : & ["$this->l->t('Unknown share type')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 807usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 809usize , placeholders : & ["$e->getHint()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 811usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 812usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 867usize , placeholders : & ["$this->l->t('Not a directory')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 942usize , placeholders : & ["$this->l->t('Wrong path, file/folder does not exist')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 946usize , placeholders : & ["$this->l->t('Could not lock node')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1072usize , placeholders : & ["$this->l->t('Wrong path, file/folder does not exist')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1074usize , placeholders : & ["$this->l->t('Could not lock path')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1078usize , placeholders : & [] , exception : Some ("OCA\\Files_Sharing\\Exceptions\\SharingRightsException") , regex : "^no sharing rights on this item$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1179usize , placeholders : & ["$this->l->t('Wrong share ID, share does not exist')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1185usize , placeholders : & ["$this->l->t('Wrong share ID, share does not exist')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1189usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^You are not allowed to edit incoming shares$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1203usize , placeholders : & ["$this->l->t('Wrong or no update parameter given')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1230usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^You are not allowed to edit link shares that you don't own$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1254usize , placeholders : & ["$this->l->t('Share must at least have READ or CREATE permissions')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1260usize , placeholders : & ["$this->l->t('Share must have READ permission if UPDATE or DELETE permission is set')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1271usize , placeholders : & ["$this->l->t('Public upload disabled by the administrator')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1275usize , placeholders : & ["$this->l->t('Public upload is only possible for publicly shared folders')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1302usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^Maximum label length is 255$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1309usize , placeholders : & ["$this->l->t('\"Sending the password by Nextcloud Talk\" for sharing a file or folder failed because Nextcloud Talk is not enabled.')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1331usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1340usize , placeholders : & ["$e->getHint()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1342usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1418usize , placeholders : & ["$this->l->t('Wrong share ID, share does not exist')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1422usize , placeholders : & ["$this->l->t('Wrong share ID, share does not exist')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1429usize , placeholders : & ["$e->getHint()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1431usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1652usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid date\\. Format must be YYYY\\-MM\\-DD$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1725usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1764usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\QueryException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1781usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\QueryException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1798usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\QueryException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 1860usize , placeholders : & [] , exception : Some ("OCA\\Files_Sharing\\Exceptions\\SharingRightsException") , regex : "^no sharing rights on this item$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 2030usize , placeholders : & ["$attributesString"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^Invalid share attributes provided: \\\\\"(.*)\\\\\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 2052usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Should not happen, instanceOfStorage but getInstanceOfStorage return null$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareAPIController.php" , line : 2055usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Should not happen, instanceOfStorage but not a wrapper$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_sharing/lib/Controller/RemoteController.php" , line : 88usize , placeholders : & ["$id"] , exception : None , regex : "^Could not accept federated share with id: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/RemoteController.php" , line : 91usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^wrong share ID, share does not exist\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/RemoteController.php" , line : 113usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^wrong share ID, share does not exist\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/RemoteController.php" , line : 168usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^share does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/RemoteController.php" , line : 191usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^Share does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/RemoteController.php" , line : 199usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^Could not unshare$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareesAPIController.php" , line : 152usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^Invalid perPage argument$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareesAPIController.php" , line : 155usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^Invalid page$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/ShareesAPIController.php" , line : 163usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^Missing itemType$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/DeletedShareAPIController.php" , line : 125usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/DeletedShareAPIController.php" , line : 223usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^Share not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/DeletedShareAPIController.php" , line : 227usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^No deleted share found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/DeletedShareAPIController.php" , line : 233usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^Something went wrong$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/DeletedShareAPIController.php" , line : 250usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\QueryException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/DeletedShareAPIController.php" , line : 267usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\QueryException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Controller/DeletedShareAPIController.php" , line : 284usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\QueryException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_sharing/lib/MountProvider.php" , line : 132usize , placeholders : & [] , exception : None , regex : "^Error while trying to create shared mount$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/files_sharing/lib/MountProvider.php" , line : 259usize , placeholders : & ["$share->getId()" , "$e->getMessage()"] , exception : None , regex : "^Could not adjust share target for share (.*) to make it consistent: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Emergency , path : "/apps/files_sharing/lib/External/Manager.php" , line : 350usize , placeholders : & [] , exception : None , regex : "^Could not update share$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Emergency , path : "/apps/files_sharing/lib/External/Manager.php" , line : 368usize , placeholders : & [] , exception : None , regex : "^Could not create share$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Emergency , path : "/apps/files_sharing/lib/External/Manager.php" , line : 420usize , placeholders : & [] , exception : None , regex : "^Could not update share$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Emergency , path : "/apps/files_sharing/lib/External/Manager.php" , line : 440usize , placeholders : & [] , exception : None , regex : "^Could not create share$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_sharing/lib/External/Manager.php" , line : 606usize , placeholders : & [] , exception : None , regex : "^Mount point to remove share not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_sharing/lib/External/Manager.php" , line : 610usize , placeholders : & [] , exception : None , regex : "^Mount point to remove share is not an external share, share probably doesn't exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Emergency , path : "/apps/files_sharing/lib/External/Manager.php" , line : 646usize , placeholders : & [] , exception : None , regex : "^Could not update share$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Emergency , path : "/apps/files_sharing/lib/External/Manager.php" , line : 714usize , placeholders : & [] , exception : None , regex : "^Could not delete user shares$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Emergency , path : "/apps/files_sharing/lib/External/Manager.php" , line : 749usize , placeholders : & [] , exception : None , regex : "^Could not delete user shares$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Emergency , path : "/apps/files_sharing/lib/External/Manager.php" , line : 827usize , placeholders : & [] , exception : None , regex : "^Error when retrieving shares$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/apps/files_sharing/lib/External/Storage.php" , line : 91usize , placeholders : & [] , exception : None , regex : "^exception while retrieving webdav endpoint$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/External/Storage.php" , line : 244usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageInvalidException") , regex : "^Remote share not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/External/Storage.php" , line : 247usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^No nextcloud instance found at remote$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/External/Storage.php" , line : 253usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageInvalidException") , regex : "^Auth error when getting remote share$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/External/Storage.php" , line : 255usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^Failed to connect to remote instance$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/External/Storage.php" , line : 257usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^Error while sending request to remote instance$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/External/Storage.php" , line : 345usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/External/Storage.php" , line : 360usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/External/Storage.php" , line : 363usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/External/Storage.php" , line : 368usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/External/Storage.php" , line : 430usize , placeholders : & [] , exception : Some ("Exception") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Notification/Notifier.php" , line : 109usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unhandled app or subject$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Notification/Notifier.php" , line : 118usize , placeholders : & [] , exception : Some ("OCP\\Notification\\AlreadyProcessedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Notification/Notifier.php" , line : 125usize , placeholders : & [] , exception : Some ("OCP\\Notification\\AlreadyProcessedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Notification/Notifier.php" , line : 161usize , placeholders : & [] , exception : Some ("OCP\\Notification\\AlreadyProcessedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Notification/Notifier.php" , line : 165usize , placeholders : & [] , exception : Some ("OCP\\Notification\\AlreadyProcessedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Notification/Notifier.php" , line : 168usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid share type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Notification/Notifier.php" , line : 174usize , placeholders : & [] , exception : Some ("OCP\\Notification\\AlreadyProcessedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Notification/Notifier.php" , line : 179usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Temporary failure$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Notification/Notifier.php" , line : 200usize , placeholders : & [] , exception : Some ("OCP\\Notification\\AlreadyProcessedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Notification/Notifier.php" , line : 205usize , placeholders : & [] , exception : Some ("OCP\\Notification\\AlreadyProcessedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Notification/Notifier.php" , line : 210usize , placeholders : & [] , exception : Some ("OCP\\Notification\\AlreadyProcessedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Notification/Notifier.php" , line : 215usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Temporary failure$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/Notification/Notifier.php" , line : 239usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid subject$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_sharing/lib/SharedMount.php" , line : 202usize , placeholders : & ["$path"] , exception : None , regex : "^Can not strip userid and \"files/\" from path: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/lib/SharedMount.php" , line : 203usize , placeholders : & [] , exception : Some ("OCA\\Files_Sharing\\Exceptions\\BrokenPath") , regex : "^Path does not start with /user/files$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/files_sharing/lib/SharedMount.php" , line : 230usize , placeholders : & ["$this->getMountPoint()" , "$target"] , exception : None , regex : "^Could not rename mount point for shared folder \"(.*)\" to \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_sharing/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/settings/lib/BackgroundJobs/VerifyUserData.php" , line : 97usize , placeholders : & ["$argument['type']"] , exception : None , regex : "^(.*) is no valid type for user account data\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/settings/lib/BackgroundJobs/VerifyUserData.php" , line : 132usize , placeholders : & ["$argument['uid']"] , exception : None , regex : "^(.*) doesn't exist, can't verify user data\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/settings/lib/BackgroundJobs/VerifyUserData.php" , line : 158usize , placeholders : & ["$argument['uid']"] , exception : None , regex : "^(.*) doesn't exist, can't verify user data\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/settings/lib/Controller/AuthSettingsController.php" , line : 278usize , placeholders : & [] , exception : None , regex : "^could not publish activity$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Controller/AuthSettingsController.php" , line : 297usize , placeholders : & [] , exception : Some ("OC\\Authentication\\Exceptions\\InvalidTokenException") , regex : "^This token does not belong to you!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Controller/UsersController.php" , line : 454usize , placeholders : & ["$this->l10n->t('Unable to change full name')"] , exception : Some ("OC\\ForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Controller/UsersController.php" , line : 464usize , placeholders : & ["$this->l10n->t('Unable to change email address')"] , exception : Some ("OC\\ForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Controller/UsersController.php" , line : 473usize , placeholders : & ["$this->l10n->t('Unable to set invalid phone number')"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Controller/UsersController.php" , line : 476usize , placeholders : & ["$this->l10n->t('Unable to set invalid website')"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Controller/UsersController.php" , line : 478usize , placeholders : & ["$this->l10n->t('Some account data was invalid')"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Controller/AdminSettingsController.php" , line : 91usize , placeholders : & [] , exception : Some ("OC\\AppFramework\\Middleware\\Security\\Exceptions\\NotAdminException") , regex : "^Logged in user doesn't have permission to access these settings\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/settings/lib/Controller/WebAuthnController.php" , line : 64usize , placeholders : & [] , exception : None , regex : "^Starting WebAuthn registration$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/settings/lib/Controller/WebAuthnController.php" , line : 81usize , placeholders : & [] , exception : None , regex : "^Finishing WebAuthn registration$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/settings/lib/Controller/WebAuthnController.php" , line : 84usize , placeholders : & [] , exception : None , regex : "^Trying to finish WebAuthn registration without session data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/settings/lib/Controller/WebAuthnController.php" , line : 102usize , placeholders : & [] , exception : None , regex : "^Finishing WebAuthn registration$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Controller/DeclarativeSettingsController.php" , line : 75usize , placeholders : & [] , exception : Some ("OC\\AppFramework\\Middleware\\Security\\Exceptions\\NotLoggedInException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/settings/lib/Controller/DeclarativeSettingsController.php" , line : 85usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Failed to set declarative settings value: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Controller/DeclarativeSettingsController.php" , line : 86usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Controller/DeclarativeSettingsController.php" , line : 103usize , placeholders : & [] , exception : Some ("OC\\AppFramework\\Middleware\\Security\\Exceptions\\NotLoggedInException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/settings/lib/Controller/AppSettingsController.php" , line : 182usize , placeholders : & [] , exception : None , regex : "^Could not load media file for app discover section$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/settings/lib/Controller/AppSettingsController.php" , line : 314usize , placeholders : & [] , exception : None , regex : "^The value given for app_install_overwrite is not an array\\. Ignoring\\.\\.\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/settings/lib/Controller/AppSettingsController.php" , line : 534usize , placeholders : & [] , exception : None , regex : "^could not enable apps$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/settings/lib/Controller/AppSettingsController.php" , line : 575usize , placeholders : & [] , exception : None , regex : "^could not disable app$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Controller/LogSettingsController.php" , line : 59usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^Log file not available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Controller/MailSettingsController.php" , line : 171usize , placeholders : & ["$this->l10n->t('Email could not be sent. Check your mail server log')"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Activity/Provider.php" , line : 88usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unknown app$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Activity/Provider.php" , line : 128usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unknown subject$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Activity/Provider.php" , line : 184usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unknown subject$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Activity/SecurityProvider.php" , line : 56usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Activity/SecurityProvider.php" , line : 107usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Activity/GroupProvider.php" , line : 69usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Activity/GroupProvider.php" , line : 116usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/settings/lib/Command/AdminDelegation/Add.php" , line : 60usize , placeholders : & [] , exception : None , regex : "^The specified class isn’t a valid delegated setting\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/settings/lib/Command/AdminDelegation/Add.php" , line : 66usize , placeholders : & [] , exception : None , regex : "^The specified group didn’t exist\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/settings/lib/Listener/AppPasswordCreatedActivityListener.php" , line : 74usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Could not publish activity: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/settings/lib/SetupChecks/CheckServerResponseTrait.php" , line : 100usize , placeholders : & [] , exception : None , regex : "^Can not connect to local server for running setup checks$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/settings/lib/SetupChecks/DataDirectoryProtected.php" , line : 70usize , placeholders : & [] , exception : None , regex : "^\\[expected\\] Could not access data directory from outside\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/settings/lib/SetupChecks/InternetConnectivity.php" , line : 92usize , placeholders : & ["$site"] , exception : None , regex : "^Cannot connect to: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Service/AuthorizedGroupService.php" , line : 67usize , placeholders : & [] , exception : Some ("OCA\\Settings\\Service\\NotFoundException") , regex : "^AuthorizedGroup not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/UserMigration/AccountMigrator.php" , line : 113usize , placeholders : & [] , exception : Some ("OCA\\Settings\\UserMigration\\AccountMigratorException") , regex : "^Could not export account information$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/UserMigration/AccountMigrator.php" , line : 126usize , placeholders : & [] , exception : Some ("OCA\\Settings\\UserMigration\\AccountMigratorException") , regex : "^Could not export avatar$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/UserMigration/AccountMigrator.php" , line : 134usize , placeholders : & [] , exception : Some ("OCA\\Settings\\UserMigration\\AccountMigratorException") , regex : "^Could not export profile config$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/UserMigration/AccountMigrator.php" , line : 158usize , placeholders : & [] , exception : Some ("OCA\\Settings\\UserMigration\\AccountMigratorException") , regex : "^Failed to import account information$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/UserMigration/AccountMigrator.php" , line : 183usize , placeholders : & [] , exception : Some ("OCA\\Settings\\UserMigration\\AccountMigratorException") , regex : "^Avatar image must be square$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/UserMigration/AccountMigrator.php" , line : 185usize , placeholders : & [] , exception : Some ("OCA\\Settings\\UserMigration\\AccountMigratorException") , regex : "^Failed to import avatar$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/UserMigration/AccountMigrator.php" , line : 199usize , placeholders : & [] , exception : Some ("OCA\\Settings\\UserMigration\\AccountMigratorException") , regex : "^Failed to import profile config$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/lib/Middleware/SubadminMiddleware.php" , line : 70usize , placeholders : & ["$this->l10n->t('Logged in account must be a subadmin')"] , exception : Some ("OC\\AppFramework\\Middleware\\Security\\Exceptions\\NotAdminException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/settings/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/Security/CardDavRateLimitingPlugin.php" , line : 68usize , placeholders : & [] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\TooManyRequests") , regex : "^Too many addressbooks created$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/dav/lib/CardDAV/Security/CardDavRateLimitingPlugin.php" , line : 78usize , placeholders : & [] , exception : None , regex : "^Maximum number of address books reached$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/Security/CardDavRateLimitingPlugin.php" , line : 82usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^AddressBook limit reached$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/UserAddressBooks.php" , line : 140usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^The resource you tried to create has a reserved name$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/CardDavBackend.php" , line : 385usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^URI too long\\. Address book not created$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/CardDavBackend.php" , line : 405usize , placeholders : & ["$property"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Unknown property: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/CardDavBackend.php" , line : 650usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^VCard object with uid already exists in this addressbook collection\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/CardDavBackend.php" , line : 1263usize , placeholders : & ["$id"] , exception : Some ("InvalidArgumentException") , regex : "^Card does not exists: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/CardDavBackend.php" , line : 1398usize , placeholders : & ["$uri"] , exception : Some ("InvalidArgumentException") , regex : "^Card does not exists: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/CardDavBackend.php" , line : 1421usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/CardDavBackend.php" , line : 1485usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^vCards on CardDAV servers MUST have a UID property$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/CardDavBackend.php" , line : 1488usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^vCard can not be empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/AddressBook.php" , line : 85usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/AddressBook.php" , line : 172usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Card not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/AddressBook.php" , line : 219usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/AddressBook.php" , line : 257usize , placeholders : & [] , exception : Some ("OCA\\DAV\\Exception\\UnsupportedLimitOnInitialSyncException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/CardDAV/AddressBook.php" , line : 275usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Could not move calendar object: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/SystemAddressbook.php" , line : 207usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/SystemAddressbook.php" , line : 212usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/SystemAddressbook.php" , line : 226usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/SystemAddressbook.php" , line : 234usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Card not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/SystemAddressbook.php" , line : 238usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/SystemAddressbook.php" , line : 250usize , placeholders : & [] , exception : Some ("OCA\\DAV\\Exception\\UnsupportedLimitOnInitialSyncException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/SystemAddressbook.php" , line : 363usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/Integration/ExternalAddressBook.php" , line : 76usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^Renaming address books is not yet supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/Integration/ExternalAddressBook.php" , line : 83usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^Creating collections in address book objects is not allowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/Integration/ExternalAddressBook.php" , line : 109usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Provided address book uri was not app\\-generated$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/CardDAV/SyncService.php" , line : 86usize , placeholders : & ["$url"] , exception : None , regex : "^Authorization failed, remove address book: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/CardDAV/SyncService.php" , line : 89usize , placeholders : & [] , exception : None , regex : "^Client exception:$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/Activity/Provider/Addressbook.php" , line : 76usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/Activity/Provider/Addressbook.php" , line : 122usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/Activity/Provider/Addressbook.php" , line : 189usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/Activity/Provider/Card.php" , line : 78usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/Activity/Provider/Card.php" , line : 102usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/Activity/Provider/Card.php" , line : 134usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/PhotoCache.php" , line : 76usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CardDAV/PhotoCache.php" , line : 190usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Avatar not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/CardDAV/PhotoCache.php" , line : 202usize , placeholders : & [] , exception : None , regex : "^Exception during vcard photo parsing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/CardDAV/PhotoCache.php" , line : 247usize , placeholders : & [] , exception : None , regex : "^Exception during vcard photo parsing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/PartFile.php" , line : 49usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to put into this file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/PartFile.php" , line : 56usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to get this file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/PartFile.php" , line : 102usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename this file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/ChunkingPlugin.php" , line : 69usize , placeholders : & ["$destination"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The given destination (.*) is a directory\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/ChunkingPlugin.php" , line : 128usize , placeholders : & ["$expectedSize" , "$actualSize"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Chunks on server do not sum up to (.*) but to (.*) bytes$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/FutureFile.php" , line : 57usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to put into this file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/FutureFile.php" , line : 117usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename this file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/UploadHome.php" , line : 46usize , placeholders : & ["$name"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to create file \\(filename (.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/UploadHome.php" , line : 80usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename this folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/AssemblyStream.php" , line : 159usize , placeholders : & ["$this->currentNodeRead" , "$currentNodeSize"] , exception : Some ("Exception") , regex : "^Stream from assembly node shorter than expected, got (.*) bytes, expected (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/AssemblyStream.php" , line : 256usize , placeholders : & ["$name"] , exception : Some ("BadMethodCallException") , regex : "^Invalid context, \"(.*)\" options not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/AssemblyStream.php" , line : 261usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Invalid context, nodes not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/UploadFolder.php" , line : 62usize , placeholders : & ["$name"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to create file \\(filename (.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/UploadFolder.php" , line : 121usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename this folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/ChunkingV2Plugin.php" , line : 161usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Invalid chunk name, must be numeric between 1 and 10000$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/ChunkingV2Plugin.php" , line : 177usize , placeholders : & ["$this->uploadPath"] , exception : Some ("Sabre\\DAV\\Exception\\InsufficientStorage") , regex : "^Insufficient space in (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/ChunkingV2Plugin.php" , line : 233usize , placeholders : & ["$this->uploadPath"] , exception : Some ("Sabre\\DAV\\Exception\\InsufficientStorage") , regex : "^Insufficient space in (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/ChunkingV2Plugin.php" , line : 281usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Skipping chunking v2 since no proper distributed cache is available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/ChunkingV2Plugin.php" , line : 284usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Skipping chunked file writing as the destination header was not passed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/ChunkingV2Plugin.php" , line : 287usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageInvalidException") , regex : "^Storage does not support chunked file writing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/ChunkingV2Plugin.php" , line : 290usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageInvalidException") , regex : "^Storage does not support multi part uploads$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/ChunkingV2Plugin.php" , line : 295usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\PreconditionFailed") , regex : "^Missing metadata for chunked upload\\. The distributed cache does not hold the information of previous requests\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Upload/ChunkingV2Plugin.php" , line : 311usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^X\\-OC\\-MTime header must be an integer \\(unix timestamp\\)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Command/ListCalendars.php" , line : 57usize , placeholders : & ["$user"] , exception : Some ("InvalidArgumentException") , regex : "^User <(.*)> is unknown\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Command/CreateCalendar.php" , line : 69usize , placeholders : & ["$user"] , exception : Some ("InvalidArgumentException") , regex : "^User <(.*)> in unknown\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Command/CreateAddressBook.php" , line : 57usize , placeholders : & ["$user"] , exception : Some ("InvalidArgumentException") , regex : "^User <(.*)> in unknown\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Command/DeleteCalendar.php" , line : 78usize , placeholders : & ["$user"] , exception : Some ("InvalidArgumentException") , regex : "^User <(.*)> is unknown\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Command/DeleteCalendar.php" , line : 89usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Please specify a calendar name or \\-\\-birthday$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Command/DeleteCalendar.php" , line : 98usize , placeholders : & ["$user" , "$name"] , exception : Some ("InvalidArgumentException") , regex : "^User <(.*)> has no calendar named <(.*)>\\. You can run occ dav:list\\-calendars to list calendars URIs for this user\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Command/SyncBirthdayCalendar.php" , line : 61usize , placeholders : & ["$user"] , exception : Some ("InvalidArgumentException") , regex : "^User <(.*)> in unknown\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Command/SyncBirthdayCalendar.php" , line : 100usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Birthday calendars are disabled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Command/MoveCalendar.php" , line : 84usize , placeholders : & ["$userOrigin"] , exception : Some ("InvalidArgumentException") , regex : "^User <(.*)> is unknown\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Command/MoveCalendar.php" , line : 88usize , placeholders : & ["$userDestination"] , exception : Some ("InvalidArgumentException") , regex : "^User <(.*)> is unknown\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Command/MoveCalendar.php" , line : 97usize , placeholders : & ["$userOrigin" , "$name"] , exception : Some ("InvalidArgumentException") , regex : "^User <(.*)> has no calendar named <(.*)>\\. You can run occ dav:list\\-calendars to list calendars URIs for this user\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Command/MoveCalendar.php" , line : 108usize , placeholders : & ["$userDestination" , "$name"] , exception : Some ("InvalidArgumentException") , regex : "^Unable to find a suitable calendar name for <(.*)> with initial name <(.*)>\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Command/MoveCalendar.php" , line : 111usize , placeholders : & ["$userDestination" , "$name"] , exception : Some ("InvalidArgumentException") , regex : "^User <(.*)> already has a calendar named <(.*)>\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Command/MoveCalendar.php" , line : 179usize , placeholders : & ["$userDestination" , "$userOrGroup" , "$calendar['uri']"] , exception : Some ("InvalidArgumentException") , regex : "^User <(.*)> is not part of the group <(.*)> with whom the calendar <(.*)> was shared\\. You may use \\-f to move the calendar while deleting this share\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Command/MoveCalendar.php" , line : 190usize , placeholders : & ["$calendar['uri']" , "$userDestination"] , exception : Some ("InvalidArgumentException") , regex : "^The calendar <(.*)> is already shared to user <(.*)>\\.You may use \\-f to move the calendar while deleting this share\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Traits/PrincipalProxyTrait.php" , line : 51usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Principal not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Traits/PrincipalProxyTrait.php" , line : 86usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Principal not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Traits/PrincipalProxyTrait.php" , line : 117usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Setting members of the group is not supported yet$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Traits/PrincipalProxyTrait.php" , line : 122usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Principal not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Traits/PrincipalProxyTrait.php" , line : 137usize , placeholders : & ["$prefix"] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Invalid member group prefix: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Traits/PrincipalProxyTrait.php" , line : 142usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Principal not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/BackgroundJob/OutOfOfficeEventDispatcherJob.php" , line : 62usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Failed to dispatch out\\-of\\-office event: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/BackgroundJob/OutOfOfficeEventDispatcherJob.php" , line : 72usize , placeholders : & ["$userId"] , exception : None , regex : "^Failed to dispatch out\\-of\\-office event: User (.*) does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/BackgroundJob/OutOfOfficeEventDispatcherJob.php" , line : 87usize , placeholders : & ["$event"] , exception : None , regex : "^Invalid out\\-of\\-office event: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/BackgroundJob/PruneOutdatedSyncTokensJob.php" , line : 60usize , placeholders : & ["{calendarSyncTokensNumber}" , "{addressBooksSyncTokensNumber}"] , exception : None , regex : "^Pruned (.*) calendar sync tokens and (.*)Pruned \\{calendarSyncTokensNumber\\} calendar sync tokens and \\{addressBooksSyncTokensNumber\\} address book sync tokens$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/BackgroundJob/UserStatusAutomation.php" , line : 67usize , placeholders : & ["self::class"] , exception : None , regex : "^Removing invalid (.*) background job$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/BackgroundJob/UserStatusAutomation.php" , line : 89usize , placeholders : & ["self::class" , "$userId"] , exception : None , regex : "^Removing (.*) background job for user \"(.*)\" because the user has no valid availability rules and no OOO data set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/BackgroundJob/UserStatusAutomation.php" , line : 107usize , placeholders : & ["$timestamp" , "$userId"] , exception : None , regex : "^Updated user status automation last_run to (.*) for user (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/BackgroundJob/UserStatusAutomation.php" , line : 191usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/BackgroundJob/UserStatusAutomation.php" , line : 198usize , placeholders : & ["self::class" , "$userId"] , exception : None , regex : "^Removing (.*) background job for user \"(.*)\" because the user has no valid availability rules set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/BackgroundJob/UserStatusAutomation.php" , line : 208usize , placeholders : & [] , exception : None , regex : "^User is currently available, reverting DND status if applicable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/BackgroundJob/UserStatusAutomation.php" , line : 210usize , placeholders : & [] , exception : None , regex : "^User status automation ran$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/BackgroundJob/UserStatusAutomation.php" , line : 219usize , placeholders : & [] , exception : None , regex : "^User is currently NOT available, reverting call status if applicable and then setting DND$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/BackgroundJob/UserStatusAutomation.php" , line : 223usize , placeholders : & [] , exception : None , regex : "^User status automation ran$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/BackgroundJob/UserStatusAutomation.php" , line : 229usize , placeholders : & [] , exception : None , regex : "^User has no OOO period in effect, reverting DND status if applicable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/BackgroundJob/UserStatusAutomation.php" , line : 237usize , placeholders : & [] , exception : None , regex : "^User has no OOO period in effect, reverting DND status if applicable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/BackgroundJob/UserStatusAutomation.php" , line : 249usize , placeholders : & [] , exception : None , regex : "^User is currently in an OOO period, reverting other automated status and setting OOO DND status$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/BackgroundJob/DeleteOutdatedSchedulingObjects.php" , line : 33usize , placeholders : & [] , exception : None , regex : "^Removed outdated scheduling objects$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/BackgroundJob/RefreshWebcalJob.php" , line : 75usize , placeholders : & ["$subscriptionId"] , exception : None , regex : "^Subscription (.*) could not be refreshed, refreshrate in database is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/BackgroundJob/UploadCleanup.php" , line : 76usize , placeholders : & ["$uid" , "$folder"] , exception : None , regex : "^Found a file inside the uploads folder\\. Uid: (.*) folder: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/BackgroundJob/BuildReminderIndexBackgroundJob.php" , line : 78usize , placeholders : & ["$offset" , "$stopAt"] , exception : None , regex : "^Building calendar reminder index \\((.*)/(.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/BackgroundJob/BuildReminderIndexBackgroundJob.php" , line : 83usize , placeholders : & [] , exception : None , regex : "^Building calendar reminder index done$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/BackgroundJob/BuildReminderIndexBackgroundJob.php" , line : 89usize , placeholders : & ["$offset"] , exception : None , regex : "^Scheduled a new BuildReminderIndexBackgroundJob with offset (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/BackgroundJob/BuildReminderIndexBackgroundJob.php" , line : 119usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalendarImpl.php" , line : 182usize , placeholders : & [] , exception : Some ("OCP\\Calendar\\Exceptions\\CalendarException") , regex : "^Could not write to calendar as URI parameter is missing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalendarImpl.php" , line : 200usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\Calendar\\Exceptions\\CalendarException") , regex : "^Could not create new calendar event: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalendarImpl.php" , line : 220usize , placeholders : & [] , exception : Some ("OCP\\Calendar\\Exceptions\\CalendarException") , regex : "^Could not write to calendar as URI parameter is missing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalendarImpl.php" , line : 233usize , placeholders : & [] , exception : Some ("OCP\\Calendar\\Exceptions\\CalendarException") , regex : "^No Method provided for scheduling data\\. Could not process message$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalendarImpl.php" , line : 237usize , placeholders : & [] , exception : Some ("OCP\\Calendar\\Exceptions\\CalendarException") , regex : "^Could not process scheduling data, neccessary data missing from ICAL$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CachedSubscription.php" , line : 138usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Calendar object not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CachedSubscription.php" , line : 181usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^Creating objects in cached subscription is not allowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CachedSubscription.php" , line : 210usize , placeholders : & [] , exception : Some ("OCA\\DAV\\Exception\\UnsupportedLimitOnInitialSyncException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Activity/Provider/Calendar.php" , line : 88usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Activity/Provider/Calendar.php" , line : 146usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Activity/Provider/Calendar.php" , line : 275usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Activity/Provider/Todo.php" , line : 41usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Activity/Provider/Todo.php" , line : 77usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Activity/Provider/Todo.php" , line : 166usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Activity/Provider/Event.php" , line : 86usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Activity/Provider/Event.php" , line : 134usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Activity/Provider/Event.php" , line : 170usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Activity/Provider/Event.php" , line : 255usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/CalDAV/Reminder/NotificationProvider/EmailProvider.php" , line : 123usize , placeholders : & ["{address}"] , exception : None , regex : "^Email address (.*)Email address \\{address\\} for reminder notification is incorrect$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/CalDAV/Reminder/NotificationProvider/EmailProvider.php" , line : 139usize , placeholders : & ["{failed}"] , exception : None , regex : "^Unable to deliver message to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/CalDAV/Reminder/NotificationProvider/EmailProvider.php" , line : 142usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Reminder/Notifier.php" , line : 107usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Notification not from this app$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Reminder/Notifier.php" , line : 119usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unknown subject$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Reminder/Notifier.php" , line : 243usize , placeholders : & [] , exception : Some ("OCP\\Notification\\AlreadyProcessedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Reminder/ReminderService.php" , line : 128usize , placeholders : & [] , exception : None , regex : "^\\{numReminders\\} reminders to process$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Reminder/ReminderService.php" , line : 143usize , placeholders : & ["{id}"] , exception : None , regex : "^Reminder (.*)Reminder \\{id\\} does not belong to a valid calendar$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Reminder/ReminderService.php" , line : 153usize , placeholders : & [] , exception : None , regex : "^Recurrence with too many instances detected, skipping VEVENT$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Reminder/ReminderService.php" , line : 159usize , placeholders : & ["{id}"] , exception : None , regex : "^Reminder (.*)Reminder \\{id\\} does not belong to a valid event$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Reminder/ReminderService.php" , line : 167usize , placeholders : & ["{id}"] , exception : None , regex : "^Reminder (.*)Reminder \\{id\\} belongs to a cancelled event$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Reminder/ReminderService.php" , line : 175usize , placeholders : & ["{id}"] , exception : None , regex : "^Reminder (.*)Reminder \\{id\\} does not belong to a valid notification provider$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Reminder/ReminderService.php" , line : 199usize , placeholders : & ["{id}" , "{numUsers}"] , exception : None , regex : "^Reminder (.*) will be sent to (.*)Reminder \\{id\\} will be sent to \\{numUsers\\} users$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Reminder/ReminderService.php" , line : 563usize , placeholders : & [] , exception : None , regex : "^Recurrence with too many instances detected, skipping VEVENT$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Reminder/ReminderService.php" , line : 830usize , placeholders : & [] , exception : Some ("TypeError") , regex : "^Multiple master objects$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Reminder/NotificationProviderManager.php" , line : 64usize , placeholders : & ["$type"] , exception : Some ("OCA\\DAV\\CalDAV\\Reminder\\NotificationProvider\\ProviderNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Reminder/NotificationProviderManager.php" , line : 66usize , placeholders : & ["$type"] , exception : Some ("OCA\\DAV\\CalDAV\\Reminder\\NotificationTypeDoesNotExistException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Reminder/NotificationProviderManager.php" , line : 79usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid notification provider registered$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Search/Xml/Request/CalendarSearchReport.php" , line : 147usize , placeholders : & ["SearchPlugin::NS_Nextcloud"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The \\{(.*)\\}filter element is required for this request$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Search/Xml/Request/CalendarSearchReport.php" , line : 153usize , placeholders : & ["SearchPlugin::NS_Nextcloud" , "SearchPlugin::NS_Nextcloud" , "SearchPlugin::NS_Nextcloud"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^\\{(.*)\\}prop\\-filter or \\{(.*)\\}param\\-filter given without any \\{(.*)\\}comp\\-filter$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Search/Xml/Request/CalendarSearchReport.php" , line : 157usize , placeholders : & ["SearchPlugin::NS_Nextcloud"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^\\{(.*)\\}search\\-term is required for this request$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Search/Xml/Request/CalendarSearchReport.php" , line : 161usize , placeholders : & ["SearchPlugin::NS_Nextcloud" , "SearchPlugin::NS_Nextcloud"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^At least one\\{(.*)\\}prop\\-filter or \\{(.*)\\}param\\-filter is required for this request$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Search/Xml/Filter/SearchTermFilter.php" , line : 42usize , placeholders : & ["SearchPlugin::NS_Nextcloud"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The \\{(.*)\\}search\\-term has illegal value$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Search/Xml/Filter/LimitFilter.php" , line : 43usize , placeholders : & ["SearchPlugin::NS_Nextcloud"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The \\{(.*)\\}limit has illegal value$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Search/Xml/Filter/OffsetFilter.php" , line : 43usize , placeholders : & ["SearchPlugin::NS_Nextcloud"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The \\{(.*)\\}offset has illegal value$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Search/Xml/Filter/CompFilter.php" , line : 46usize , placeholders : & ["SearchPlugin::NS_Nextcloud"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The \\{(.*)\\}comp\\-filter requires a valid name attribute$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Search/Xml/Filter/PropFilter.php" , line : 46usize , placeholders : & ["SearchPlugin::NS_Nextcloud"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The \\{(.*)\\}prop\\-filter requires a valid name attribute$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Search/Xml/Filter/ParamFilter.php" , line : 47usize , placeholders : & ["SearchPlugin::NS_Nextcloud"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The \\{(.*)\\}param\\-filter requires a valid property attribute$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Search/Xml/Filter/ParamFilter.php" , line : 50usize , placeholders : & ["SearchPlugin::NS_Nextcloud"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The \\{(.*)\\}param\\-filter requires a valid parameter attribute$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/AppCalendar/AppCalendar.php" , line : 97usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Setting ACL is not supported on this node$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/AppCalendar/AppCalendar.php" , line : 112usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Deleting an entry is not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/AppCalendar/AppCalendar.php" , line : 123usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Creating a new entry is not allowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/AppCalendar/AppCalendar.php" , line : 183usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Node not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/AppCalendar/CalendarObject.php" , line : 77usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Setting ACL is not supported on this node$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/AppCalendar/CalendarObject.php" , line : 91usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^This calendar\\-object is read\\-only$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/AppCalendar/CalendarObject.php" , line : 124usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^This calendar\\-object is read\\-only$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/AppCalendar/CalendarObject.php" , line : 133usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Invalid node$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/AppCalendar/CalendarObject.php" , line : 142usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^This calendar\\-object is read\\-only$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Calendar.php" , line : 88usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Calendar.php" , line : 272usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Calendar object not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Calendar.php" , line : 276usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Calendar object not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Calendar.php" , line : 389usize , placeholders : & [] , exception : Some ("OCA\\DAV\\Exception\\UnsupportedLimitOnInitialSyncException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/CalDAV/Calendar.php" , line : 417usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Could not move calendar object: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/CalDAV/WebcalCaching/RefreshWebcalService.php" , line : 131usize , placeholders : & ["{subscriptionId}"] , exception : None , regex : "^Unable to create calendar object from subscription (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/CalDAV/WebcalCaching/RefreshWebcalService.php" , line : 142usize , placeholders : & ["{subscriptionId}"] , exception : None , regex : "^Subscription (.*)Subscription \\{subscriptionId\\} could not be refreshed due to a parsing error$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/dav/lib/CalDAV/WebcalCaching/RefreshWebcalService.php" , line : 229usize , placeholders : & ["$subscriptionId"] , exception : None , regex : "^Subscription (.*) could not be parsed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/dav/lib/CalDAV/WebcalCaching/RefreshWebcalService.php" , line : 239usize , placeholders : & ["$subscriptionId"] , exception : None , regex : "^Subscription (.*) could not be parsed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/dav/lib/CalDAV/WebcalCaching/RefreshWebcalService.php" , line : 250usize , placeholders : & ["$subscriptionId"] , exception : None , regex : "^Subscription (.*) could not be parsed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/dav/lib/CalDAV/WebcalCaching/RefreshWebcalService.php" , line : 256usize , placeholders : & ["$subscriptionId"] , exception : None , regex : "^Subscription (.*) was not refreshed because it violates local access rules$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/dav/lib/CalDAV/WebcalCaching/RefreshWebcalService.php" , line : 262usize , placeholders : & ["$subscriptionId"] , exception : None , regex : "^Subscription (.*) could not be refreshed due to a network error$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CachedSubscriptionObject.php" , line : 57usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^Creating objects in a cached subscription is not allowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CachedSubscriptionObject.php" , line : 64usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^Deleting objects in a cached subscription is not allowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Status/StatusService.php" , line : 65usize , placeholders : & [] , exception : None , regex : "^An Absence is in effect, skipping calendar status check$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Status/StatusService.php" , line : 84usize , placeholders : & [] , exception : None , regex : "^Unique constraint violation for live user status$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Status/StatusService.php" , line : 88usize , placeholders : & [] , exception : None , regex : "^No calendar events found for status check$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Status/StatusService.php" , line : 105usize , placeholders : & [] , exception : None , regex : "^Higher priority status detected, skipping calendar status change$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Status/StatusService.php" , line : 141usize , placeholders : & [] , exception : None , regex : "^Unique constraint violation for live user status$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Status/StatusService.php" , line : 145usize , placeholders : & [] , exception : None , regex : "^No status relevant events found, skipping calendar status change$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Status/StatusService.php" , line : 156usize , placeholders : & ["$count"] , exception : None , regex : "^Found (.*) applicable event\\(s\\), changing user status$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/CalDAV/ResourceBooking/AbstractPrincipalBackend.php" , line : 409usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Could not search resources: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/CalDAV/ResourceBooking/AbstractPrincipalBackend.php" , line : 527usize , placeholders : & ["$this->dbTableName" , "$row['id']"] , exception : None , regex : "^group_restrictions field could not be parsed for (.*)::(.*), denying access to resource$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalendarHome.php" , line : 93usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^The resource you tried to create has a reserved name$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalendarHome.php" , line : 212usize , placeholders : & ["$name"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Node with name '(.*)' could not be found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/dav/lib/CalDAV/Schedule/IMipPlugin.php" , line : 181usize , placeholders : & [] , exception : None , regex : "^iTip message said the change was significant but comparison did not detect any updated VEvents$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Schedule/IMipPlugin.php" , line : 194usize , placeholders : & ["$recipient" , "$uid"] , exception : None , regex : "^Could not find recipient (.*) as attendee for event with UID (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Schedule/IMipPlugin.php" , line : 200usize , placeholders : & [] , exception : None , regex : "^No invitation sent as recipient is room or resource$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/CalDAV/Schedule/IMipPlugin.php" , line : 317usize , placeholders : & ["{failed}"] , exception : None , regex : "^Unable to deliver message to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/CalDAV/Schedule/IMipPlugin.php" , line : 321usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Schedule/Plugin.php" , line : 217usize , placeholders : & ["$iTipMessage->scheduleStatus"] , exception : None , regex : "^Message not delivered locally with status: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Schedule/Plugin.php" , line : 235usize , placeholders : & [] , exception : None , regex : "^Calendar user type is room or resource, not processing further$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Schedule/Plugin.php" , line : 241usize , placeholders : & [] , exception : None , regex : "^No attendee set for scheduling message$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Schedule/Plugin.php" , line : 248usize , placeholders : & ["$attendee->getValue()"] , exception : None , regex : "^No RSVP requested for attendee (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Schedule/Plugin.php" , line : 253usize , placeholders : & [] , exception : None , regex : "^No VEVENT set to process on scheduling message$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/Schedule/Plugin.php" , line : 259usize , placeholders : & [] , exception : None , regex : "^VEVENT is a recurring event, autoresponding not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Integration/ExternalCalendar.php" , line : 84usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^Renaming calendars is not yet supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Integration/ExternalCalendar.php" , line : 91usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^Creating collections in calendar objects is not allowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Integration/ExternalCalendar.php" , line : 115usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Provided calendar uri was not app\\-generated$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/PublicCalendar.php" , line : 40usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Calendar object not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/PublicCalendar.php" , line : 43usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Calendar object not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/CalDAV/ICSExportPlugin/ICSExportPlugin.php" , line : 75usize , placeholders : & [] , exception : None , regex : "^Invalid refresh interval for exported calendar, falling back to default value \\.\\.\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalDavBackend.php" , line : 599usize , placeholders : & ["$uri"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Node with name '(.*)' could not be found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalDavBackend.php" , line : 782usize , placeholders : & [] , exception : Some ("OCP\\Calendar\\Exceptions\\CalendarException") , regex : "^URI too long\\. Calendar not created$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalDavBackend.php" , line : 798usize , placeholders : & ["$sccs"] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^The (.*) property must be of type: \\\\Sabre\\\\CalDAV\\\\Property\\\\SupportedCalendarComponentSet$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalDavBackend.php" , line : 970usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Calendar data that was just written can't be read back\\. Check your database configuration\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalDavBackend.php" , line : 1262usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Calendar object with uid already exists in this calendar collection\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalDavBackend.php" , line : 1446usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalDavBackend.php" , line : 1512usize , placeholders : & ["$newUri" , "$calendarId"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^A calendar object with URI (.*) already exists in calendar (.*), therefore this object can't be moved into the trashbin$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalDavBackend.php" , line : 1558usize , placeholders : & ["$id" , "$restoreUri"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Can not restore calendar (.*) because a calendar object with the URI (.*) already exists$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalDavBackend.php" , line : 1585usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Calendar object data that was just written can't be read back\\. Check your database configuration\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/CalDAV/CalDavBackend.php" , line : 1710usize , placeholders : & ["$calendarId" , "$row['uri']"] , exception : None , regex : "^Caught parsing exception for calendar data\\. This usually indicates invalid calendar data\\. calendar\\-id:(.*) uri:(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/CalDAV/CalDavBackend.php" , line : 1716usize , placeholders : & ["$calendarId" , "$row['uri']"] , exception : None , regex : "^Caught invalid data exception for calendar data\\. This usually indicates invalid calendar data\\. calendar\\-id:(.*) uri:(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalDavBackend.php" , line : 2593usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^The \\{http://calendarserver\\.org/ns/\\}source property is required when creating subscriptions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/CalDAV/CalDavBackend.php" , line : 2844usize , placeholders : & ["$limit"] , exception : None , regex : "^Deleted (.*) scheduling objects, continuing with next batch$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalDavBackend.php" , line : 3000usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Calendar objects must have a VJOURNAL, VEVENT or VTODO component$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalDavBackend.php" , line : 3082usize , placeholders : & ["$calendarId"] , exception : Some ("RuntimeException") , regex : "^Trying to update shares for non\\-existing calendar: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalDavBackend.php" , line : 3368usize , placeholders : & ["$uri"] , exception : Some ("InvalidArgumentException") , regex : "^Calendarobject does not exists: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/CalDavBackend.php" , line : 3379usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Security/RateLimitingPlugin.php" , line : 90usize , placeholders : & [] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\TooManyRequests") , regex : "^Too many calendars created$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/dav/lib/CalDAV/Security/RateLimitingPlugin.php" , line : 101usize , placeholders : & [] , exception : None , regex : "^Maximum number of calendars/subscriptions reached$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Security/RateLimitingPlugin.php" , line : 106usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Calendar limit reached$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/DeletedCalendarObject.php" , line : 74usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/DeletedCalendarObject.php" , line : 82usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/TrashbinHome.php" , line : 63usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to create files in the trashbin$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/TrashbinHome.php" , line : 67usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to create a directory in the trashbin$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/TrashbinHome.php" , line : 81usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/TrashbinHome.php" , line : 102usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to delete the trashbin$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/TrashbinHome.php" , line : 110usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename the trashbin$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/TrashbinHome.php" , line : 118usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/RestoreTarget.php" , line : 39usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/RestoreTarget.php" , line : 43usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/RestoreTarget.php" , line : 47usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/RestoreTarget.php" , line : 68usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/RestoreTarget.php" , line : 76usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/DeletedCalendarObjectsCollection.php" , line : 61usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotImplemented") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/DeletedCalendarObjectsCollection.php" , line : 66usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/DeletedCalendarObjectsCollection.php" , line : 76usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/DeletedCalendarObjectsCollection.php" , line : 79usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The calendar object you're trying to restore is not marked as deleted$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/DeletedCalendarObjectsCollection.php" , line : 91usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/DeletedCalendarObjectsCollection.php" , line : 95usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/DeletedCalendarObjectsCollection.php" , line : 109usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/CalDAV/Trashbin/DeletedCalendarObjectsCollection.php" , line : 117usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/AppInfo/PluginManager.php" , line : 266usize , placeholders : & ["$className"] , exception : Some ("Exception") , regex : "^Could not load (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/AppInfo/PluginManager.php" , line : 279usize , placeholders : & ["$className" , "ServerPlugin::class"] , exception : Some ("Exception") , regex : "^Sabre server plugin (.*) does not implement the (.*) interface$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/AppInfo/PluginManager.php" , line : 293usize , placeholders : & ["$className" , "Collection::class"] , exception : Some ("Exception") , regex : "^Sabre collection plugin (.*) does not implement the (.*) interface$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/AppInfo/PluginManager.php" , line : 307usize , placeholders : & ["$className" , "IAddressBookProvider::class"] , exception : Some ("Exception") , regex : "^Sabre address book plugin class (.*) does not implement the (.*) interface$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/AppInfo/PluginManager.php" , line : 321usize , placeholders : & ["$className" , "ICalendarProvider::class"] , exception : Some ("Exception") , regex : "^Sabre calendar plugin class (.*) does not implement the (.*) interface$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/AppInfo/Application.php" , line : 315usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/UserMigration/ContactsMigrator.php" , line : 98usize , placeholders : & [] , exception : Some ("OCA\\DAV\\UserMigration\\InvalidAddressBookException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/UserMigration/ContactsMigrator.php" , line : 133usize , placeholders : & [] , exception : Some ("OCA\\DAV\\UserMigration\\InvalidAddressBookException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/UserMigration/ContactsMigrator.php" , line : 174usize , placeholders : & [] , exception : Some ("OCA\\DAV\\UserMigration\\InvalidAddressBookException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/UserMigration/ContactsMigrator.php" , line : 255usize , placeholders : & [] , exception : Some ("OCA\\DAV\\UserMigration\\CalendarMigratorException") , regex : "^Could not export address book$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/UserMigration/ContactsMigrator.php" , line : 312usize , placeholders : & ["ContactsMigrator::PATH_ROOT"] , exception : Some ("OCA\\DAV\\UserMigration\\ContactsMigratorException") , regex : "^Failed to sort address book files in (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/UserMigration/ContactsMigrator.php" , line : 316usize , placeholders : & ["ContactsMigrator::FILENAME_EXT" , "ContactsMigrator::METADATA_EXT"] , exception : Some ("OCA\\DAV\\UserMigration\\ContactsMigratorException") , regex : "^Each (.*) file must have a corresponding (.*) file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/UserMigration/ContactsMigrator.php" , line : 321usize , placeholders : & ["ContactsMigrator::FILENAME_EXT" , "ContactsMigrator::METADATA_EXT"] , exception : Some ("OCA\\DAV\\UserMigration\\ContactsMigratorException") , regex : "^Each (.*) file must have a corresponding (.*) file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/UserMigration/CalendarMigrator.php" , line : 129usize , placeholders : & [] , exception : Some ("OCA\\DAV\\UserMigration\\InvalidCalendarException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/UserMigration/CalendarMigrator.php" , line : 155usize , placeholders : & [] , exception : Some ("OCA\\DAV\\UserMigration\\InvalidCalendarException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/UserMigration/CalendarMigrator.php" , line : 196usize , placeholders : & [] , exception : Some ("OCA\\DAV\\UserMigration\\InvalidCalendarException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/UserMigration/CalendarMigrator.php" , line : 264usize , placeholders : & [] , exception : Some ("OCA\\DAV\\UserMigration\\CalendarMigratorException") , regex : "^Could not export calendars$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/UserMigration/CalendarMigrator.php" , line : 360usize , placeholders : & [] , exception : Some ("OCA\\DAV\\UserMigration\\InvalidCalendarException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Comments/RootCollection.php" , line : 74usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotAuthenticated") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Comments/RootCollection.php" , line : 103usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Cannot create comments by id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Comments/RootCollection.php" , line : 113usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to create collections$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Comments/RootCollection.php" , line : 131usize , placeholders : & ["$name"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Entity type \"(.*)\" not found\\.\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Comments/RootCollection.php" , line : 163usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to delete this collection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Comments/RootCollection.php" , line : 184usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename this collection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Comments/CommentsPlugin.php" , line : 162usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\ReportNotSupported") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Comments/CommentsPlugin.php" , line : 225usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\UnsupportedMediaType") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Comments/CommentsPlugin.php" , line : 237usize , placeholders : & ["$actorType"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Invalid actor \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Comments/CommentsPlugin.php" , line : 247usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Invalid input values$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Comments/CommentsPlugin.php" , line : 250usize , placeholders : & ["$msg" , "\\OCP\\Comments\\IComment::MAX_MESSAGE_LENGTH"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^(.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Comments/CommentNode.php" , line : 131usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Only authors are allowed to edit their comment\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Comments/CommentNode.php" , line : 163usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Comments/CommentNode.php" , line : 188usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Comments/CommentNode.php" , line : 191usize , placeholders : & ["$msg" , "IComment::MAX_MESSAGE_LENGTH"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^(.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Comments/CommentNode.php" , line : 281usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Comments/EntityCollection.php" , line : 70usize , placeholders : & ["$property"] , exception : Some ("InvalidArgumentException") , regex : "^\"(.*)\" parameter must be non\\-empty string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Comments/EntityCollection.php" , line : 111usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Comments/EntityTypeCollection.php" , line : 61usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^\"name\" parameter must be non\\-empty string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Comments/EntityTypeCollection.php" , line : 83usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Entity does not exist or is not available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Comments/EntityTypeCollection.php" , line : 102usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^No permission to list folder contents$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/CalendarDeletionDefaultUpdaterListener.php" , line : 64usize , placeholders : & [] , exception : None , regex : "^Default calendar needs no update because the deleted calendar does not belong to a user principal$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/CalendarDeletionDefaultUpdaterListener.php" , line : 71usize , placeholders : & [] , exception : None , regex : "^Default calendar needs no update because the deleted calendar is no the user's default one$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/CalendarDeletionDefaultUpdaterListener.php" , line : 77usize , placeholders : & [] , exception : None , regex : "^Default user calendar reset$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/CalendarDeletionDefaultUpdaterListener.php" , line : 80usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error generating activities for a deleted calendar: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/AddressbookListener.php" , line : 60usize , placeholders : & ["sprintf('Activity generated for new addressbook %d', $event->getAddressBookId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/AddressbookListener.php" , line : 65usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error generating activities for a new addressbook: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/AddressbookListener.php" , line : 77usize , placeholders : & ["sprintf('Activity generated for changed addressbook %d', $event->getAddressBookId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/AddressbookListener.php" , line : 82usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error generating activities for a changed addressbook: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/AddressbookListener.php" , line : 93usize , placeholders : & ["sprintf('Activity generated for deleted addressbook %d', $event->getAddressBookId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/AddressbookListener.php" , line : 98usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error generating activities for a deleted addressbook: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/AddressbookListener.php" , line : 111usize , placeholders : & ["sprintf('Activity generated for (un)sharing addressbook %d', $event->getAddressBookId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/AddressbookListener.php" , line : 116usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error generating activities for \\(un\\)sharing addressbook: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/OutOfOfficeListener.php" , line : 134usize , placeholders : & [] , exception : None , regex : "^Principal has no calendar home path$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/OutOfOfficeListener.php" , line : 141usize , placeholders : & [] , exception : None , regex : "^Calendar home not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/OutOfOfficeListener.php" , line : 150usize , placeholders : & [] , exception : None , regex : "^Personal calendar does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/dav/lib/Listener/OutOfOfficeListener.php" , line : 157usize , placeholders : & [] , exception : None , regex : "^Personal calendar node is not a calendar$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/dav/lib/Listener/OutOfOfficeListener.php" , line : 161usize , placeholders : & [] , exception : None , regex : "^Personal calendar has been deleted$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/CalendarObjectReminderUpdaterListener.php" , line : 77usize , placeholders : & ["sprintf('Reminders of calendar %d cleaned up after move into trashbin', $event->getCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/CalendarObjectReminderUpdaterListener.php" , line : 82usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error cleaning up reminders of a calendar moved into trashbin: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/CalendarObjectReminderUpdaterListener.php" , line : 92usize , placeholders : & ["sprintf('Reminders of calendar %d cleaned up', $event->getCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/CalendarObjectReminderUpdaterListener.php" , line : 97usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error cleaning up reminders of a deleted calendar: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/CalendarObjectReminderUpdaterListener.php" , line : 104usize , placeholders : & ["sprintf('Restoring calendar reminder objects for %d items', count($objects))"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/CalendarObjectReminderUpdaterListener.php" , line : 113usize , placeholders : & ["sprintf('Reminders of calendar %d restored', $event->getCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/CalendarObjectReminderUpdaterListener.php" , line : 118usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error restoring reminders of a calendar: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/CalendarObjectReminderUpdaterListener.php" , line : 128usize , placeholders : & ["sprintf('Reminders of calendar object of calendar %d created', $event->getCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/CalendarObjectReminderUpdaterListener.php" , line : 133usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error creating reminders of a calendar object: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/CalendarObjectReminderUpdaterListener.php" , line : 143usize , placeholders : & ["sprintf('Reminders of calendar object of calendar %d cleaned up', $event->getCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/CalendarObjectReminderUpdaterListener.php" , line : 148usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error cleaning up reminders of a calendar object: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/CalendarObjectReminderUpdaterListener.php" , line : 158usize , placeholders : & ["sprintf('Reminders of restored calendar object of calendar %d deleted', $event->getCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/CalendarObjectReminderUpdaterListener.php" , line : 163usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error deleting reminders of a calendar object: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/CalendarObjectReminderUpdaterListener.php" , line : 173usize , placeholders : & ["sprintf('Reminders of restored calendar object of calendar %d restored', $event->getCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/CalendarObjectReminderUpdaterListener.php" , line : 178usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error restoring reminders of a calendar object: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/CalendarObjectReminderUpdaterListener.php" , line : 188usize , placeholders : & ["sprintf('Reminders of calendar object of calendar %d cleaned up', $event->getCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/CalendarObjectReminderUpdaterListener.php" , line : 193usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error cleaning up reminders of a deleted calendar object: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/CardListener.php" , line : 63usize , placeholders : & ["sprintf('Activity generated for a new card in addressbook %d', $event->getAddressBookId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/CardListener.php" , line : 68usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error generating activities for a new card in addressbook: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/CardListener.php" , line : 81usize , placeholders : & ["sprintf('Activity generated for a changed card in addressbook %d', $event->getAddressBookId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/CardListener.php" , line : 86usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error generating activities for a changed card in addressbook: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/CardListener.php" , line : 99usize , placeholders : & ["sprintf('Activity generated for a deleted card in addressbook %d', $event->getAddressBookId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/CardListener.php" , line : 104usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error generating activities for a deleted card in addressbook: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/dav/lib/Listener/CalendarContactInteractionListener.php" , line : 104usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Could not read calendar data for interaction events: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/CalendarPublicationListener.php" , line : 51usize , placeholders : & [] , exception : None , regex : "^Creating activity for Calendar being published$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/CalendarPublicationListener.php" , line : 58usize , placeholders : & [] , exception : None , regex : "^Creating activity for Calendar being unpublished$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/SubscriptionListener.php" , line : 61usize , placeholders : & ["$subscriptionId"] , exception : None , regex : "^Refreshing webcal data for subscription (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/SubscriptionListener.php" , line : 67usize , placeholders : & ["$subscriptionId"] , exception : None , regex : "^Scheduling webcal data refreshment for subscription (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/SubscriptionListener.php" , line : 76usize , placeholders : & ["$subscriptionId"] , exception : None , regex : "^Removing refresh webcal job for subscription (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/SubscriptionListener.php" , line : 82usize , placeholders : & ["$subscriptionId"] , exception : None , regex : "^Cleaning all reminders for subscription (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 69usize , placeholders : & ["sprintf('Activity generated for new calendar %d', $event->getCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 74usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error generating activities for a new calendar: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 86usize , placeholders : & ["sprintf('Activity generated for changed calendar %d', $event->getCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 91usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error generating activities for changed calendar: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 102usize , placeholders : & ["sprintf('Activity generated for changed calendar %d', $event->getCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 107usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error generating activities for changed calendar: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 118usize , placeholders : & ["sprintf('Activity generated for changed calendar %d', $event->getCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 123usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error generating activities for changed calendar: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 131usize , placeholders : & ["sprintf('Calendar %d was already in trashbin, skipping deletion activity', $event->getCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 140usize , placeholders : & ["sprintf('Activity generated for deleted calendar %d', $event->getCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 146usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error generating activities for a deleted calendar: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 159usize , placeholders : & ["sprintf('Activity generated for new calendar object in calendar %d', $event->getCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 164usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error generating activity for a new calendar object: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 177usize , placeholders : & ["sprintf('Activity generated for updated calendar object in calendar %d', $event->getCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 182usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error generating activity for a deleted calendar object: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 196usize , placeholders : & ["sprintf('Activity generated for moved calendar object from calendar %d to calendar %d', $event->getSourceCalendarId(), $event->getTargetCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 201usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error generating activity for a deleted calendar object: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 214usize , placeholders : & ["sprintf('Activity generated for a calendar object of calendar %d that is moved to trash', $event->getCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 219usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error generating activity for a new calendar object: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 232usize , placeholders : & ["sprintf('Activity generated for a restore calendar object of calendar %d', $event->getCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 237usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error generating activity for a restored calendar object: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 245usize , placeholders : & ["sprintf('Calendar object in calendar %d was already in trashbin, skipping deletion activity', $event->getCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 256usize , placeholders : & ["sprintf('Activity generated for deleted calendar object in calendar %d', $event->getCalendarId())"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Listener/ActivityUpdaterListener.php" , line : 262usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error generating activity for a deleted calendar object: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Listener/CalendarShareUpdateListener.php" , line : 54usize , placeholders : & [] , exception : None , regex : "^Creating activity for Calendar having its shares updated$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Db/AbsenceMapper.php" , line : 60usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^The impossible has happened! The query returned multiple absence settings for one user\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Db/AbsenceMapper.php" , line : 85usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^The impossible has happened! The query returned multiple absence settings for one user\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Db/Absence.php" , line : 73usize , placeholders : & ["$this->getUserId()" , "$user->getUID()"] , exception : Some ("InvalidArgumentException") , regex : "^The user doesn't match the user id of this absence! Expected (.*), got (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Db/Absence.php" , line : 76usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Creating out\\-of\\-office data without ID$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Migration/Version1025Date20240308063933.php" , line : 107usize , placeholders : & ["$updated" , "$tableName"] , exception : None , regex : "^Added a default creation timestamp to (.*) rows in (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/BuildCalendarSearchIndexBackgroundJob.php" , line : 52usize , placeholders : & ["$offset" , "$stopAt"] , exception : None , regex : "^Building calendar index \\((.*)/(.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/BuildCalendarSearchIndexBackgroundJob.php" , line : 63usize , placeholders : & [] , exception : None , regex : "^Building calendar index done$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/BuildCalendarSearchIndexBackgroundJob.php" , line : 69usize , placeholders : & ["$offset"] , exception : None , regex : "^New building calendar index job scheduled with offset (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/DeleteSchedulingObjects.php" , line : 30usize , placeholders : & [] , exception : None , regex : "^Cleaning up old scheduling events$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/DeleteSchedulingObjects.php" , line : 34usize , placeholders : & [] , exception : None , regex : "^Adding background job to delete old scheduling objects$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/CalDAVRemoveEmptyValue.php" , line : 73usize , placeholders : & ["{cal}" , "{uri}"] , exception : None , regex : "^Calendar object for calendar (.*) with uri (.*)Calendar object for calendar \\{cal\\} with uri \\{uri\\} still invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/dav/lib/Migration/CalDAVRemoveEmptyValue.php" , line : 89usize , placeholders : & ["sprintf('%d events could not be updated, see log file for more information', $warnings)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/CalDAVRemoveEmptyValue.php" , line : 92usize , placeholders : & ["sprintf('Updated %d events', $count)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/RemoveOrphanEventsAndContacts.php" , line : 57usize , placeholders : & ["sprintf('%d events without a calendar have been cleaned up', $orphanItems)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/RemoveOrphanEventsAndContacts.php" , line : 59usize , placeholders : & ["sprintf('%d properties without an events have been cleaned up', $orphanItems)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/RemoveOrphanEventsAndContacts.php" , line : 61usize , placeholders : & ["sprintf('%d changes without a calendar have been cleaned up', $orphanItems)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/RemoveOrphanEventsAndContacts.php" , line : 64usize , placeholders : & ["sprintf('%d cached events without a calendar subscription have been cleaned up', $orphanItems)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/RemoveOrphanEventsAndContacts.php" , line : 66usize , placeholders : & ["sprintf('%d changes without a calendar subscription have been cleaned up', $orphanItems)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/RemoveOrphanEventsAndContacts.php" , line : 69usize , placeholders : & ["sprintf('%d contacts without an addressbook have been cleaned up', $orphanItems)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/RemoveOrphanEventsAndContacts.php" , line : 71usize , placeholders : & ["sprintf('%d properties without a contact have been cleaned up', $orphanItems)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/RemoveOrphanEventsAndContacts.php" , line : 73usize , placeholders : & ["sprintf('%d changes without an addressbook have been cleaned up', $orphanItems)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/BuildSocialSearchIndex.php" , line : 69usize , placeholders : & [] , exception : None , regex : "^Repair step already executed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/BuildSocialSearchIndex.php" , line : 83usize , placeholders : & [] , exception : None , regex : "^Add background job$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/Version1027Date20230504122946.php" , line : 53usize , placeholders : & [] , exception : None , regex : "^Could not sync system address books during update \\- too many user records have been found\\. Please call occ dav:sync\\-system\\-addressbook manually\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Migration/Version1027Date20230504122946.php" , line : 62usize , placeholders : & [] , exception : None , regex : "^Could not sync system address books during update$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/dav/lib/Migration/Version1027Date20230504122946.php" , line : 65usize , placeholders : & [] , exception : None , regex : "^System address book sync failed\\. See logs for details$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/RemoveDeletedUsersCalendarSubscriptions.php" , line : 78usize , placeholders : & ["sprintf('%d calendar subscriptions without an user have been cleaned up', count($this->orphanSubscriptionIds))"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/FixBirthdayCalendarComponent.php" , line : 60usize , placeholders : & ["$updated"] , exception : None , regex : "^(.*) birthday calendars updated\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/BuildSocialSearchIndexBackgroundJob.php" , line : 51usize , placeholders : & ["$offset" , "$stopAt"] , exception : None , regex : "^Indexing social profile data \\((.*)/(.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/BuildSocialSearchIndexBackgroundJob.php" , line : 56usize , placeholders : & [] , exception : None , regex : "^All contacts with social profiles indexed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/BuildSocialSearchIndexBackgroundJob.php" , line : 62usize , placeholders : & ["$offset"] , exception : None , regex : "^New social profile indexing job scheduled with offset (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/RemoveObjectProperties.php" , line : 63usize , placeholders : & ["$updated"] , exception : None , regex : "^(.*) invalid object properties removed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/RemoveClassifiedEventActivity.php" , line : 61usize , placeholders : & ["$deletedEvents"] , exception : None , regex : "^Removed (.*) activity entries$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/RegisterBuildReminderIndexBackgroundJob.php" , line : 83usize , placeholders : & [] , exception : None , regex : "^Repair step already executed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/RegisterBuildReminderIndexBackgroundJob.php" , line : 94usize , placeholders : & [] , exception : None , regex : "^Add background job$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/RegenerateBirthdayCalendars.php" , line : 63usize , placeholders : & [] , exception : None , regex : "^Repair step already executed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/RegenerateBirthdayCalendars.php" , line : 67usize , placeholders : & [] , exception : None , regex : "^Adding background jobs to regenerate birthday calendar$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/RefreshWebcalJobRegistrar.php" , line : 83usize , placeholders : & ["$count"] , exception : None , regex : "^Added (.*) background jobs to update webcal calendars$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/ChunkCleanup.php" , line : 67usize , placeholders : & [] , exception : None , regex : "^Cleanup not required$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/BuildCalendarSearchIndex.php" , line : 72usize , placeholders : & [] , exception : None , regex : "^Repair step already executed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/dav/lib/Migration/BuildCalendarSearchIndex.php" , line : 83usize , placeholders : & [] , exception : None , regex : "^Add background job$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/LegacyPublicAuth.php" , line : 110usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotAuthenticated") , regex : "^Cannot authenticate over ajax calls$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/QuotaPlugin.php" , line : 173usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid destination node$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/QuotaPlugin.php" , line : 185usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid destination node$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/QuotaPlugin.php" , line : 232usize , placeholders : & ["$path" , "$length" , "$freeSpace"] , exception : Some ("Sabre\\DAV\\Exception\\InsufficientStorage") , regex : "^Insufficient space in (.*), (.*) required, (.*) available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/QuotaPlugin.php" , line : 272usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/MaintenancePlugin.php" , line : 86usize , placeholders : & ["$this->l10n->t('System is in maintenance mode.')"] , exception : Some ("OCA\\DAV\\Exception\\ServerMaintenanceMode") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/MaintenancePlugin.php" , line : 89usize , placeholders : & ["$this->l10n->t('Upgrade needed')"] , exception : Some ("OCA\\DAV\\Exception\\ServerMaintenanceMode") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/FilesPlugin.php" , line : 193usize , placeholders : & ["$source"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^(.*) does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/FilesPlugin.php" , line : 197usize , placeholders : & ["$source"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^(.*) cannot be deleted$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/FilesPlugin.php" , line : 587usize , placeholders : & ["$metadataKey"] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataException") , regex : "^you do not have enough rights to update '(.*)' on this node$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/DavAclPlugin.php" , line : 72usize , placeholders : & ["sprintf(\n\t\t\t\t\t\"%s with name '%s' could not be found\",\n\t\t\t\t\t$type,\n\t\t\t\t\t$node->getName()\n\t\t\t\t)"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/LockPlugin.php" , line : 76usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\FileLocked") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 143usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 146usize , placeholders : & ["$this->l10n->t('File is not updatable: %1$s', [$e->getMessage()])"] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 181usize , placeholders : & ["$this->l10n->t('Could not write to final file, canceled by hook')"] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 206usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\FileLocked") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 267usize , placeholders : & [] , exception : None , regex : "^\\\\OC\\\\Files\\\\Filesystem::fopen\\(\\) failed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 269usize , placeholders : & ["$this->l10n->t('Could not write file contents')"] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 282usize , placeholders : & ["$this->l10n->t(\n\t\t\t\t\t\t\t'Error while copying file to target location (copied: %1$s, expected filesize: %2$s)',\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$this->l10n->n('%n byte', '%n bytes', $count),\n\t\t\t\t\t\t\t\t$this->l10n->n('%n byte', '%n bytes', $expected),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t)"] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 301usize , placeholders : & ["$this->l10n->t(\n\t\t\t\t\t\t\t'Expected filesize of %1$s but read (from Nextcloud client) and wrote (to Nextcloud storage) %2$s. Could either be a network problem on the sending side or a problem writing to the storage on the server side.',\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$this->l10n->n('%n byte', '%n bytes', $expected),\n\t\t\t\t\t\t\t\t$this->l10n->n('%n byte', '%n bytes', $count),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t)"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 314usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 316usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 329usize , placeholders : & ["$this->l10n->t('Could not rename part file to final file, canceled by hook')"] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 348usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\FileLocked") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 357usize , placeholders : & ["($renameOkay ? 'true' : 'false')" , "($fileExists ? 'true' : 'false')"] , exception : None , regex : "^renaming part file to final file failed \\$renameOkay: (.*), \\$fileExists: (.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 358usize , placeholders : & ["$this->l10n->t('Could not rename part file to final file')"] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 364usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\Forbidden") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 377usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\FileLocked") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 417usize , placeholders : & ["$this->l10n->t('Failed to check file size: %1$s', [$e->getMessage()])"] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 496usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 505usize , placeholders : & ["$this->l10n->t('Could not open file')"] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 512usize , placeholders : & ["$this->getId()"] , exception : None , regex : "^fixing cached size of file id=(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 521usize , placeholders : & ["$this->l10n->t('Encryption not ready: %1$s', [$e->getMessage()])"] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 523usize , placeholders : & ["$this->l10n->t('Failed to open file: %1$s', [$e->getMessage()])"] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 525usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\Forbidden") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 527usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\FileLocked") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 539usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 545usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 548usize , placeholders : & ["$this->l10n->t('Failed to unlink: %1$s', [$e->getMessage()])"] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 550usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\Forbidden") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 552usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\FileLocked") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 602usize , placeholders : & ["$this->l10n->t('Invalid chunk name')"] , exception : Some ("Sabre\\DAV\\Exception\\NotImplemented") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 615usize , placeholders : & ["$this->l10n->t(\n\t\t\t\t\t\t\t'Expected filesize of %1$s but read (from Nextcloud client) and wrote (to Nextcloud storage) %2$s. Could either be a network problem on the sending side or a problem writing to the storage on the server side.',\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$this->l10n->n('%n byte', '%n bytes', $expected),\n\t\t\t\t\t\t\t\t$this->l10n->n('%n byte', '%n bytes', $bytesWritten),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t)"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 661usize , placeholders : & [] , exception : None , regex : "^\\\\OC\\\\Files\\\\Filesystem::rename\\(\\) failed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 670usize , placeholders : & ["$this->l10n->t('Could not rename part file assembled from chunks')"] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 731usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 735usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\Forbidden") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 739usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\EntityTooLarge") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 743usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\UnsupportedMediaType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 748usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 752usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\FileLocked") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 756usize , placeholders : & ["$this->l10n->t('Encryption not ready: %1$s', [$e->getMessage()])"] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 759usize , placeholders : & ["$this->l10n->t('Failed to write file contents: %1$s', [$e->getMessage()])"] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 762usize , placeholders : & ["$this->l10n->t('File not found: %1$s', [$e->getMessage()])"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/File.php" , line : 765usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Node.php" , line : 108usize , placeholders : & ["$this->path"] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Failed to get fileinfo for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Node.php" , line : 148usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Node.php" , line : 160usize , placeholders : & ["$this->path" , "$newPath"] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Failed to rename (.*) to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Node.php" , line : 391usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\InvalidPath") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/dav/lib/Connector/Sabre/ExceptionLoggerPlugin.php" , line : 122usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/apps/dav/lib/Connector/Sabre/ExceptionLoggerPlugin.php" , line : 129usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 122usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 127usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 154usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 156usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\InvalidPath") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 158usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\Forbidden") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 160usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\FileLocked") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 176usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 182usize , placeholders : & ["$newPath"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Could not create directory (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 185usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 187usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\InvalidPath") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 189usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\Forbidden") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 191usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\FileLocked") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 208usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 217usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 219usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\InvalidPath") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 221usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 226usize , placeholders : & ["$path"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^File with name (.*) could not be located$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 256usize , placeholders : & [] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\Forbidden") , regex : "^No read permissions\\. This might be caused by files_accesscontrol, check your configured rules$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 258usize , placeholders : & [] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\Forbidden") , regex : "^No read permissions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 263usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Locked") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 305usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 311usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 314usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\Forbidden") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 316usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\FileLocked") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 335usize , placeholders : & [] , exception : None , regex : "^error while getting quota as the relative path cannot be found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 352usize , placeholders : & [] , exception : None , regex : "^error while getting quota into$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 355usize , placeholders : & [] , exception : None , regex : "^error while getting quota into$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 358usize , placeholders : & [] , exception : None , regex : "^error while getting quota into$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 395usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Incompatible node types$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 399usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^filesystem not setup$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 410usize , placeholders : & ["$sourceNode->getName()"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Could not copy directory (.*), target exists$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 431usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 435usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 443usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 451usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\InvalidPath") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 456usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 459usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 461usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\Forbidden") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 463usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\FileLocked") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 477usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 483usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\InvalidPath") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 488usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 490usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\Forbidden") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Directory.php" , line : 492usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\FileLocked") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Auth.php" , line : 123usize , placeholders : & [] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\PasswordLoginForbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Auth.php" , line : 126usize , placeholders : & [] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\TooManyRequests") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Connector/Sabre/Auth.php" , line : 144usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Auth.php" , line : 145usize , placeholders : & ["$class" , "$msg"] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^(.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Auth.php" , line : 200usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotAuthenticated") , regex : "^CSRF check not passed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Auth.php" , line : 208usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotAuthenticated") , regex : "^2FA challenge not passed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Auth.php" , line : 228usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotAuthenticated") , regex : "^Cannot authenticate over ajax calls$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/BlockLegacyClientPlugin.php" , line : 72usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Unsupported client version\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/MtimeSanitizer.php" , line : 32usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^X\\-OC\\-MTime header must be an integer \\(unix timestamp\\)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/MtimeSanitizer.php" , line : 37usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^X\\-OC\\-MTime header must be a valid positive integer$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/ObjectTree.php" , line : 111usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^filesystem not setup$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/ObjectTree.php" , line : 124usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\InvalidPath") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/ObjectTree.php" , line : 158usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/ObjectTree.php" , line : 161usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^Storage is temporarily not available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/ObjectTree.php" , line : 163usize , placeholders : & ["$path"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Storage (.*) is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/ObjectTree.php" , line : 165usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Locked") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/ObjectTree.php" , line : 167usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/ObjectTree.php" , line : 172usize , placeholders : & ["$path"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^File with name (.*) could not be located$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/ObjectTree.php" , line : 205usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^filesystem not setup$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/ObjectTree.php" , line : 216usize , placeholders : & [] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\Forbidden") , regex : "^No permissions to copy object\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/ObjectTree.php" , line : 226usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\InvalidPath") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/ObjectTree.php" , line : 232usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/ObjectTree.php" , line : 234usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\Forbidden") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/ObjectTree.php" , line : 236usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\FileLocked") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Principal.php" , line : 237usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Principal not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/Principal.php" , line : 601usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Principal not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Connector/Sabre/PublicAuth.php" , line : 113usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/PublicAuth.php" , line : 114usize , placeholders : & ["$class" , "$msg"] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^(.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/PublicAuth.php" , line : 129usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/PublicAuth.php" , line : 149usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/PublicAuth.php" , line : 164usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotAuthenticated") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/PublicAuth.php" , line : 219usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotAuthenticated") , regex : "^Cannot authenticate over ajax calls$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/FilesReportPlugin.php" , line : 217usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Missing filter\\-rule block in request$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Connector/Sabre/FilesReportPlugin.php" , line : 229usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\PreconditionFailed") , regex : "^Cannot filter by non\\-existing tag$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Controller/DirectController.php" , line : 110usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Controller/DirectController.php" , line : 114usize , placeholders : & ["(60 * 60 * 24)"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^Expiration time should be greater than 0 and less than or equal to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Controller/DirectController.php" , line : 118usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^Direct download only works for files$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Controller/DirectController.php" , line : 125usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^Permission denied to download file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Files/Sharing/FilesDropPlugin.php" , line : 75usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^Only PUT is allowed on files drop$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Files/Sharing/PublicLinkCheckPlugin.php" , line : 62usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Files/FileSearchBackend.php" , line : 160usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Using uri's as scope is not supported, please use a path relative to the search arbiter instead$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Files/FileSearchBackend.php" , line : 166usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Search is only supported on directories$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Files/FileSearchBackend.php" , line : 182usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^You need to specify a scope for the search\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Files/FileSearchBackend.php" , line : 359usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid search value for '\\{http://owncloud\\.org/ns\\}owner\\-id', only the current user id is allowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Files/FileSearchBackend.php" , line : 365usize , placeholders : & ["self::OPERATOR_LIMIT" , "$operatorCount"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid search query, maximum operator limit of (.*) exceeded, got (.*) operators$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Files/FileSearchBackend.php" , line : 425usize , placeholders : & ["$trimmedType"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid number of arguments for (.*) operation$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Files/FileSearchBackend.php" , line : 428usize , placeholders : & ["$trimmedType"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid argument 2 for (.*) operation, expected literal$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Files/FileSearchBackend.php" , line : 434usize , placeholders : & ["$trimmedType"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid argument 1 for (.*) operation, expected property$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Files/FileSearchBackend.php" , line : 455usize , placeholders : & ["$trimmedType" , "$operator->type"] , exception : Some ("InvalidArgumentException") , regex : "^Unsupported operation (.*) \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Files/FileSearchBackend.php" , line : 480usize , placeholders : & ["$property->name"] , exception : Some ("InvalidArgumentException") , regex : "^Unsupported property for search or order: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Files/FileSearchBackend.php" , line : 539usize , placeholders : & ["$propertyName"] , exception : Some ("InvalidArgumentException") , regex : "^searching by '(.*)' is only allowed with a literal value$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Files/FileSearchBackend.php" , line : 542usize , placeholders : & ["$propertyName"] , exception : Some ("InvalidArgumentException") , regex : "^searching by '(.*)' is not allowed inside a '\\{DAV:\\}or' or '\\{DAV:\\}not'$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Files/FileSearchBackend.php" , line : 545usize , placeholders : & ["$propertyName" , "$comparison"] , exception : Some ("InvalidArgumentException") , regex : "^searching by '(.*)' is only allowed inside a '(.*)'$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Files/RootCollection.php" , line : 56usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Home does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Files/FilesHome.php" , line : 52usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to delete home folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Files/FilesHome.php" , line : 61usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename this folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/DAV/SystemPrincipalBackend.php" , line : 151usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Principal not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/DAV/SystemPrincipalBackend.php" , line : 169usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Principal not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/DAV/SystemPrincipalBackend.php" , line : 187usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Setting members of the group is not supported yet$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/DAV/CustomPropertiesBackend.php" , line : 336usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Href is empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/DAV/CustomPropertiesBackend.php" , line : 342usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^No such calendar$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/DAV/CustomPropertiesBackend.php" , line : 542usize , placeholders : & ["$name" , "$e->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Property \"(.*)\" has an invalid value: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/DAV/GroupPrincipalBackend.php" , line : 172usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Setting members of the group is not supported yet$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/DAV/ViewOnlyPlugin.php" , line : 88usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Version file not accessible by current user$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/DAV/ViewOnlyPlugin.php" , line : 112usize , placeholders : & [] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\Forbidden") , regex : "^Access to this shared resource has been denied because its download permission is disabled\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/HookManager.php" , line : 180usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/HookManager.php" , line : 189usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/BulkUpload/MultipartRequestParser.php" , line : 54usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Body should be of type resource$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/BulkUpload/MultipartRequestParser.php" , line : 58usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Content\\-Type can not be null$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/BulkUpload/MultipartRequestParser.php" , line : 79usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Error while parsing boundary in Content\\-Type header\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/BulkUpload/MultipartRequestParser.php" , line : 90usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Content\\-Type must be multipart/related$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/BulkUpload/MultipartRequestParser.php" , line : 94usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Boundary is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/BulkUpload/MultipartRequestParser.php" , line : 110usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^An error occurred while checking content$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/BulkUpload/MultipartRequestParser.php" , line : 115usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Unknown error while seeking content$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/BulkUpload/MultipartRequestParser.php" , line : 165usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Boundary not found where it should be\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/BulkUpload/MultipartRequestParser.php" , line : 183usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^An error occurred while reading headers of a part$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/BulkUpload/MultipartRequestParser.php" , line : 187usize , placeholders : & ["json_encode($line)"] , exception : None , regex : "^Header missing \":\" on bulk request: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/BulkUpload/MultipartRequestParser.php" , line : 188usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^An error occurred while reading headers of a part$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/BulkUpload/MultipartRequestParser.php" , line : 195usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^An error occurred while parsing headers of a part$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/BulkUpload/MultipartRequestParser.php" , line : 200usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\LengthRequired") , regex : "^The Content\\-Length header must not be null\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/BulkUpload/MultipartRequestParser.php" , line : 204usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The X\\-File\\-MD5 header must not be null\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/BulkUpload/MultipartRequestParser.php" , line : 220usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Computed md5 hash is incorrect\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/BulkUpload/MultipartRequestParser.php" , line : 230usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Fail to read part's content\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/BulkUpload/MultipartRequestParser.php" , line : 234usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Unexpected EOF while reading stream\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/BulkUpload/BulkUploadPlugin.php" , line : 76usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/BulkUpload/BulkUploadPlugin.php" , line : 103usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Provisioning/Apple/AppleProvisioningNode.php" , line : 53usize , placeholders : & ["self::FILENAME"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Renaming (.*) is forbidden$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Provisioning/Apple/AppleProvisioningNode.php" , line : 67usize , placeholders : & ["self::FILENAME"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^(.*) may not be deleted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Provisioning/Apple/AppleProvisioningNode.php" , line : 88usize , placeholders : & ["self::FILENAME"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^(.*)'s properties may not be altered\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Direct/DirectHome.php" , line : 78usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Direct/DirectHome.php" , line : 82usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Direct/DirectHome.php" , line : 91usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Direct/DirectHome.php" , line : 100usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Direct/DirectHome.php" , line : 105usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^Listing members of this collection is disabled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Direct/DirectHome.php" , line : 113usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Direct/DirectHome.php" , line : 121usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Direct/DirectFile.php" , line : 57usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Direct/DirectFile.php" , line : 91usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Direct/DirectFile.php" , line : 99usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Direct/DirectFile.php" , line : 114usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Direct/DirectFile.php" , line : 117usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^direct download not allowed on directories$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/dav/lib/Settings/AvailabilitySettings.php" , line : 75usize , placeholders : & ["$this->userId" , "$e->getMessage()"] , exception : None , regex : "^Could not find absence data for user (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagPlugin.php" , line : 182usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\UnsupportedMediaType") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagPlugin.php" , line : 186usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Missing \"name\" attribute$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagPlugin.php" , line : 211usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Not sufficient permissions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagPlugin.php" , line : 222usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Conflict") , regex : "^Tag already exists$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagPlugin.php" , line : 278usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagPlugin.php" , line : 426usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagPlugin.php" , line : 436usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsObjectMappingCollection.php" , line : 62usize , placeholders : & ["$tagId"] , exception : Some ("Sabre\\DAV\\Exception\\PreconditionFailed") , regex : "^Tag with id (.*) does not exist, cannot assign$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsObjectMappingCollection.php" , line : 65usize , placeholders : & ["$tagId"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^No permission to assign tag (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsObjectMappingCollection.php" , line : 69usize , placeholders : & ["$this->objectId"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^No permission to assign tag to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsObjectMappingCollection.php" , line : 73usize , placeholders : & ["$tagId"] , exception : Some ("Sabre\\DAV\\Exception\\PreconditionFailed") , regex : "^Tag with id (.*) does not exist, cannot assign$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsObjectMappingCollection.php" , line : 81usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to create collections$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsObjectMappingCollection.php" , line : 96usize , placeholders : & ["$tagName" , "$this->objectId"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Tag with id (.*) not present for object (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsObjectMappingCollection.php" , line : 98usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Invalid tag id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsObjectMappingCollection.php" , line : 100usize , placeholders : & ["$tagName"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Tag with id (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsObjectMappingCollection.php" , line : 140usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Invalid tag id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsObjectMappingCollection.php" , line : 150usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to delete this collection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsObjectMappingCollection.php" , line : 161usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename this collection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsByIdCollection.php" , line : 93usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Cannot create tags by id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsByIdCollection.php" , line : 102usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to create collections$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsByIdCollection.php" , line : 115usize , placeholders : & ["$name"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Tag with id (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsByIdCollection.php" , line : 119usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Invalid tag id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsByIdCollection.php" , line : 121usize , placeholders : & ["$name"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Tag with id (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsByIdCollection.php" , line : 154usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Invalid tag id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsByIdCollection.php" , line : 164usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to delete this collection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsByIdCollection.php" , line : 180usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename this collection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsObjectTypeCollection.php" , line : 61usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to create nodes$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsObjectTypeCollection.php" , line : 72usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to create collections$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsObjectTypeCollection.php" , line : 84usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Entity does not exist or is not available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsObjectTypeCollection.php" , line : 101usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsObjectTypeCollection.php" , line : 118usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to delete this collection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsObjectTypeCollection.php" , line : 133usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename this collection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagNode.php" , line : 113usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagNode.php" , line : 130usize , placeholders : & ["$this->tag->getId()"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Tag with id (.*) does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagNode.php" , line : 133usize , placeholders : & ["$this->tag->getId()"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^No permission to update tag (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagNode.php" , line : 142usize , placeholders : & ["$this->tag->getId()"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^No permission to update permissions for tag (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagNode.php" , line : 148usize , placeholders : & ["$this->tag->getId()"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Tag with id (.*) does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagNode.php" , line : 150usize , placeholders : & ["$name" , "$userVisible" , "$userAssignable"] , exception : Some ("Sabre\\DAV\\Exception\\Conflict") , regex : "^Tag with the properties \"(.*)\", (.*), (.*) already exists$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagNode.php" , line : 172usize , placeholders : & ["$this->tag->getId()"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^No permission to delete tag (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagNode.php" , line : 176usize , placeholders : & ["$this->tag->getId()"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Tag with id (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagNode.php" , line : 182usize , placeholders : & ["$this->tag->getId()"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Tag with id (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsRelationsCollection.php" , line : 106usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename this collection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagMappingNode.php" , line : 97usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagMappingNode.php" , line : 117usize , placeholders : & ["$this->tag->getId()"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Tag with id (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagMappingNode.php" , line : 120usize , placeholders : & ["$this->tag->getId()"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^No permission to unassign tag (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagMappingNode.php" , line : 124usize , placeholders : & ["$this->objectId"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^No permission to unassign tag to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagMappingNode.php" , line : 129usize , placeholders : & ["$this->tag->getId()"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Tag with id (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsInUseCollection.php" , line : 67usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename this collection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsInUseCollection.php" , line : 72usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Invalid media type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/SystemTag/SystemTagsInUseCollection.php" , line : 93usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to read this collection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Avatars/AvatarHome.php" , line : 53usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to create a file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Avatars/AvatarHome.php" , line : 57usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to create a folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Avatars/AvatarHome.php" , line : 65usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^File format not allowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Avatars/AvatarHome.php" , line : 68usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^Invalid image size$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Avatars/AvatarHome.php" , line : 72usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Avatars/AvatarHome.php" , line : 99usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to delete this folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/lib/Avatars/AvatarHome.php" , line : 108usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename this folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/appinfo/v2/publicremote.php" , line : 103usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotAuthenticated") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/appinfo/v2/publicremote.php" , line : 135usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/appinfo/v1/publicwebdav.php" , line : 81usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotAuthenticated") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/dav/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_downloadlimit/lib/Controller/ApiController.php" , line : 65usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^Limit needs to be greater or equal than 1$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_downloadlimit/lib/Controller/ApiController.php" , line : 137usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^Unknown share$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_downloadlimit/lib/Controller/ApiController.php" , line : 142usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^Unknown share$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_downloadlimit/lib/Controller/ApiController.php" , line : 148usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^Invalid share type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_downloadlimit/lib/Controller/ApiController.php" , line : 153usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^Invalid file type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/files_downloadlimit/lib/Controller/AdminController.php" , line : 46usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^Minimum limit is 1$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/admin_audit/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/admin_audit/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/admin_audit/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/admin_audit/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/admin_audit/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/admin_audit/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/admin_audit/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Emergency , path : "/apps/admin_audit/lib/AuditLogger.php" , line : 53usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Alert , path : "/apps/admin_audit/lib/AuditLogger.php" , line : 57usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/apps/admin_audit/lib/AuditLogger.php" , line : 61usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/admin_audit/lib/AuditLogger.php" , line : 65usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/admin_audit/lib/AuditLogger.php" , line : 69usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/apps/admin_audit/lib/AuditLogger.php" , line : 73usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/admin_audit/lib/AuditLogger.php" , line : 77usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/admin_audit/lib/AuditLogger.php" , line : 81usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/AuditLogger.php" , line : 85usize , placeholders : & ["$level"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Listener/CriticalActionPerformedEventListener.php" , line : 40usize , placeholders : & ["$event->getLogMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/apps/admin_audit/lib/Actions/Action.php" , line : 55usize , placeholders : & ["$element"] , exception : None , regex : "^\\$params\\[\"(.*)\"\\] was missing\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/apps/admin_audit/lib/Actions/Action.php" , line : 60usize , placeholders : & ["sprintf(\n\t\t\t\t\t\t\t'$params[\"'.$element.'\"] was missing. Transferred value: %s',\n\t\t\t\t\t\t\tprint_r($params, true)\n\t\t\t\t\t\t)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/admin_audit/lib/Actions/Action.php" , line : 80usize , placeholders : & ["vsprintf(\n\t\t\t\t$text,\n\t\t\t\t$replaceArray\n\t\t\t)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Console.php" , line : 43usize , placeholders : & [] , exception : None , regex : "^Console command executed: %s$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Versions.php" , line : 32usize , placeholders : & [] , exception : None , regex : "^Version \"%s\" of \"%s\" was restored\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Versions.php" , line : 42usize , placeholders : & [] , exception : None , regex : "^Version \"%s\" was deleted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Files.php" , line : 42usize , placeholders : & [] , exception : None , regex : "^File accessed: \"%s\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Files.php" , line : 57usize , placeholders : & [] , exception : None , regex : "^File renamed: \"%s\" to \"%s\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Files.php" , line : 77usize , placeholders : & [] , exception : None , regex : "^File created: \"%s\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Files.php" , line : 92usize , placeholders : & [] , exception : None , regex : "^File copied: \"%s\" to \"%s\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Files.php" , line : 112usize , placeholders : & [] , exception : None , regex : "^File written to: \"%s\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Files.php" , line : 127usize , placeholders : & [] , exception : None , regex : "^File updated: \"%s\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Files.php" , line : 142usize , placeholders : & [] , exception : None , regex : "^File deleted: \"%s\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Files.php" , line : 157usize , placeholders : & [] , exception : None , regex : "^Preview accessed: \"%s\" \\(width: \"%s\", height: \"%s\" crop: \"%s\", mode: \"%s\"\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 48usize , placeholders : & [] , exception : None , regex : "^The %s \"%s\" with ID \"%s\" has been shared via link with permissions \"%s\" \\(Share ID: %s\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 60usize , placeholders : & [] , exception : None , regex : "^The %s \"%s\" with ID \"%s\" has been shared to the user \"%s\" with permissions \"%s\"  \\(Share ID: %s\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 73usize , placeholders : & [] , exception : None , regex : "^The %s \"%s\" with ID \"%s\" has been shared to the group \"%s\" with permissions \"%s\"  \\(Share ID: %s\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 86usize , placeholders : & [] , exception : None , regex : "^The %s \"%s\" with ID \"%s\" has been shared to the room \"%s\" with permissions \"%s\" \\(Share ID: %s\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 99usize , placeholders : & [] , exception : None , regex : "^The %s \"%s\" with ID \"%s\" has been shared to the email recipient \"%s\" with permissions \"%s\" \\(Share ID: %s\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 112usize , placeholders : & [] , exception : None , regex : "^The %s \"%s\" with ID \"%s\" has been shared to the circle \"%s\" with permissions \"%s\" \\(Share ID: %s\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 125usize , placeholders : & [] , exception : None , regex : "^The %s \"%s\" with ID \"%s\" has been shared to the remote user \"%s\" with permissions \"%s\" \\(Share ID: %s\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 138usize , placeholders : & [] , exception : None , regex : "^The %s \"%s\" with ID \"%s\" has been shared to the remote group \"%s\" with permissions \"%s\" \\(Share ID: %s\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 151usize , placeholders : & [] , exception : None , regex : "^The %s \"%s\" with ID \"%s\" has been shared to the deck card \"%s\" with permissions \"%s\" \\(Share ID: %s\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 164usize , placeholders : & [] , exception : None , regex : "^The %s \"%s\" with ID \"%s\" has been shared to the ScienceMesh user \"%s\" with permissions \"%s\" \\(Share ID: %s\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 186usize , placeholders : & [] , exception : None , regex : "^The %s \"%s\" with ID \"%s\" has been unshared \\(Share ID: %s\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 197usize , placeholders : & [] , exception : None , regex : "^The %s \"%s\" with ID \"%s\" has been unshared from the user \"%s\" \\(Share ID: %s\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 209usize , placeholders : & [] , exception : None , regex : "^The %s \"%s\" with ID \"%s\" has been unshared from the group \"%s\" \\(Share ID: %s\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 221usize , placeholders : & [] , exception : None , regex : "^The %s \"%s\" with ID \"%s\" has been unshared from the room \"%s\" \\(Share ID: %s\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 233usize , placeholders : & [] , exception : None , regex : "^The %s \"%s\" with ID \"%s\" has been unshared from the email recipient \"%s\" \\(Share ID: %s\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 245usize , placeholders : & [] , exception : None , regex : "^The %s \"%s\" with ID \"%s\" has been unshared from the circle \"%s\" \\(Share ID: %s\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 257usize , placeholders : & [] , exception : None , regex : "^The %s \"%s\" with ID \"%s\" has been unshared from the remote user \"%s\" \\(Share ID: %s\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 269usize , placeholders : & [] , exception : None , regex : "^The %s \"%s\" with ID \"%s\" has been unshared from the remote group \"%s\" \\(Share ID: %s\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 281usize , placeholders : & [] , exception : None , regex : "^The %s \"%s\" with ID \"%s\" has been unshared from the deck card \"%s\" \\(Share ID: %s\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 293usize , placeholders : & [] , exception : None , regex : "^The %s \"%s\" with ID \"%s\" has been unshared from the ScienceMesh user \"%s\" \\(Share ID: %s\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 313usize , placeholders : & [] , exception : None , regex : "^The permissions of the shared %s \"%s\" with ID \"%s\" have been changed to \"%s\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 331usize , placeholders : & [] , exception : None , regex : "^The password of the publicly shared %s \"%s\" with ID \"%s\" has been changed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 349usize , placeholders : & [] , exception : None , regex : "^The expiration date of the publicly shared %s with ID \"%s\" has been removed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 358usize , placeholders : & [] , exception : None , regex : "^The expiration date of the publicly shared %s with ID \"%s\" has been changed to \"%s\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Sharing.php" , line : 376usize , placeholders : & [] , exception : None , regex : "^The shared %s with the token \"%s\" by \"%s\" has been accessed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Trashbin.php" , line : 32usize , placeholders : & [] , exception : None , regex : "^File \"%s\" deleted from trash bin\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Trashbin.php" , line : 38usize , placeholders : & [] , exception : None , regex : "^File \"%s\" restored from trash bin\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/GroupManagement.php" , line : 49usize , placeholders : & [] , exception : None , regex : "^User \"%s\" added to group \"%s\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/GroupManagement.php" , line : 67usize , placeholders : & [] , exception : None , regex : "^User \"%s\" removed from group \"%s\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/GroupManagement.php" , line : 84usize , placeholders : & [] , exception : None , regex : "^Group created: \"%s\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/GroupManagement.php" , line : 100usize , placeholders : & [] , exception : None , regex : "^Group deleted: \"%s\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/AppManagement.php" , line : 35usize , placeholders : & [] , exception : None , regex : "^App \"%s\" enabled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/AppManagement.php" , line : 46usize , placeholders : & [] , exception : None , regex : "^App \"%1\\$s\" enabled for groups: %2\\$s$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/AppManagement.php" , line : 56usize , placeholders : & [] , exception : None , regex : "^App \"%s\" disabled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Security.php" , line : 48usize , placeholders : & [] , exception : None , regex : "^Failed two factor attempt by user %s \\(%s\\) with provider %s$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Security.php" , line : 69usize , placeholders : & [] , exception : None , regex : "^Successful two factor attempt by user %s \\(%s\\) with provider %s$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/UserManagement.php" , line : 48usize , placeholders : & [] , exception : None , regex : "^User created: \"%s\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/UserManagement.php" , line : 63usize , placeholders : & [] , exception : None , regex : "^UserID assigned: \"%s\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/UserManagement.php" , line : 76usize , placeholders : & [] , exception : None , regex : "^User deleted: \"%s\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/UserManagement.php" , line : 91usize , placeholders : & [] , exception : None , regex : "^UserID unassigned: \"%s\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/UserManagement.php" , line : 106usize , placeholders : & ["$params['value'] === true\n\t\t\t\t\t\t? 'User enabled: \"%s\"'\n\t\t\t\t\t\t: 'User disabled: \"%s\"'"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/UserManagement.php" , line : 117usize , placeholders : & [] , exception : None , regex : "^Email address changed for user %s$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/UserManagement.php" , line : 135usize , placeholders : & [] , exception : None , regex : "^Password of user \"%s\" has been changed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Auth.php" , line : 37usize , placeholders : & [] , exception : None , regex : "^Login attempt: \"%s\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Auth.php" , line : 48usize , placeholders : & [] , exception : None , regex : "^Login successful: \"%s\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/admin_audit/lib/Actions/Auth.php" , line : 59usize , placeholders : & [] , exception : None , regex : "^Logout occurred$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/bruteforcesettings/vendor/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/bruteforcesettings/vendor/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/bruteforcesettings/vendor/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/bruteforcesettings/vendor/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/bruteforcesettings/vendor/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/bruteforcesettings/vendor/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/bruteforcesettings/vendor/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/lookup_server_connector/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/lookup_server_connector/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/lookup_server_connector/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/lookup_server_connector/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/lookup_server_connector/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/lookup_server_connector/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/lookup_server_connector/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/ajax/clearMappings.php" , line : 54usize , placeholders : & ["$l->t('Failed to clear the mappings.')"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 107usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Requirements not met$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 119usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Internal error: Invalid object type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 254usize , placeholders : & ["self::$l->t('Could not detect user display name attribute. Please specify it yourself in advanced LDAP settings.')"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/user_ldap/lib/Wizard.php" , line : 297usize , placeholders : & [] , exception : None , regex : "^The mail attribute has automatically been reset, because the original value did not return any results\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 324usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Failed to determine user attributes$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 355usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not connect to LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 412usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not connect to LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 421usize , placeholders : & [] , exception : Some ("Exception") , regex : "^memberOf is not supported by the server$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 469usize , placeholders : & ["self::$l->t('Could not find the desired feature')"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 516usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not connect to LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 544usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not connect to LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 606usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Cannot create filter$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 628usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Cannot create filter$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 650usize , placeholders : & [] , exception : Some ("Exception") , regex : "^connection error$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 656usize , placeholders : & [] , exception : Some ("Exception") , regex : "^missing placeholder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/Wizard.php" , line : 661usize , placeholders : & ["$cr"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 661usize , placeholders : & ["$this->ldap->error($cr)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Wizard.php" , line : 686usize , placeholders : & ["$p" , "$t"] , exception : None , regex : "^Wiz: trying port (.*), TLS (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Wizard.php" , line : 712usize , placeholders : & ["$p"] , exception : None , regex : "^Wiz: detected Port (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 815usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not connect to LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 854usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not connect to LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/Wizard.php" , line : 862usize , placeholders : & ["$cr"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/user_ldap/lib/Wizard.php" , line : 863usize , placeholders : & ["$base" , "$errorNo" , "$errorMsg"] , exception : None , regex : "^Wiz: Could not search base (.*) Error (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 886usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not connect to LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 924usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not connect to LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 993usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Failed to get user attributes$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Wizard.php" , line : 1046usize , placeholders : & ["$filter"] , exception : None , regex : "^Wiz: Final filter (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 1066usize , placeholders : & ["self::$l->t('Invalid Host')"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Wizard.php" , line : 1068usize , placeholders : & [] , exception : None , regex : "^Wiz: Attempting to connect$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 1074usize , placeholders : & ["self::$l->t('Invalid Host')"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Wizard.php" , line : 1091usize , placeholders : & [] , exception : None , regex : "^Wiz: Attempting to Bind$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/Wizard.php" , line : 1101usize , placeholders : & ["$cr"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Wizard.php" , line : 1108usize , placeholders : & ["$port" , "(int)$tls"] , exception : None , regex : "^Wiz: Bind successful to Port (.*) TLS (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 1119usize , placeholders : & ["$error"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 1241usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not connect to LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Wizard.php" , line : 1263usize , placeholders : & ["self::$l->t('Could not find the desired feature')"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/Migration/Version1120Date20210917155206.php" , line : 112usize , placeholders : & ["{oldId}" , "{newId}" , "{uuid}" , "{table}"] , exception : None , regex : "^Failed to shorten owncloud_name \"(.*)\" to \"(.*)\" \\(UUID: \"(.*)\" of (.*)Failed to shorten owncloud_name \"\\{oldId\\}\" to \"\\{newId\\}\" \\(UUID: \"\\{uuid\\}\" of \\{table\\}\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/Migration/Version1130Date20211102154716.php" , line : 167usize , placeholders : & ["{dnHash}" , "{name}" , "{table}"] , exception : None , regex : "^Failed to add hash \"(.*)\" \\(\"(.*)\" of (.*)Failed to add hash \"\\{dnHash\\}\" \\(\"\\{name\\}\" of \\{table\\}\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/user_ldap/lib/Migration/Version1130Date20211102154716.php" , line : 230usize , placeholders : & ["{nid}"] , exception : None , regex : "^LDAP user or group with ID (.*)LDAP user or group with ID \\{nid\\} has a duplicated UUID value which therefore was invalidated\\. You may double\\-check your LDAP configuration and trigger an update of the UUID\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Helper.php" , line : 238usize , placeholders : & ["\\gettype($dn)"] , exception : Some ("LogicException") , regex : "^String expected (.*) given$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Helper.php" , line : 293usize , placeholders : & [] , exception : Some ("Exception") , regex : "^key uid is expected to be set in \\$param$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Configuration.php" , line : 585usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Invalid rule$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/user_ldap/lib/Configuration.php" , line : 603usize , placeholders : & [] , exception : None , regex : "^Invalid config value to ldapUserAvatarRule; falling back to default\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/PagedResults/TLinkId.php" , line : 42usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^No resource provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/LDAPProvider.php" , line : 60usize , placeholders : & ["get_class($backend)"] , exception : None , regex : "^instance (.*) user backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/LDAPProvider.php" , line : 68usize , placeholders : & ["get_class($backend)"] , exception : None , regex : "^instance (.*) group backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAPProvider.php" , line : 77usize , placeholders : & [] , exception : Some ("Exception") , regex : "^To use the LDAPProvider, user_ldap app must be enabled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAPProvider.php" , line : 89usize , placeholders : & [] , exception : Some ("Exception") , regex : "^User id not found in LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAPProvider.php" , line : 93usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Translation to LDAP DN unsuccessful$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAPProvider.php" , line : 106usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Group id not found in LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAPProvider.php" , line : 110usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Translation to LDAP DN unsuccessful$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAPProvider.php" , line : 125usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Translation to internal user name unsuccessful$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAPProvider.php" , line : 157usize , placeholders : & [] , exception : Some ("Exception") , regex : "^User id not found in LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAPProvider.php" , line : 171usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Group id not found in LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAPProvider.php" , line : 184usize , placeholders : & [] , exception : Some ("Exception") , regex : "^User id not found in LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/user_ldap/lib/LDAPProvider.php" , line : 195usize , placeholders : & ["{dn}" , "{bases}"] , exception : None , regex : "^No matching user base found for user (.*), available: (.*)No matching user base found for user \\{dn\\}, available: \\{bases\\}\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAPProvider.php" , line : 214usize , placeholders : & [] , exception : Some ("Exception") , regex : "^User id not found in LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAPProvider.php" , line : 227usize , placeholders : & [] , exception : Some ("Exception") , regex : "^User id not found in LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAPProvider.php" , line : 240usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Group id not found in LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAPProvider.php" , line : 279usize , placeholders : & [] , exception : Some ("Exception") , regex : "^User id not found in LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAPProvider.php" , line : 292usize , placeholders : & [] , exception : Some ("Exception") , regex : "^User id not found in LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAPProvider.php" , line : 305usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Group id not found in LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAPProvider.php" , line : 330usize , placeholders : & [] , exception : Some ("Exception") , regex : "^User id not found in LDAP$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Access.php" , line : 131usize , placeholders : & [] , exception : Some ("Exception") , regex : "^UserMapper was not assigned to this Access instance\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Access.php" , line : 150usize , placeholders : & [] , exception : Some ("Exception") , regex : "^GroupMapper was not assigned to this Access instance\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/user_ldap/lib/Access.php" , line : 184usize , placeholders : & [] , exception : None , regex : "^No LDAP Connector assigned, access impossible for readAttribute\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Access.php" , line : 193usize , placeholders : & [] , exception : None , regex : "^LDAP resource not available\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Access.php" , line : 239usize , placeholders : & ["$attr" , "$dn"] , exception : None , regex : "^Requested attribute (.*) not found for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Access.php" , line : 257usize , placeholders : & ["$dn"] , exception : None , regex : "^readAttribute failed for DN (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Access.php" , line : 263usize , placeholders : & ["$dn"] , exception : None , regex : "^readAttribute: (.*) found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Access.php" , line : 346usize , placeholders : & [] , exception : Some ("Exception") , regex : "^LDAP password changes are disabled\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Access.php" , line : 351usize , placeholders : & [] , exception : None , regex : "^LDAP resource not available\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Access.php" , line : 359usize , placeholders : & [] , exception : Some ("OCP\\HintException") , regex : "^Password change rejected\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Access.php" , line : 530usize , placeholders : & ["$fdn"] , exception : None , regex : "^Cannot determine UUID for (.*)\\. Skipping\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Access.php" , line : 537usize , placeholders : & ["$fdn" , "$filter"] , exception : None , regex : "^No or empty name for (.*) with filter (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Access.php" , line : 549usize , placeholders : & ["$usernameAttribute" , "$fdn"] , exception : None , regex : "^No or empty username \\((.*)\\) for (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/user_ldap/lib/Access.php" , line : 559usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error sanitizing username: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/user_ldap/lib/Access.php" , line : 594usize , placeholders : & ["{fdn}" , "{altName}" , "{intName}"] , exception : None , regex : "^Mapped (.*) as (.*) because of a name collision on (.*)Mapped \\{fdn\\} as \\{altName\\} because of a name collision on \\{intName\\}\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/user_ldap/lib/Access.php" , line : 609usize , placeholders : & ["$fdn"] , exception : None , regex : "^Could not create unique name for (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Access.php" , line : 920usize , placeholders : & ["$ocName"] , exception : None , regex : "^The ldap user manager returned null for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Access.php" , line : 1060usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invoker does not support controlPagedResultResponse, call LDAP Wrapper directly instead\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Access.php" , line : 1076usize , placeholders : & ["$command"] , exception : None , regex : "^Connection lost on (.*), attempting to reestablish\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Access.php" , line : 1082usize , placeholders : & ["$command"] , exception : None , regex : "^Could not (.*), because resource is missing\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Access.php" , line : 1116usize , placeholders : & [] , exception : None , regex : "^Could not search, because resource is missing\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/Access.php" , line : 1131usize , placeholders : & ["print_r($pagedSearchOK, true)"] , exception : None , regex : "^Attempt for Paging\\?  (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Access.php" , line : 1176usize , placeholders : & [] , exception : None , regex : "^Paged search was not available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Access.php" , line : 1212usize , placeholders : & ["{filter}"] , exception : None , regex : "^Count filter: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Access.php" , line : 1397usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^provided name template for username does not contain any allowed characters$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Access.php" , line : 1409usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^provided name template for username does not contain any allowed characters$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Access.php" , line : 1507usize , placeholders : & [] , exception : Some ("DomainException") , regex : "^searchAttributes must be an array with at least two string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Access.php" , line : 1642usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Cannot determine UUID attribute$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Access.php" , line : 1649usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Cannot determine UUID attribute$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Access.php" , line : 1666usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Cannot determine UUID attribute$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Access.php" , line : 1714usize , placeholders : & ["{attribute}" , "{subject}"] , exception : None , regex : "^Setting (.*) as (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Access.php" , line : 1727usize , placeholders : & [] , exception : None , regex : "^Could not autodetect the UUID attribute$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/user_ldap/lib/Access.php" , line : 1813usize , placeholders : & ["{uuid}"] , exception : None , regex : "^Passed string does not resemble a valid GUID\\. Known UUID \\((.*)\\(\\{uuid\\}\\) probably does not match UUID configuration\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Access.php" , line : 1984usize , placeholders : & ["{filter}" , "{base}" , "{attr}" , "{pageSize}" , "{offset}"] , exception : None , regex : "^initializing paged search for filter (.*), base (.*), attr (.*), pageSize (.*), offset (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Access.php" , line : 2012usize , placeholders : & [] , exception : Some ("OCA\\User_LDAP\\Exceptions\\NoMoreResults") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Access.php" , line : 2019usize , placeholders : & [] , exception : None , regex : "^Ready for a paged search$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/User_LDAP.php" , line : 164usize , placeholders : & ["$this->access->connection->ldapHost" , "$this->access->connection->ldapPort"] , exception : Some ("OCA\\User_LDAP\\Exceptions\\NotOnLDAP") , regex : "^No user available for the given login name on (.*):(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/User_LDAP.php" , line : 181usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/user_ldap/lib/User_LDAP.php" , line : 191usize , placeholders : & ["$dn"] , exception : None , regex : "^LDAP Login: Could not get user object for DN (.*)\\. Maybe the LDAP entry has no set display name attribute\\?$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/User_LDAP.php" , line : 228usize , placeholders : & ["$uid"] , exception : Some ("Exception") , regex : "^LDAP setPassword: Could not get user object for uid (.*)\\. Maybe the LDAP entry has no set display name attribute\\?$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/User_LDAP.php" , line : 278usize , placeholders : & ["$search" , "$limit" , "$offset" , "$filter"] , exception : None , regex : "^getUsers: Options: search (.*) limit (.*) offset (.*) Filter: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/User_LDAP.php" , line : 288usize , placeholders : & ["count($ldap_users)"] , exception : None , regex : "^getUsers: (.*) Users found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/User_LDAP.php" , line : 368usize , placeholders : & ["$uid" , "$this->access->connection->ldapHost"] , exception : None , regex : "^No DN found for (.*) on (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/User_LDAP.php" , line : 403usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/apps/user_ldap/lib/User_LDAP.php" , line : 409usize , placeholders : & ["$uid"] , exception : None , regex : "^User (.*) is not marked as deleted, not cleaning up\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/user_ldap/lib/User_LDAP.php" , line : 416usize , placeholders : & ["$uid"] , exception : None , regex : "^Cleaning up after user (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/User_LDAP.php" , line : 454usize , placeholders : & ["$uid"] , exception : Some ("OC\\User\\NoUserException") , regex : "^(.*) is not a valid user anymore$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/user_ldap/lib/User_LDAP.php" , line : 655usize , placeholders : & ["{userid}"] , exception : None , regex : "^Failed to map created LDAP user with userid (.*)Failed to map created LDAP user with userid \\{userid\\}, because UUID could not be determined$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/User_LDAP.php" , line : 664usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^LDAP Plugin: Method createUser changed to return the user DN instead of boolean\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/User_LDAP.php" , line : 686usize , placeholders : & [] , exception : Some ("Exception") , regex : "^This is implemented directly in User_Proxy$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Notification/Notifier.php" , line : 73usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Notification/Notifier.php" , line : 99usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/user_ldap/lib/Service/UpdateGroupsService.php" , line : 68usize , placeholders : & [] , exception : None , regex : "^service \"updateGroups\" – groups do not seem to be configured properly, aborting\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Service/UpdateGroupsService.php" , line : 78usize , placeholders : & [] , exception : None , regex : "^service \"updateGroups\" – Finished\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Service/UpdateGroupsService.php" , line : 86usize , placeholders : & [] , exception : None , regex : "^service \"updateGroups\" – Dealing with known Groups\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Service/UpdateGroupsService.php" , line : 89usize , placeholders : & ["{group}"] , exception : None , regex : "^service \"updateGroups\" – Dealing with (.*)service \"updateGroups\" – Dealing with \\{group\\}\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/Service/UpdateGroupsService.php" , line : 101usize , placeholders : & ["{group}"] , exception : None , regex : "^service \"updateGroups\" – Failed to get group (.*)service \"updateGroups\" – Failed to get group \\{group\\} for update$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/Service/UpdateGroupsService.php" , line : 115usize , placeholders : & ["__CLASS__" , "{group}" , "{user}"] , exception : None , regex : "^(.*) – group (.*) membership failed to be removed \\(user (.*) – group \\{group\\} membership failed to be removed \\(user \\{user\\}\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/user_ldap/lib/Service/UpdateGroupsService.php" , line : 132usize , placeholders : & ["{user}" , "{group}"] , exception : None , regex : "^service \"updateGroups\" – (.*) removed from (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/Service/UpdateGroupsService.php" , line : 146usize , placeholders : & ["__CLASS__" , "{group}" , "{user}"] , exception : None , regex : "^(.*) – group (.*) membership failed to be added \\(user (.*) – group \\{group\\} membership failed to be added \\(user \\{user\\}\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/user_ldap/lib/Service/UpdateGroupsService.php" , line : 163usize , placeholders : & ["{user}" , "{group}"] , exception : None , regex : "^service \"updateGroups\" – (.*) added to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Service/UpdateGroupsService.php" , line : 172usize , placeholders : & [] , exception : None , regex : "^service \"updateGroups\" – FINISHED dealing with known Groups\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Service/UpdateGroupsService.php" , line : 180usize , placeholders : & [] , exception : None , regex : "^service \"updateGroups\" – dealing with created Groups\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/user_ldap/lib/Service/UpdateGroupsService.php" , line : 183usize , placeholders : & ["$createdGroup"] , exception : None , regex : "^service \"updateGroups\" – new group \"(.*)\" found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/Service/UpdateGroupsService.php" , line : 192usize , placeholders : & ["__CLASS__" , "{group}" , "{user}"] , exception : None , regex : "^(.*) – group (.*) membership failed to be added \\(user (.*) – group \\{group\\} membership failed to be added \\(user \\{user\\}\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Service/UpdateGroupsService.php" , line : 213usize , placeholders : & [] , exception : None , regex : "^service \"updateGroups\" – FINISHED dealing with created Groups\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Service/UpdateGroupsService.php" , line : 221usize , placeholders : & [] , exception : None , regex : "^service \"updateGroups\" – dealing with removed groups\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/user_ldap/lib/Service/UpdateGroupsService.php" , line : 237usize , placeholders : & ["{removedGroups}"] , exception : None , regex : "^service \"updateGroups\" – groups (.*)service \"updateGroups\" – groups \\{removedGroups\\} were removed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/Controller/ConfigAPIController.php" , line : 80usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Controller/ConfigAPIController.php" , line : 81usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^An issue occurred when creating the new config\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Controller/ConfigAPIController.php" , line : 101usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^Could not delete configuration$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/Controller/ConfigAPIController.php" , line : 106usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Controller/ConfigAPIController.php" , line : 107usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^An issue occurred when deleting the config\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Controller/ConfigAPIController.php" , line : 131usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSBadRequestException") , regex : "^configData is not properly set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/Controller/ConfigAPIController.php" , line : 148usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Controller/ConfigAPIController.php" , line : 149usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^An issue occurred when modifying the config\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/Controller/ConfigAPIController.php" , line : 248usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Controller/ConfigAPIController.php" , line : 249usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^An issue occurred when modifying the config\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Controller/ConfigAPIController.php" , line : 265usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^Config ID not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Group_Proxy.php" , line : 276usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Should not have been called$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/Connection.php" , line : 254usize , placeholders : & ["$this->configuration->ldapHost"] , exception : None , regex : "^No LDAP Connection to server (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Connection.php" , line : 258usize , placeholders : & [] , exception : Some ("OC\\ServerNotAvailableException") , regex : "^Connection to LDAP server could not be established$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/user_ldap/lib/Connection.php" , line : 431usize , placeholders : & ["$effectiveSetting"] , exception : None , regex : "^Illegal value for the (.*), reset to autodetect\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/user_ldap/lib/Connection.php" , line : 457usize , placeholders : & [] , exception : None , regex : "^LDAPS \\(already using secure connection\\) and TLS do not work together\\. Switched off TLS\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/user_ldap/lib/Connection.php" , line : 505usize , placeholders : & ["$errorStr" , "$subj"] , exception : None , regex : "^(.*)No (.*) given!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/user_ldap/lib/Connection.php" , line : 519usize , placeholders : & ["$errorStr"] , exception : None , regex : "^(.*)either no password is given for the user agent or a password is given, but not an LDAP agent\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/user_ldap/lib/Connection.php" , line : 532usize , placeholders : & ["$errorStr"] , exception : None , regex : "^(.*)Not a single Base DN given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/user_ldap/lib/Connection.php" , line : 541usize , placeholders : & ["$errorStr"] , exception : None , regex : "^(.*)login filter does not contain %uid place holder\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/user_ldap/lib/Connection.php" , line : 587usize , placeholders : & [] , exception : None , regex : "^Configuration is invalid, cannot connect$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/Connection.php" , line : 596usize , placeholders : & [] , exception : None , regex : "^function ldap_connect is not available\\. Make sure that the PHP ldap module is installed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Connection.php" , line : 605usize , placeholders : & [] , exception : None , regex : "^Turned off SSL certificate validation successfully\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/user_ldap/lib/Connection.php" , line : 610usize , placeholders : & [] , exception : None , regex : "^Could not turn off SSL certificate validation\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/user_ldap/lib/Connection.php" , line : 638usize , placeholders : & [] , exception : None , regex : "^Main LDAP not reachable, connecting to backup$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Connection.php" , line : 677usize , placeholders : & [] , exception : Some ("OC\\ServerNotAvailableException") , regex : "^Could not set required LDAP Protocol version\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Connection.php" , line : 681usize , placeholders : & [] , exception : Some ("OC\\ServerNotAvailableException") , regex : "^Could not disable LDAP referrals\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Connection.php" , line : 685usize , placeholders : & [] , exception : Some ("OC\\ServerNotAvailableException") , regex : "^Could not set network timeout$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Connection.php" , line : 690usize , placeholders : & ["$host"] , exception : Some ("OC\\ServerNotAvailableException") , regex : "^Start TLS failed, when connecting to LDAP host (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/user_ldap/lib/Connection.php" , line : 731usize , placeholders : & ["$errno" , "$this->ldap->error($cr)"] , exception : None , regex : "^Bind failed: (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/Connection.php" , line : 732usize , placeholders : & ["$cr"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/user_ldap/lib/LoginListener.php" , line : 61usize , placeholders : & ["__CLASS__" , "{user}"] , exception : None , regex : "^(.*) – (.*) – \\{user\\} postLogin$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/LoginListener.php" , line : 86usize , placeholders : & ["__CLASS__" , "{group}" , "{user}"] , exception : None , regex : "^(.*) – group (.*) could not be found \\(user (.*) – group \\{group\\} could not be found \\(user \\{user\\}\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/LoginListener.php" , line : 100usize , placeholders : & ["__CLASS__" , "{group}" , "{user}"] , exception : None , regex : "^(.*) – group (.*) membership failed to be added \\(user (.*) – group \\{group\\} membership failed to be added \\(user \\{user\\}\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/user_ldap/lib/LoginListener.php" , line : 115usize , placeholders : & ["__CLASS__" , "{user}" , "{group}"] , exception : None , regex : "^(.*) – (.*) added to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/LoginListener.php" , line : 129usize , placeholders : & ["__CLASS__" , "{group}" , "{user}"] , exception : None , regex : "^(.*) – group (.*) membership failed to be removed \\(user (.*) – group \\{group\\} membership failed to be removed \\(user \\{user\\}\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/LoginListener.php" , line : 144usize , placeholders : & ["__CLASS__" , "{group}" , "{user}"] , exception : None , regex : "^(.*) – group (.*) could not be found \\(user (.*) – group \\{group\\} could not be found \\(user \\{user\\}\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/user_ldap/lib/LoginListener.php" , line : 155usize , placeholders : & ["{user}" , "{group}"] , exception : None , regex : "^service \"updateGroups\" – (.*) removed from (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/GroupPluginManager.php" , line : 62usize , placeholders : & ["$action" , "get_class($plugin)"] , exception : None , regex : "^Registered action (.*) to plugin (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/GroupPluginManager.php" , line : 88usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No plugin implements createGroup in this LDAP Backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/GroupPluginManager.php" , line : 118usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No plugin implements deleteGroup in this LDAP Backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/GroupPluginManager.php" , line : 136usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No plugin implements addToGroup in this LDAP Backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/GroupPluginManager.php" , line : 154usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No plugin implements removeFromGroup in this LDAP Backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/GroupPluginManager.php" , line : 170usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No plugin implements countUsersInGroup in this LDAP Backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/GroupPluginManager.php" , line : 185usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No plugin implements getGroupDetails in this LDAP Backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Command/CheckGroup.php" , line : 121usize , placeholders : & [] , exception : Some ("Exception") , regex : "^The given group is not a recognized LDAP group\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Command/CheckGroup.php" , line : 163usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Cannot check group existence, because disabled LDAP configurations are present\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/user_ldap/lib/Command/UpdateUUID.php" , line : 323usize , placeholders : & ["{id}" , "{from}" , "{to}"] , exception : None , regex : "^UUID of (.*) was updated from (.*) to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Command/ResetUser.php" , line : 69usize , placeholders : & [] , exception : Some ("Exception") , regex : "^User not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Command/ResetUser.php" , line : 73usize , placeholders : & [] , exception : Some ("Exception") , regex : "^The given user is not a recognized LDAP user\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Command/ResetUser.php" , line : 82usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Reset cancelled by operator$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Command/ResetGroup.php" , line : 69usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Group not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Command/ResetGroup.php" , line : 73usize , placeholders : & [] , exception : Some ("Exception") , regex : "^The given group is not a recognized LDAP group\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Command/ResetGroup.php" , line : 82usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Reset cancelled by operator$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Command/Search.php" , line : 89usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^limit must be  0 or greater$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Command/Search.php" , line : 92usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^offset must be 0 or greater$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Command/Search.php" , line : 95usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^offset must be 0 if limit is also set to 0$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Command/Search.php" , line : 98usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^offset must be a multiple of limit$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Command/CheckUser.php" , line : 104usize , placeholders : & [] , exception : Some ("Exception") , regex : "^The given user is not a recognized LDAP user\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Command/CheckUser.php" , line : 126usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Cannot check user existence, because disabled LDAP configurations are present\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/LDAP.php" , line : 329usize , placeholders : & ["{func}" , "{args}"] , exception : None , regex : "^Calling LDAP function (.*) with parameters (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/LDAP.php" , line : 369usize , placeholders : & ["{message}" , "{code}" , "{func}"] , exception : None , regex : "^LDAP error (.*) \\((.*)\\) after calling (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAP.php" , line : 382usize , placeholders : & [] , exception : Some ("OC\\ServerNotAvailableException") , regex : "^Lost connection to LDAP server\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAP.php" , line : 384usize , placeholders : & [] , exception : Some ("OC\\ServerNotAvailableException") , regex : "^LDAP server is shutting down\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAP.php" , line : 386usize , placeholders : & [] , exception : Some ("Exception") , regex : "^LDAP authentication method rejected$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAP.php" , line : 388usize , placeholders : & [] , exception : Some ("Exception") , regex : "^LDAP Operations error$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/LDAP.php" , line : 391usize , placeholders : & ["!empty($extended_error) ? $extended_error : $errorMsg"] , exception : Some ("OCA\\User_LDAP\\Exceptions\\ConstraintViolationException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Jobs/UpdateGroups.php" , line : 58usize , placeholders : & [] , exception : None , regex : "^Run background job \"updateGroups\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Mapping/AbstractMapping.php" , line : 94usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid Column Name$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/Mapping/AbstractMapping.php" , line : 355usize , placeholders : & ["{dn}"] , exception : None , regex : "^Cannot map, because the DN exceeds 4000 characters: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Group_LDAP.php" , line : 245usize , placeholders : & ["{dn}"] , exception : None , regex : "^No search filter found on member url of group (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Group_LDAP.php" , line : 473usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Not a valid group$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Group_LDAP.php" , line : 597usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Not a valid group$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Group_LDAP.php" , line : 761usize , placeholders : & ["{dn}"] , exception : None , regex : "^No search filter found on member url of group (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/Group_LDAP.php" , line : 799usize , placeholders : & ["{dn}" , "{host}"] , exception : None , regex : "^No uid attribute found for DN (.*) on (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Group_LDAP.php" , line : 1284usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not create group in LDAP backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Group_LDAP.php" , line : 1306usize , placeholders : & ["$gid"] , exception : Some ("Exception") , regex : "^Could not delete unknown group (.*) in LDAP backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Group_LDAP.php" , line : 1316usize , placeholders : & ["$gid"] , exception : Some ("Exception") , regex : "^Could not delete existing group (.*) in LDAP backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Group_LDAP.php" , line : 1335usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not add user to group in LDAP backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Group_LDAP.php" , line : 1354usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not remove user from group in LDAP backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/Group_LDAP.php" , line : 1368usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not get group details in LDAP backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/User/Manager.php" , line : 135usize , placeholders : & [] , exception : Some ("Exception") , regex : "^LDAP Access instance must be set first$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/User/User.php" , line : 125usize , placeholders : & ["$dn"] , exception : None , regex : "^uid for '(.*)' must not be null!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/User/User.php" , line : 126usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^uid must not be null!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/User/User.php" , line : 128usize , placeholders : & ["$dn"] , exception : None , regex : "^uid for '(.*)' must not be an empty string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/User/User.php" , line : 129usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^uid must not be an empty string!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/user_ldap/lib/User/User.php" , line : 335usize , placeholders : & ["$username"] , exception : None , regex : "^updated profile uid=(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/User/User.php" , line : 337usize , placeholders : & [] , exception : None , regex : "^profile data from LDAP unchanged$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/User/User.php" , line : 341usize , placeholders : & [] , exception : None , regex : "^skipping profile check, while cached data exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/User/User.php" , line : 419usize , placeholders : & ["$this->getUsername()"] , exception : Some ("Exception") , regex : "^Home dir attribute can't be read from LDAP for uid: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/User/User.php" , line : 597usize , placeholders : & ["$this->uid" , "$aQuota[0]"] , exception : None , regex : "^no suitable LDAP quota found for user (.*): \\[(.*)\\]$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/User/User.php" , line : 602usize , placeholders : & ["$this->uid" , "$valueFromLDAP"] , exception : None , regex : "^no suitable LDAP quota found for user (.*): \\[(.*)\\]$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/User/User.php" , line : 609usize , placeholders : & ["$this->uid" , "$defaultQuota"] , exception : None , regex : "^no suitable default quota found for user (.*): \\[(.*)\\]$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/user_ldap/lib/User/User.php" , line : 617usize , placeholders : & ["$this->uid"] , exception : None , regex : "^trying to set a quota for user (.*) but the user is missing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/User/User.php" , line : 638usize , placeholders : & ["$this->uid"] , exception : None , regex : "^could not get user for uid=(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/User/User.php" , line : 656usize , placeholders : & ["$property" , "$this->uid"] , exception : None , regex : "^property does not exist: (.*) for uid=(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/User/User.php" , line : 664usize , placeholders : & ["$property" , "$value" , "$this->uid"] , exception : None , regex : "^update user profile: (.*)=(.*) for uid=(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/User/User.php" , line : 671usize , placeholders : & ["$this->uid"] , exception : None , regex : "^invalid data from LDAP: for uid=(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/User/User.php" , line : 737usize , placeholders : & ["$this->dn"] , exception : None , regex : "^avatar image data from LDAP invalid for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/user_ldap/lib/User/User.php" , line : 745usize , placeholders : & ["$this->dn"] , exception : None , regex : "^croping image for avatar failed for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/user_ldap/lib/User/User.php" , line : 758usize , placeholders : & ["$this->dn"] , exception : None , regex : "^Could not set avatar for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/User/User.php" , line : 779usize , placeholders : & ["sprintf(\n\t\t\t'external home storage attribute yield no value for %s', $this->getUsername()\n\t\t)"] , exception : Some ("OCA\\User_LDAP\\Exceptions\\AttributeNotSet") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/UserPluginManager.php" , line : 66usize , placeholders : & ["$action" , "get_class($plugin)"] , exception : None , regex : "^Registered action (.*) to plugin (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/user_ldap/lib/UserPluginManager.php" , line : 71usize , placeholders : & ["get_class($plugin)"] , exception : None , regex : "^Registered action deleteUser to plugin (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/UserPluginManager.php" , line : 98usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No plugin implements createUser in this LDAP Backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/UserPluginManager.php" , line : 114usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No plugin implements setPassword in this LDAP Backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/UserPluginManager.php" , line : 129usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No plugin implements canChangeAvatar in this LDAP Backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/UserPluginManager.php" , line : 144usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No plugin implements getHome in this LDAP Backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/UserPluginManager.php" , line : 159usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No plugin implements getDisplayName in this LDAP Backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/UserPluginManager.php" , line : 175usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No plugin implements setDisplayName in this LDAP Backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/UserPluginManager.php" , line : 189usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No plugin implements countUsers in this LDAP Backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/lib/UserPluginManager.php" , line : 212usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No plugin implements deleteUser in this LDAP Backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/user_ldap/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/survey_client/lib/BackgroundJobs/MonthlyReport.php" , line : 51usize , placeholders : & [] , exception : None , regex : "^Error while sending usage statistic$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/survey_client/lib/Notifier.php" , line : 77usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/support/lib/Controller/ApiController.php" , line : 105usize , placeholders : & [] , exception : None , regex : "^Could not create folder \"System information\" to store generated report\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/support/lib/Controller/ApiController.php" , line : 126usize , placeholders : & ["$filename"] , exception : None , regex : "^Could not create file \"(.*)\" to store generated report\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/support/lib/Controller/ApiController.php" , line : 158usize , placeholders : & ["$filename"] , exception : None , regex : "^Could not share file \"(.*)\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/support/lib/Repair/SwitchUpdaterServer.php" , line : 49usize , placeholders : & [] , exception : None , regex : "^Repair step already executed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/support/lib/Notification/Notifier.php" , line : 66usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unknown app id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/support/lib/Notification/Notifier.php" , line : 92usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/support/lib/Service/SubscriptionService.php" , line : 115usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/support/lib/Service/SubscriptionService.php" , line : 121usize , placeholders : & ["get_class($backend)"] , exception : None , regex : "^Can not determine user count for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/support/lib/Service/SubscriptionService.php" , line : 134usize , placeholders : & ["$userCount" , "$disabledUsersCount"] , exception : None , regex : "^Total user count was negative \\(users: (.*), disabled: (.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/support/lib/Service/SubscriptionService.php" , line : 193usize , placeholders : & [] , exception : None , regex : "^Subscription info successfully fetched$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/support/lib/Service/SubscriptionService.php" , line : 233usize , placeholders : & ["$backendURL" , "$response->getStatusCode()" , "$response->getBody()"] , exception : None , regex : "^Renewal of subscription info returned invalid data\\. URL: (.*) Status: (.*) Body: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/support/lib/Service/SubscriptionService.php" , line : 236usize , placeholders : & ["$backendURL"] , exception : None , regex : "^Renew of subscription info failed due to connect exception \\- retrying later\\. URL: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/support/lib/Service/SubscriptionService.php" , line : 242usize , placeholders : & [] , exception : None , regex : "^Subscription key invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/support/lib/Service/SubscriptionService.php" , line : 246usize , placeholders : & ["$backendURL"] , exception : None , regex : "^Renew of subscription info failed\\. URL: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/support/lib/Service/SubscriptionService.php" , line : 250usize , placeholders : & ["$backendURL"] , exception : None , regex : "^Renew of subscription info failed\\. URL: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/apps/support/lib/AppInfo/Application.php" , line : 67usize , placeholders : & [] , exception : None , regex : "^Multiple subscription adapters are registered\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/support/lib/Sections/ServerSection.php" , line : 154usize , placeholders : & [] , exception : None , regex : "^Unable to determine database version$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Middleware/ProvisioningApiMiddleware.php" , line : 75usize , placeholders : & [] , exception : Some ("OCA\\Provisioning_API\\Middleware\\Exceptions\\NotSubAdminException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Middleware/ProvisioningApiMiddleware.php" , line : 88usize , placeholders : & ["$exception->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/GroupsController.php" , line : 178usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^The requested group could not be found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/GroupsController.php" , line : 194usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/GroupsController.php" , line : 221usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^The requested group could not be found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/GroupsController.php" , line : 250usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^The requested group could not be found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/provisioning_api/lib/Controller/GroupsController.php" , line : 268usize , placeholders : & [] , exception : None , regex : "^Group name not supplied$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/GroupsController.php" , line : 269usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^Invalid group name$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/GroupsController.php" , line : 273usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^group exists$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/GroupsController.php" , line : 277usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^Not supported by backend$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/GroupsController.php" , line : 304usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^Group does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/GroupsController.php" , line : 310usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^Not supported by backend$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/GroupsController.php" , line : 312usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/GroupsController.php" , line : 332usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/GroupsController.php" , line : 335usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/GroupsController.php" , line : 354usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^Group does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 206usize , placeholders : & [] , exception : None , regex : "^Found one enabled account that is removed from its backend, but still exists in Nextcloud database$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 241usize , placeholders : & ["$limit"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid limit value: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 244usize , placeholders : & ["$offset"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid offset value: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 287usize , placeholders : & [] , exception : None , regex : "^Found one disabled account that was removed from its backend, but still exists in Nextcloud database$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 393usize , placeholders : & ["$this->l10n->t('Could not create non-existing user ID')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 437usize , placeholders : & [] , exception : None , regex : "^Failed addUser attempt: User already exists\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 438usize , placeholders : & ["$this->l10n->t('User already exists')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 444usize , placeholders : & ["$this->l10n->t('Group %1$s does not exist', [$group])"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 447usize , placeholders : & ["$this->l10n->t('Insufficient privileges for group %1$s', [$group])"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 452usize , placeholders : & ["$this->l10n->t('No group specified (required for sub-admins)')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 462usize , placeholders : & ["$this->l10n->t('Sub-admin group does not exist')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 466usize , placeholders : & ["$this->l10n->t('Cannot create sub-admins for admin group')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 470usize , placeholders : & ["$this->l10n->t('No permissions to promote sub-admins')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 478usize , placeholders : & ["$this->l10n->t('Invalid password value')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 482usize , placeholders : & ["$this->l10n->t('To send a password link to the user an email address is required.')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 501usize , placeholders : & ["$this->l10n->t('Required email address was not provided')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 506usize , placeholders : & ["$userid"] , exception : None , regex : "^Successful addUser call with userid: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 510usize , placeholders : & ["$userid" , "$group"] , exception : None , regex : "^Added userid (.*) to group (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 554usize , placeholders : & ["$email"] , exception : None , regex : "^Unable to send the invitation mail to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 567usize , placeholders : & [] , exception : None , regex : "^Failed addUser attempt with hint exception\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 574usize , placeholders : & ["$e->getHint()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 576usize , placeholders : & [] , exception : None , regex : "^Failed addUser attempt with ocs exception\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 585usize , placeholders : & [] , exception : None , regex : "^Failed addUser attempt with invalid argument exception\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 592usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 594usize , placeholders : & [] , exception : None , regex : "^Failed addUser attempt with exception\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 601usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^Bad request$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 627usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 651usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 668usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 689usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 697usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 705usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 762usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 767usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 786usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 792usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 826usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 829usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 834usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 860usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 961usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 966usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 975usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 987usize , placeholders : & ["$this->l10n->t('Invalid quota value: %1$s', [$value])"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 994usize , placeholders : & ["$this->l10n->t('Invalid quota value. %1$s is exceeding the maximum quota', [$value])"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1003usize , placeholders : & ["$this->l10n->t('Unlimited quota is forbidden on this instance')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1014usize , placeholders : & ["$this->l10n->t('Invalid password value')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1017usize , placeholders : & ["$this->l10n->t('Setting the password is not supported by the users backend')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1021usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1027usize , placeholders : & ["$this->l10n->t('Invalid language')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1033usize , placeholders : & ["$this->l10n->t('Invalid locale')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1044usize , placeholders : & [] , exception : None , regex : "^Cannot set primary email, because provided address is not verified$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1054usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1061usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1070usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1076usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1098usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^Invalid (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1107usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^Invalid (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1143usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^Invalid (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1148usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1174usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1178usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1184usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1210usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1214usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1220usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1227usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1274usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1280usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1305usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1332usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1352usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1358usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1361usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1368usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1393usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1398usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1403usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1409usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1416usize , placeholders : & ["$this->l10n->t('Cannot remove yourself from the admin group')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1420usize , placeholders : & ["$this->l10n->t('Cannot remove yourself from this group as you are a sub-admin')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1433usize , placeholders : & ["$this->l10n->t('Not viable to remove user from the last group you are sub-admin of')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1460usize , placeholders : & ["$this->l10n->t('User does not exist')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1464usize , placeholders : & ["$this->l10n->t('Group does not exist')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1468usize , placeholders : & ["$this->l10n->t('Cannot create sub-admins for admin group')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1501usize , placeholders : & ["$this->l10n->t('User does not exist')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1505usize , placeholders : & ["$this->l10n->t('Group does not exist')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1509usize , placeholders : & ["$this->l10n->t('User is not a sub-admin of this group')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1548usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1558usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1563usize , placeholders : & ["$this->l10n->t('Email address not available')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1575usize , placeholders : & ["$email"] , exception : None , regex : "^Can't send new user mail to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/UsersController.php" , line : 1582usize , placeholders : & ["$this->l10n->t('Sending email failed')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/AppConfigController.php" , line : 132usize , placeholders : & [] , exception : Some ("Exception") , regex : "^User is not logged in\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/AppConfigController.php" , line : 136usize , placeholders : & ["$this->l10n->t('Logged in account must be an administrator or have authorization to edit this setting.')"] , exception : Some ("OC\\AppFramework\\Middleware\\Security\\Exceptions\\NotAdminException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/AppConfigController.php" , line : 181usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid app id given$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/AppConfigController.php" , line : 193usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given key can not be set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/AppConfigController.php" , line : 197usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given key can not be set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/AppConfigController.php" , line : 201usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given key can not be set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/AppConfigController.php" , line : 208usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given key can not be set, unlimited quota is forbidden on this instance$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/AppsController.php" , line : 82usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/AppsController.php" , line : 104usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^The request app was not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/AppsController.php" , line : 122usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^The request app was not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/AUserData.php" , line : 121usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^User does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/AUserData.php" , line : 150usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/AUserData.php" , line : 212usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/AUserData.php" , line : 240usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^User does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/AUserData.php" , line : 274usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^User does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/provisioning_api/lib/Controller/AUserData.php" , line : 285usize , placeholders : & ["{user}"] , exception : None , regex : "^Could not load storage info for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/VerificationController.php" , line : 86usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Logged in account is not mail address owner$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/VerificationController.php" , line : 107usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Logged in account is not mail address owner$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/lib/Controller/VerificationController.php" , line : 120usize , placeholders : & ["$this->l10n->t('Email was already removed from account and cannot be confirmed anymore.')"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/provisioning_api/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/rubix/ml/tests/Other/Loggers/ScreenTest.php" , line : 44usize , placeholders : & ["LogLevel::INFO"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Backends/Amp.php" , line : 62usize , placeholders : & ["$workers"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of workers must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Embedders/TSNE.php" , line : 230usize , placeholders : & ["$dimensions"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Dimensions must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Embedders/TSNE.php" , line : 235usize , placeholders : & ["$rate"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Learning rate must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Embedders/TSNE.php" , line : 240usize , placeholders : & ["$perplexity"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Perplexity must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Embedders/TSNE.php" , line : 245usize , placeholders : & ["$exaggeration"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Exaggeration must be greater than 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Embedders/TSNE.php" , line : 250usize , placeholders : & ["$epochs"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of epochs must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Embedders/TSNE.php" , line : 255usize , placeholders : & ["$minGradient"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Minimum gradient must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Embedders/TSNE.php" , line : 260usize , placeholders : & ["$window"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Window must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Embedders/TSNE.php" , line : 333usize , placeholders : & ["$this"] , exception : None , regex : "^(.*) initialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Embedders/TSNE.php" , line : 335usize , placeholders : & [] , exception : None , regex : "^Computing high\\-dimensional affinities$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Embedders/TSNE.php" , line : 381usize , placeholders : & [] , exception : None , regex : "^Numerical instability detected$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Embedders/TSNE.php" , line : 390usize , placeholders : & ["$epoch" , "$loss"] , exception : None , regex : "^Epoch (.*) \\- Gradient: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Embedders/TSNE.php" , line : 415usize , placeholders : & [] , exception : None , regex : "^Early exaggeration exhausted$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Embedders/TSNE.php" , line : 421usize , placeholders : & [] , exception : None , regex : "^Embedding complete$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/PersistentModel.php" , line : 54usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Persistable must implement the Learner interface\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/PersistentModel.php" , line : 69usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Base Learner must implement the Persistable interface\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/PersistentModel.php" , line : 177usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Base Estimator must implement the Probabilistic interface\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/PersistentModel.php" , line : 194usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Base Estimator must implement the Ranking interface\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Extractors/NDJSON.php" , line : 40usize , placeholders : & ["$path"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Path (.*) does not exist\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Extractors/NDJSON.php" , line : 44usize , placeholders : & ["$path"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Path (.*) is not readable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Extractors/NDJSON.php" , line : 50usize , placeholders : & ["$path"] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Could not open (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Extractors/NDJSON.php" , line : 88usize , placeholders : & ["$line" , "$e->getMessage()"] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^JSON Error on line (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Extractors/JSON.php" , line : 40usize , placeholders : & ["$path"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Path (.*) does not exist\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Extractors/JSON.php" , line : 44usize , placeholders : & ["$path"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Path (.*) is not readable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Extractors/JSON.php" , line : 61usize , placeholders : & ["$this->path"] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Could not open (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Extractors/ColumnPicker.php" , line : 58usize , placeholders : & ["$key" , "$i"] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Column '(.*)' not found at row offset (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Extractors/CSV.php" , line : 74usize , placeholders : & ["$path"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Path (.*) does not exist\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Extractors/CSV.php" , line : 78usize , placeholders : & ["$path"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Path (.*) is not readable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Extractors/CSV.php" , line : 82usize , placeholders : & ["strlen($delimiter)"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Delimiter must be a single character, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Extractors/CSV.php" , line : 87usize , placeholders : & ["strlen($enclosure)"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Enclosure must be a single character, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Extractors/CSV.php" , line : 94usize , placeholders : & ["$path"] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Could not open (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Extractors/CSV.php" , line : 127usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Header not found on the first line\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Extractors/CSV.php" , line : 147usize , placeholders : & ["$line"] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Malformed record on line (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/DataType.php" , line : 187usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Invalid type code\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/RedisDB.php" , line : 71usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Key cannot be empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/RedisDB.php" , line : 75usize , placeholders : & ["$timeout"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Timeout must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/RedisDB.php" , line : 82usize , placeholders : & ["$host" , "$port"] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Could not connect to Redis server at host (.*) on port (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/RedisDB.php" , line : 88usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Password is invalid\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/RedisDB.php" , line : 93usize , placeholders : & ["$database"] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Failed to select database (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/RedisDB.php" , line : 114usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Failed to save  persistable to the database\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Serializers/RBX.php" , line : 130usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Unrecognized message format\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Serializers/RBX.php" , line : 138usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Invalid message format\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Serializers/RBX.php" , line : 144usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Header checksum verification failed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Serializers/RBX.php" , line : 150usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Data is corrupted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Serializers/RBX.php" , line : 156usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Data checksum verification failed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Serializers/RBX.php" , line : 162usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Class name mismatch\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Serializers/RBX.php" , line : 166usize , placeholders : & ["$header['library']['version']"] , exception : Some ("Rubix\\ML\\Exceptions\\ClassRevisionMismatch") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Serializers/Gzip.php" , line : 46usize , placeholders : & ["$level"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Level must be between 0 and 9, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Serializers/Gzip.php" , line : 51usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Base serializer must not be an instance of Gzip\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Serializers/Gzip.php" , line : 72usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Failed to compress data\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Serializers/Gzip.php" , line : 90usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Failed to decompress data\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Serializers/Igbinary.php" , line : 48usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Could not serialize data\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Serializers/Igbinary.php" , line : 68usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Unserialized data must be an object\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Serializers/Igbinary.php" , line : 72usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Missing class for object data\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Serializers/Igbinary.php" , line : 76usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Unserialized object must implement the Persistable interface\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Serializers/Native.php" , line : 52usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Unserialized data must be an object\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Serializers/Native.php" , line : 56usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Missing class for object data\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Serializers/Native.php" , line : 60usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Unserialized object must implement the Persistable interface\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Flysystem.php" , line : 106usize , placeholders : & ["$filename"] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Failed to create history file '(.*)'\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Flysystem.php" , line : 115usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Could not write to filesystem\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Flysystem.php" , line : 128usize , placeholders : & ["$this->path"] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^File does not exist at (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Flysystem.php" , line : 134usize , placeholders : & ["$this->path"] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Error reading data from (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Persisters/Flysystem.php" , line : 140usize , placeholders : & ["$this->path"] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^File at (.*) does not contain any data\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Report.php" , line : 72usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Reports cannot be mutated directly\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Report.php" , line : 99usize , placeholders : & ["$key"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Attribute with key (.*) not found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Report.php" , line : 108usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Reports cannot be mutated directly\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CrossValidation/Reports/AggregateReport.php" , line : 45usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Aggregate must contain at least 1 sub report\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CrossValidation/Reports/AggregateReport.php" , line : 53usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Sub report must implement the ReportGenerator interface\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CrossValidation/Reports/AggregateReport.php" , line : 63usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Report must contain sub reports that have at least 1 compatible Estimator type in common\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CrossValidation/HoldOut.php" , line : 41usize , placeholders : & ["$ratio"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Ratio must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CrossValidation/HoldOut.php" , line : 68usize , placeholders : & ["$this->ratio"] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Dataset does not contain enough records to create a validation set with a hold out ratio of (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CrossValidation/Metrics/FBeta.php" , line : 73usize , placeholders : & ["$beta"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Beta must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CrossValidation/Metrics/VMeasure.php" , line : 42usize , placeholders : & ["$beta"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Beta must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CrossValidation/MonteCarlo.php" , line : 59usize , placeholders : & ["$simulations"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of simulations must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CrossValidation/MonteCarlo.php" , line : 64usize , placeholders : & ["$ratio"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Ratio must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CrossValidation/MonteCarlo.php" , line : 87usize , placeholders : & ["$this->ratio"] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Dataset does not contain enough records to create a validation set with a hold out ratio of (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CrossValidation/LeavePOut.php" , line : 47usize , placeholders : & ["$p"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^P must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CrossValidation/KFold.php" , line : 49usize , placeholders : & ["$k"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^K must be greater than 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Pipeline.php" , line : 77usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Transformer must implement the Transformer interface\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Pipeline.php" , line : 176usize , placeholders : & ["$transformer"] , exception : None , regex : "^Fitted (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Pipeline.php" , line : 201usize , placeholders : & ["$transformer"] , exception : None , regex : "^Updated (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Pipeline.php" , line : 241usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Base Estimator must implement the Probabilistic interface\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Pipeline.php" , line : 260usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Base Estimator must implement the Ranking interface\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Kernels/SVM/Polynomial.php" , line : 52usize , placeholders : & ["$degree"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Degree must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Kernels/Distance/Minkowski.php" , line : 44usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Lambda cannot be less than 1\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Dataset.php" , line : 76usize , placeholders : & ["$n" , "count($sample)" , "$row"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of columns must be equal for all samples, (.*) expected but (.*) given at row offset (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Dataset.php" , line : 85usize , placeholders : & ["$column" , "$types[$column]" , "$type" , "$row"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Column (.*) must contain values of the same data type, (.*) expected but (.*) given at row offset (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Dataset.php" , line : 136usize , placeholders : & ["$offset"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Sample at offset (.*) not found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Dataset.php" , line : 212usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Cannot determine data type of an empty dataset\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Dataset.php" , line : 217usize , placeholders : & ["$offset"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Column at offset (.*) does not exist\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Dataset.php" , line : 286usize , placeholders : & ["$this->numColumns()" , "$offset"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Column offset must be between 0 and (.*), (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Dataset.php" , line : 378usize , placeholders : & ["$cols" , "count($header)"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Header must have (.*) columns, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Dataset.php" , line : 412usize , placeholders : & ["$cols" , "count($header)"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Header must have (.*) columns, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Dataset.php" , line : 418usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Delimiter must be at least 1 character\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Dataset.php" , line : 423usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Enclosure must be a single character\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Dataset.php" , line : 765usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Datasets cannot be mutated directly\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Dataset.php" , line : 785usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Datasets cannot be mutated directly\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Unlabeled.php" , line : 80usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Dataset must implement the Dataset interface\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Unlabeled.php" , line : 85usize , placeholders : & ["$n" , "$dataset->numColumns()"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Dataset must have the same number of columns, (.*) expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Unlabeled.php" , line : 106usize , placeholders : & ["$n"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^The number of samples cannot be less than 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Unlabeled.php" , line : 123usize , placeholders : & ["$n"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^The number of samples cannot be less than 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Unlabeled.php" , line : 140usize , placeholders : & ["$n"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^The number of samples cannot be less than 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Unlabeled.php" , line : 157usize , placeholders : & ["$n"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^The number of samples cannot be less than 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Unlabeled.php" , line : 200usize , placeholders : & ["$this->numColumns()" , "$dataset->numColumns()"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Datasets must have the same dimensionality, (.*) expected, but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Unlabeled.php" , line : 219usize , placeholders : & ["$this->numRows()" , "$dataset->numRows()"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Datasets must have the same number of rows, (.*) expected, but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Unlabeled.php" , line : 336usize , placeholders : & ["$ratio"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Ratio must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Unlabeled.php" , line : 358usize , placeholders : & ["$k"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cannot create less than 1 fold, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Unlabeled.php" , line : 461usize , placeholders : & ["$n"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cannot generate a subset of less than 1 sample, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Unlabeled.php" , line : 466usize , placeholders : & ["$this->numRows()" , "$n"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cannot generate subset of more than (.*), (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Unlabeled.php" , line : 493usize , placeholders : & ["$n"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cannot generate a subset of less than 1 sample, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Unlabeled.php" , line : 519usize , placeholders : & ["$n"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cannot generate a subset of less than 1 sample, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Unlabeled.php" , line : 524usize , placeholders : & ["count($this->samples)" , "count($weights)"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^The number of weights must be equal to the number of samples in the dataset, (.*) needed but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Unlabeled.php" , line : 602usize , placeholders : & ["$offset"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Row at offset (.*) not found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Generators/Hyperplane.php" , line : 58usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cannot generate samples with dimensionality less than 1\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Generators/Hyperplane.php" , line : 63usize , placeholders : & ["$noise"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Noise must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Generators/HalfMoon.php" , line : 68usize , placeholders : & ["$scale"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Scale must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Generators/HalfMoon.php" , line : 73usize , placeholders : & ["$rotation"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Rotation must be between 0 and 360, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Generators/HalfMoon.php" , line : 78usize , placeholders : & ["$noise"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Noise must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Generators/SwissRoll.php" , line : 77usize , placeholders : & ["$scale"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Scale must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Generators/SwissRoll.php" , line : 82usize , placeholders : & ["$depth"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Depth must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Generators/SwissRoll.php" , line : 87usize , placeholders : & ["$noise"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Noise factor cannot be less than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Generators/Circle.php" , line : 60usize , placeholders : & ["$scale"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Scale must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Generators/Circle.php" , line : 65usize , placeholders : & ["$noise"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Noise must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Generators/Blob.php" , line : 48usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cannot generate samples with dimensionality less than 1\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Generators/Blob.php" , line : 54usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of center coordinates and standard deviations must be equal\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Generators/Blob.php" , line : 60usize , placeholders : & ["$value"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Standard deviation must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Generators/Blob.php" , line : 68usize , placeholders : & ["$stdDev"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Standard deviation must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Generators/Agglomerate.php" , line : 54usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Agglomerate must contain at least 1 Generator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Generators/Agglomerate.php" , line : 60usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Generator must implement the Generator interface\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Generators/Agglomerate.php" , line : 71usize , placeholders : & ["$dimensions" , "$generator->dimensions()"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Agglomerate must contain Generators that produce samples of the same dimensionality, (.*) expected but  (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Generators/Agglomerate.php" , line : 80usize , placeholders : & ["$k" , "count($weights)"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^The number of weights and Generators must be equal, (.*) expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Generators/Agglomerate.php" , line : 87usize , placeholders : & ["$weight"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Weights must be positive, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Generators/Agglomerate.php" , line : 95usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Total weight must not be equal to 0\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 109usize , placeholders : & ["get_class($dataset)"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Dataset must be an instance of Labeled, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 115usize , placeholders : & ["$n" , "$dataset->numColumns()"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Dataset must have the same number of columns, (.*) expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 139usize , placeholders : & ["count($samples)" , "count($labels)"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of samples and labels must be equal, (.*) samples but (.*) labels given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 150usize , placeholders : & ["$type"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Label type must be categorical or continuous, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 156usize , placeholders : & ["$offset" , "$type" , "DataType::detect($label)"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Invalid label type found at offset (.*), (.*) expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 162usize , placeholders : & ["$offset"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Labels must not contain NaN values, NaN found at offset (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 193usize , placeholders : & ["$offset"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Row at offset (.*) not found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 208usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Dataset is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 227usize , placeholders : & ["gettype($label)"] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Label must be a string or numeric type, (.*) found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 257usize , placeholders : & ["$n"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^The number of samples cannot be less than 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 274usize , placeholders : & ["$n"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^The number of samples cannot be less than 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 292usize , placeholders : & ["$n"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^The number of samples cannot be less than 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 310usize , placeholders : & ["$n"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^The number of samples cannot be less than 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 358usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Can only merge with another Labeled dataset\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 364usize , placeholders : & ["$this->numColumns()" , "$dataset->numColumns()"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Datasets must have the same number of columns, (.*) expected, but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 386usize , placeholders : & ["$this->numRows()" , "$dataset->numRows()"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Datasets must have the same number of rows, (.*) expected, but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 576usize , placeholders : & ["$ratio"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Ratio must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 604usize , placeholders : & ["$ratio"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Ratio must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 642usize , placeholders : & ["$k"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cannot create less than 1 fold, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 673usize , placeholders : & ["$k"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cannot create less than 2 folds, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 800usize , placeholders : & ["$n"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cannot generate subset of less than 1 sample, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 805usize , placeholders : & ["$this->numRows()" , "$n"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cannot generate subset of more than (.*), (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 833usize , placeholders : & ["$n"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cannot generate subset of less than 1 sample, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 862usize , placeholders : & ["$n"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cannot generate subset of less than 1 sample, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 867usize , placeholders : & ["count($this->samples)" , "count($weights)"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^The number of weights must be equal to the number of samples in the dataset, (.*) needed but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 1024usize , placeholders : & ["$offset"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Row at offset (.*) not found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Datasets/Labeled.php" , line : 1057usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Label must be a string or integer type\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Tokenizers/NGram.php" , line : 66usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Minimum cannot be less than 1\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Tokenizers/NGram.php" , line : 70usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Maximum cannot be less than minimum\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Tokenizers/KSkipNGram.php" , line : 78usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Minimum cannot be less than 1\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Tokenizers/KSkipNGram.php" , line : 82usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Maximum cannot be less than minimum\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Tokenizers/KSkipNGram.php" , line : 86usize , placeholders : & ["$skip"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Skip words must be greater than 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Tokenizers/Whitespace.php" , line : 32usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Delimiter must be at least 1 character in length\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/JSON.php" , line : 50usize , placeholders : & ["json_last_error()"] , exception : Some ("Rubix\\ML\\Exceptions\\JSONException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/JSON.php" , line : 72usize , placeholders : & ["$code"] , exception : Some ("Rubix\\ML\\Exceptions\\JSONException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Stats.php" , line : 34usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Mean is undefined for empty set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Stats.php" , line : 50usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Weighted mean is undefined for empty set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Stats.php" , line : 54usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^The number of weights must equal the number of values\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Stats.php" , line : 61usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Total weight cannot equal 0\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Stats.php" , line : 96usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Variance is undefined for empty set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Stats.php" , line : 120usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Median is undefined for empty set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Stats.php" , line : 162usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Quantile is undefined for empty set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Stats.php" , line : 173usize , placeholders : & ["$q"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Quantile must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Stats.php" , line : 202usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Interquartile range is undefined for empty set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Stats.php" , line : 234usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Median absolute deviation is undefined for empty set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Stats.php" , line : 261usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Skewness is undefined for empty set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Stats.php" , line : 283usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Kurtosis is undefined for empty set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Stats.php" , line : 306usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Central moment is undefined for empty set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Stats.php" , line : 310usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Moment cannot be less than 1\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Stats.php" , line : 335usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Range is undefined for empty set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/CPU.php" , line : 65usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Could not detect number of processor cores\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Params.php" , line : 39usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Maximum cannot be less than or equal to minimum\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Params.php" , line : 44usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cannot generate less than 1 parameter\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Params.php" , line : 49usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cannot generate more unique integers than within range of\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Params.php" , line : 78usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Maximum cannot be less than or equal to minimum\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Params.php" , line : 83usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cannot generate less than 1 parameter\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Params.php" , line : 111usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Maximum cannot be less than or equal to minimum\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Helpers/Params.php" , line : 116usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cannot generate less than 2 parameters\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Strategies/WildGuess.php" , line : 69usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Strategy must be fitted to at least 1 value\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Strategies/WildGuess.php" , line : 88usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Strategy has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Strategies/Prior.php" , line : 69usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Strategy must be fitted to at least 1 value\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Strategies/Prior.php" , line : 88usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Strategy has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Strategies/Mean.php" , line : 60usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Strategy must be fitted to at least 1 value\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Strategies/Mean.php" , line : 78usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Strategy has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Strategies/KMostFrequent.php" , line : 46usize , placeholders : & ["$k"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cannot guess from less than 1 class, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Strategies/KMostFrequent.php" , line : 86usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Strategy must be fitted to at least 1 value\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Strategies/KMostFrequent.php" , line : 110usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Strategy has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Strategies/Percentile.php" , line : 42usize , placeholders : & ["$p"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Percentile must be between 0 and 100, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Strategies/Percentile.php" , line : 82usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Strategy must be fitted to at least 1 value\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Other/Strategies/Percentile.php" , line : 102usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Strategy has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/EstimatorType.php" , line : 139usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Invalid type code\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Encoding.php" , line : 59usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Folder does not exist or is not writable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Encoding.php" , line : 63usize , placeholders : & ["$path"] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^File (.*) is not writable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Encoding.php" , line : 69usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Failed to write to the filesystem\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/MeanShift.php" , line : 147usize , placeholders : & ["$percentile"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Percentile must be between 0 and 100, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/MeanShift.php" , line : 186usize , placeholders : & ["$radius"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Radius must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/MeanShift.php" , line : 191usize , placeholders : & ["$ratio"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Ratio must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/MeanShift.php" , line : 196usize , placeholders : & ["$epochs"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of epochs must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/MeanShift.php" , line : 201usize , placeholders : & ["$minShift"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Minimum shift must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/MeanShift.php" , line : 296usize , placeholders : & ["$this"] , exception : None , regex : "^(.*) initialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/MeanShift.php" , line : 344usize , placeholders : & [] , exception : None , regex : "^Numerical instability detected$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/MeanShift.php" , line : 355usize , placeholders : & ["$epoch" , "$loss"] , exception : None , regex : "^Epoch (.*) \\- loss: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/MeanShift.php" , line : 370usize , placeholders : & [] , exception : None , regex : "^Training complete$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/MeanShift.php" , line : 384usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/MeanShift.php" , line : 427usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/Seeders/KMC2.php" , line : 52usize , placeholders : & ["$m"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^M must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/DBSCAN.php" , line : 87usize , placeholders : & ["$radius"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Radius must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/DBSCAN.php" , line : 92usize , placeholders : & ["$minDensity"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Minimum density must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/KMeans.php" , line : 152usize , placeholders : & ["$k"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^K must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/KMeans.php" , line : 157usize , placeholders : & ["$batchSize"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Batch size must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/KMeans.php" , line : 162usize , placeholders : & ["$epochs"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of epochs must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/KMeans.php" , line : 167usize , placeholders : & ["$minChange"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Minimum change must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/KMeans.php" , line : 172usize , placeholders : & ["$window"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Window must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/KMeans.php" , line : 307usize , placeholders : & ["$this"] , exception : None , regex : "^(.*) initialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/KMeans.php" , line : 346usize , placeholders : & [] , exception : None , regex : "^Numerical instability detected$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/KMeans.php" , line : 370usize , placeholders : & ["$epoch" , "$loss"] , exception : None , regex : "^Epoch (.*) \\- Inertia: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/KMeans.php" , line : 399usize , placeholders : & [] , exception : None , regex : "^Training complete$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/KMeans.php" , line : 413usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/KMeans.php" , line : 456usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/GaussianMixture.php" , line : 136usize , placeholders : & ["$k"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^K must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/GaussianMixture.php" , line : 141usize , placeholders : & ["$epochs"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of epochs must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/GaussianMixture.php" , line : 146usize , placeholders : & ["$minChange"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Minimum change must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/GaussianMixture.php" , line : 256usize , placeholders : & ["$this"] , exception : None , regex : "^(.*) initialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/GaussianMixture.php" , line : 294usize , placeholders : & [] , exception : None , regex : "^Numerical instability detected$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/GaussianMixture.php" , line : 305usize , placeholders : & ["$epoch" , "$loss"] , exception : None , regex : "^Epoch (.*) \\- loss: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/GaussianMixture.php" , line : 353usize , placeholders : & [] , exception : None , regex : "^Training complete$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/GaussianMixture.php" , line : 367usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/GaussianMixture.php" , line : 398usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/FuzzyCMeans.php" , line : 136usize , placeholders : & ["$c"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^C must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/FuzzyCMeans.php" , line : 141usize , placeholders : & ["$fuzz"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Fuzz factor must be greater than 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/FuzzyCMeans.php" , line : 146usize , placeholders : & ["$epochs"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of epochs must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/FuzzyCMeans.php" , line : 151usize , placeholders : & ["$minChange"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Minimum change must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/FuzzyCMeans.php" , line : 246usize , placeholders : & ["$this"] , exception : None , regex : "^(.*) initialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/FuzzyCMeans.php" , line : 264usize , placeholders : & [] , exception : None , regex : "^Numerical instability detected$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/FuzzyCMeans.php" , line : 275usize , placeholders : & ["$epoch" , "$loss"] , exception : None , regex : "^Epoch (.*) \\- Inertia: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/FuzzyCMeans.php" , line : 309usize , placeholders : & [] , exception : None , regex : "^Training complete$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/FuzzyCMeans.php" , line : 323usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Clusterers/FuzzyCMeans.php" , line : 354usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/Adaline.php" , line : 143usize , placeholders : & ["$batchSize"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Batch size must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/Adaline.php" , line : 148usize , placeholders : & ["$alpha"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Alpha must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/Adaline.php" , line : 153usize , placeholders : & ["$epochs"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of epochs must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/Adaline.php" , line : 158usize , placeholders : & ["$minChange"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Minimum change must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/Adaline.php" , line : 163usize , placeholders : & ["$window"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Window must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/Adaline.php" , line : 295usize , placeholders : & ["$this"] , exception : None , regex : "^(.*) initialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/Adaline.php" , line : 314usize , placeholders : & [] , exception : None , regex : "^Numerical under/overflow detected$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/Adaline.php" , line : 325usize , placeholders : & ["$epoch" , "$this->costFn" , "$loss"] , exception : None , regex : "^Epoch (.*) \\- (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/Adaline.php" , line : 352usize , placeholders : & [] , exception : None , regex : "^Training complete$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/Adaline.php" , line : 366usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/Adaline.php" , line : 383usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/Adaline.php" , line : 389usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Weight layer is missing\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/DummyRegressor.php" , line : 51usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Continuous strategy must be compatible with continuous data types\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/DummyRegressor.php" , line : 132usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/GradientBoost.php" , line : 199usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Booster is not compatible with the ensemble\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/GradientBoost.php" , line : 204usize , placeholders : & ["$rate"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Learning rate must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/GradientBoost.php" , line : 209usize , placeholders : & ["$ratio"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Ratio must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/GradientBoost.php" , line : 214usize , placeholders : & ["$estimators"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of estimators must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/GradientBoost.php" , line : 219usize , placeholders : & ["$minChange"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Minimum change must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/GradientBoost.php" , line : 224usize , placeholders : & ["$window"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Window must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/GradientBoost.php" , line : 229usize , placeholders : & ["$holdOut"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Hold out ratio must be between 0 and 0\\.5, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/GradientBoost.php" , line : 238usize , placeholders : & ["$base->type()"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Base Estimator must be a regressor, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/GradientBoost.php" , line : 349usize , placeholders : & ["$this"] , exception : None , regex : "^(.*) initialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/GradientBoost.php" , line : 359usize , placeholders : & ["$this->base"] , exception : None , regex : "^Training (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/GradientBoost.php" , line : 410usize , placeholders : & [] , exception : None , regex : "^Numerical instability detected$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/GradientBoost.php" , line : 432usize , placeholders : & ["$epoch" , "$this->metric" , "($score ?? 'n/a')" , "$loss"] , exception : None , regex : "^Epoch (.*) \\- (.*): (.*), L2 Loss: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/GradientBoost.php" , line : 471usize , placeholders : & ["$bestEpoch"] , exception : None , regex : "^Restoring ensemble state to epoch (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/GradientBoost.php" , line : 478usize , placeholders : & [] , exception : None , regex : "^Training complete$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/GradientBoost.php" , line : 492usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/GradientBoost.php" , line : 519usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/KDNeighborsRegressor.php" , line : 79usize , placeholders : & ["$k"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^At least 1 neighbor is required to make a prediction, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/KDNeighborsRegressor.php" , line : 175usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/MLPRegressor.php" , line : 188usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Hidden layer must implement the Hidden interface\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/MLPRegressor.php" , line : 194usize , placeholders : & ["$batchSize"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Batch size must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/MLPRegressor.php" , line : 199usize , placeholders : & ["$alpha"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Alpha must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/MLPRegressor.php" , line : 204usize , placeholders : & ["$epochs"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of epochs must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/MLPRegressor.php" , line : 209usize , placeholders : & ["$minChange"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Minimum change must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/MLPRegressor.php" , line : 214usize , placeholders : & ["$window"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Window must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/MLPRegressor.php" , line : 219usize , placeholders : & ["$holdOut"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Hold out ratio must be between 0 and 0\\.5, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/MLPRegressor.php" , line : 376usize , placeholders : & ["$this"] , exception : None , regex : "^(.*) initialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/MLPRegressor.php" , line : 402usize , placeholders : & [] , exception : None , regex : "^Numerical instability detected$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/MLPRegressor.php" , line : 421usize , placeholders : & ["$epoch" , "$this->metric" , "($score ?? 'n/a')" , "$this->costFn" , "$loss"] , exception : None , regex : "^Epoch (.*) \\- (.*): (.*), (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/MLPRegressor.php" , line : 461usize , placeholders : & ["$bestEpoch"] , exception : None , regex : "^Network restored from snapshot at epoch (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/MLPRegressor.php" , line : 466usize , placeholders : & [] , exception : None , regex : "^Training complete$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/MLPRegressor.php" , line : 481usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/KNNRegressor.php" , line : 94usize , placeholders : & ["$k"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^At least 1 neighbor is required to make a prediction, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/KNNRegressor.php" , line : 193usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/RegressionTree.php" , line : 142usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/SVR.php" , line : 88usize , placeholders : & ["$c"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^C must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/SVR.php" , line : 93usize , placeholders : & ["$epsilon"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Epsilon must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/SVR.php" , line : 100usize , placeholders : & ["$tolerance"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Tolerance must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/SVR.php" , line : 105usize , placeholders : & ["$cacheSize"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cache size must be greater than 0M, (.*)M given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/SVR.php" , line : 232usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/SVR.php" , line : 247usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Learner must be trained before saving\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/RadiusNeighborsRegressor.php" , line : 87usize , placeholders : & ["$radius"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Radius must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/RadiusNeighborsRegressor.php" , line : 185usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/Ridge.php" , line : 71usize , placeholders : & ["$alpha"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Alpha must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/Ridge.php" , line : 195usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/Ridge.php" , line : 215usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Learner has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Regressors/ExtraTreeRegressor.php" , line : 142usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/GridSearch.php" , line : 133usize , placeholders : & ["$base"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Class (.*) does not exist\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/GridSearch.php" , line : 139usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Base class must implement the Learner Interface\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/GridSearch.php" , line : 287usize , placeholders : & ["$this"] , exception : None , regex : "^(.*) initialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/GridSearch.php" , line : 289usize , placeholders : & ["count($combinations)"] , exception : None , regex : "^Searching (.*) combinations of hyper\\-parameters$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/GridSearch.php" , line : 323usize , placeholders : & [] , exception : None , regex : "^Training with best hyper\\-parameters$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/GridSearch.php" , line : 331usize , placeholders : & [] , exception : None , regex : "^Training complete$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/GridSearch.php" , line : 359usize , placeholders : & ["$this->metric" , "$score" , "Params::stringify($params)"] , exception : None , regex : "^(.*): (.*), params: \\[(.*)\\]$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CommitteeMachine.php" , line : 96usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Committee must contain at least 1 expert\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CommitteeMachine.php" , line : 105usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Expert must implement the Learner interface\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CommitteeMachine.php" , line : 109usize , placeholders : & ["$expert->type()"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Committee only supports classifiers, regressors, and anomaly detectors,  (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CommitteeMachine.php" , line : 115usize , placeholders : & ["$prototype->type()" , "$expert->type()"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Experts must be of the same type, (.*) expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CommitteeMachine.php" , line : 126usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Committee must have at least 1 compatible data type in common\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CommitteeMachine.php" , line : 134usize , placeholders : & ["$k" , "count($influences)"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of influences must be equal to the number of experts, (.*) expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CommitteeMachine.php" , line : 142usize , placeholders : & ["$total"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Total influence must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/CommitteeMachine.php" , line : 254usize , placeholders : & ["$this"] , exception : None , regex : "^(.*) initialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/CommitteeMachine.php" , line : 283usize , placeholders : & [] , exception : None , regex : "^Training complete$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CommitteeMachine.php" , line : 298usize , placeholders : & ["$estimator"] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^There was a problem training (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/CommitteeMachine.php" , line : 302usize , placeholders : & ["$estimator"] , exception : None , regex : "^(.*) finished training$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/CommitteeMachine.php" , line : 315usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Snapshot.php" , line : 66usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of layers and parameter groups must be equal$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Initializers/Normal.php" , line : 34usize , placeholders : & ["$stdDev"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Standard deviation must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Initializers/Constant.php" , line : 33usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cannot initialize weight values to NaN\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Initializers/Uniform.php" , line : 34usize , placeholders : & ["$beta"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Beta cannot be less than or equal to 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Dense.php" , line : 103usize , placeholders : & ["$neurons"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of neurons must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Dense.php" , line : 108usize , placeholders : & ["$alpha"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Alpha must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Dense.php" , line : 142usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Layer is not initialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Dense.php" , line : 186usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Layer is not initialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Dense.php" , line : 212usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Layer is not initialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Dense.php" , line : 237usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Layer has not been initialized\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Dense.php" , line : 241usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Must perform forward pass before backpropagating\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Dense.php" , line : 293usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Layer has not been initialized\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Activation.php" , line : 70usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Layer has not been initialized\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Activation.php" , line : 137usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Must perform forward pass before backpropagating\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/PReLU.php" , line : 77usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Layer has not been initialized\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/PReLU.php" , line : 146usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Layer has not been initialized\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/PReLU.php" , line : 150usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Must perform forward pass before backpropagating\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/PReLU.php" , line : 194usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Layer has not been initialized\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/PReLU.php" , line : 222usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Layer has not been initialized\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/PReLU.php" , line : 256usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Layer has not been initialized\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Continuous.php" , line : 69usize , placeholders : & ["$fanIn"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Fan in must be equal to 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Continuous.php" , line : 111usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Must perform forward pass before backpropagating\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Placeholder1D.php" , line : 36usize , placeholders : & ["$inputs"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of input nodes must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Placeholder1D.php" , line : 73usize , placeholders : & ["$this->inputs" , "$input->m()"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^The number of features and input nodes must be equal, (.*) expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Multiclass.php" , line : 77usize , placeholders : & ["count($classes)"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of classes must be greater than 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Multiclass.php" , line : 110usize , placeholders : & ["$fanOut" , "$fanIn"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Fan in must be equal to fan out, (.*) expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Multiclass.php" , line : 156usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Must perform forward pass before backpropagating\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Binary.php" , line : 77usize , placeholders : & ["count($classes)"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of classes must be 2, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Binary.php" , line : 107usize , placeholders : & ["$fanIn"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Fan in must be equal to 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Binary.php" , line : 151usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Must perform forward pass before backpropagating\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Noise.php" , line : 49usize , placeholders : & ["$stdDev"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Standard deviation must be 0 or greater, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Noise.php" , line : 67usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Layer has not been initialized\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Dropout.php" , line : 64usize , placeholders : & ["$ratio"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Ratio must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Dropout.php" , line : 83usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Layer has not been initialized\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/Dropout.php" , line : 150usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Must perform forward pass before backpropagating\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/BatchNorm.php" , line : 119usize , placeholders : & ["$decay"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Decay must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/BatchNorm.php" , line : 139usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Layer has not been initialized\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/BatchNorm.php" , line : 181usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Layer has not been initialized\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/BatchNorm.php" , line : 220usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Layer has not been initialized\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/BatchNorm.php" , line : 243usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Layer has not been initialized\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/BatchNorm.php" , line : 247usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Must perform forward pass before backpropagating\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Layers/BatchNorm.php" , line : 308usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Layer has not been initialized\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/ActivationFunctions/ELU.php" , line : 41usize , placeholders : & ["$alpha"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Alpha cannot be less than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/ActivationFunctions/ThresholdedReLU.php" , line : 38usize , placeholders : & ["$threshold"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Threshold must be positive, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/ActivationFunctions/LeakyReLU.php" , line : 40usize , placeholders : & ["$leakage"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Leakage must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Optimizers/AdaGrad.php" , line : 53usize , placeholders : & ["$rate"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Learning rate must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Optimizers/Adam.php" , line : 99usize , placeholders : & ["$rate"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Learning rate must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Optimizers/Adam.php" , line : 104usize , placeholders : & ["$momentumDecay"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Momentum decay must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Optimizers/Adam.php" , line : 109usize , placeholders : & ["$normDecay"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Norm decay must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Optimizers/RMSProp.php" , line : 67usize , placeholders : & ["$rate"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Learning rate must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Optimizers/RMSProp.php" , line : 72usize , placeholders : & ["$decay"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Decay must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Optimizers/StepDecay.php" , line : 60usize , placeholders : & ["$rate"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Learning rate must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Optimizers/StepDecay.php" , line : 65usize , placeholders : & ["$steps"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^The number of steps per floor must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Optimizers/StepDecay.php" , line : 70usize , placeholders : & ["$decay"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Decay rate must be positive, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Optimizers/Momentum.php" , line : 59usize , placeholders : & ["$rate"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Learning rate must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Optimizers/Momentum.php" , line : 64usize , placeholders : & ["$decay"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Decay must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Optimizers/Stochastic.php" , line : 34usize , placeholders : & ["$rate"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Learning rate must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Optimizers/Cyclical.php" , line : 83usize , placeholders : & ["$lower"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Lower bound must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Optimizers/Cyclical.php" , line : 88usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Lower bound cannot be reater than the upper bound\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Optimizers/Cyclical.php" , line : 93usize , placeholders : & ["$steps"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^The number of steps per cycle must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/Optimizers/Cyclical.php" , line : 98usize , placeholders : & ["$decay"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Decay must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/CostFunctions/RelativeEntropy.php" , line : 35usize , placeholders : & [] , exception : None , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/CostFunctions/CrossEntropy.php" , line : 36usize , placeholders : & [] , exception : None , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/NeuralNet/CostFunctions/HuberLoss.php" , line : 45usize , placeholders : & ["$alpha"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Alpha must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Specifications/SamplesAreCompatibleWithTransformer.php" , line : 68usize , placeholders : & ["$this->transformer" , "implode(', ', $incompatible)"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^(.*) is incompatible with (.*) data types\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Specifications/DatasetHasDimensionality.php" , line : 48usize , placeholders : & ["$dimensions"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Dimensions must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Specifications/DatasetHasDimensionality.php" , line : 64usize , placeholders : & ["$this->dataset"] , exception : Some ("Rubix\\ML\\Exceptions\\IncorrectDatasetDimensionality") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Specifications/DatasetIsNotEmpty.php" , line : 47usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\EmptyDataset") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Specifications/LabelsAreCompatibleWithLearner.php" , line : 62usize , placeholders : & ["$this->dataset->labelType()"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Classifiers require categorical labels, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Specifications/LabelsAreCompatibleWithLearner.php" , line : 72usize , placeholders : & ["$this->dataset->labelType()"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Regressors require continuous labels, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Specifications/DatasetIsLabeled.php" , line : 48usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\LabelsMissing") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Specifications/SamplesAreCompatibleWithEstimator.php" , line : 68usize , placeholders : & ["$this->estimator" , "implode(', ', $incompatible)"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^(.*) is incompatible with (.*) data types\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Specifications/PredictionAndLabelCountsAreEqual.php" , line : 56usize , placeholders : & ["count($this->predictions)" , "count($this->labels)"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of predictions and labels must be equal (.*) predictions but (.*) labels given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Specifications/ExtensionIsLoaded.php" , line : 48usize , placeholders : & ["$this->name"] , exception : Some ("Rubix\\ML\\Exceptions\\MissingExtension") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Specifications/EstimatorIsCompatibleWithMetric.php" , line : 60usize , placeholders : & ["$this->estimator"] , exception : Some ("Rubix\\ML\\Exceptions\\EstimatorIncompatibleWithMetric") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Specifications/SamplesAreCompatibleWithDistance.php" , line : 68usize , placeholders : & ["$this->kernel" , "implode(', ', $incompatible)"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^(.*) is incompatible with (.*) data types\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/BootstrapAggregator.php" , line : 102usize , placeholders : & ["$base->type()"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^This meta estimator only supports classifiers, regressors, and anomaly detectors, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/BootstrapAggregator.php" , line : 108usize , placeholders : & ["$estimators"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of estimators must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/BootstrapAggregator.php" , line : 113usize , placeholders : & ["$ratio"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Ratio must be between 0 and 1\\.5, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/BootstrapAggregator.php" , line : 222usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/MultilayerPerceptron.php" , line : 196usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Hidden layer must implement the Hidden interface\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/MultilayerPerceptron.php" , line : 202usize , placeholders : & ["$batchSize"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Batch size must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/MultilayerPerceptron.php" , line : 207usize , placeholders : & ["$alpha"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Alpha must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/MultilayerPerceptron.php" , line : 212usize , placeholders : & ["$epochs"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of epochs must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/MultilayerPerceptron.php" , line : 217usize , placeholders : & ["$minChange"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Minimum change must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/MultilayerPerceptron.php" , line : 222usize , placeholders : & ["$window"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Window must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/MultilayerPerceptron.php" , line : 227usize , placeholders : & ["$holdOut"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Hold out ratio must be between 0 and 0\\.5, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/MultilayerPerceptron.php" , line : 391usize , placeholders : & ["$this"] , exception : None , regex : "^(.*) initialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/MultilayerPerceptron.php" , line : 417usize , placeholders : & [] , exception : None , regex : "^Numerical instability detected$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/MultilayerPerceptron.php" , line : 436usize , placeholders : & ["$epoch" , "$this->metric" , "($score ?? 'n/a')" , "$this->costFn" , "$loss"] , exception : None , regex : "^Epoch (.*) \\- (.*): (.*), (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/MultilayerPerceptron.php" , line : 476usize , placeholders : & ["$bestEpoch"] , exception : None , regex : "^Network restored from snapshot at epoch (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/MultilayerPerceptron.php" , line : 481usize , placeholders : & [] , exception : None , regex : "^Training complete$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/MultilayerPerceptron.php" , line : 506usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/LogisticRegression.php" , line : 150usize , placeholders : & ["$batchSize"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Batch size must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/LogisticRegression.php" , line : 155usize , placeholders : & ["$alpha"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Alpha must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/LogisticRegression.php" , line : 160usize , placeholders : & ["$epochs"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of epochs must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/LogisticRegression.php" , line : 165usize , placeholders : & ["$minChange"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Minimum change must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/LogisticRegression.php" , line : 170usize , placeholders : & ["$window"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Window must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/LogisticRegression.php" , line : 310usize , placeholders : & ["$this"] , exception : None , regex : "^(.*) initialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/LogisticRegression.php" , line : 329usize , placeholders : & [] , exception : None , regex : "^Numerical instability detected$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/LogisticRegression.php" , line : 340usize , placeholders : & ["$epoch" , "$this->costFn" , "$loss"] , exception : None , regex : "^Epoch (.*) \\- (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/LogisticRegression.php" , line : 367usize , placeholders : & [] , exception : None , regex : "^Training complete$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/LogisticRegression.php" , line : 392usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/LogisticRegression.php" , line : 422usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/LogisticRegression.php" , line : 428usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Weight layer not found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/KDNeighbors.php" , line : 90usize , placeholders : & ["$k"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^At least 1 neighbor is required to make a prediction, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/KDNeighbors.php" , line : 190usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/KDNeighbors.php" , line : 233usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/AdaBoost.php" , line : 164usize , placeholders : & ["$base->type()"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Base Estimator must be a classifier, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/AdaBoost.php" , line : 169usize , placeholders : & ["$rate"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Learning rate must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/AdaBoost.php" , line : 174usize , placeholders : & ["$ratio"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Ratio must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/AdaBoost.php" , line : 179usize , placeholders : & ["$estimators"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of estimators must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/AdaBoost.php" , line : 184usize , placeholders : & ["$minChange"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Minimum change must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/AdaBoost.php" , line : 189usize , placeholders : & ["$window"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Window must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/AdaBoost.php" , line : 289usize , placeholders : & ["$this"] , exception : None , regex : "^(.*) initialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/AdaBoost.php" , line : 330usize , placeholders : & [] , exception : None , regex : "^Numerical instability detected$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/AdaBoost.php" , line : 343usize , placeholders : & ["$epoch" , "$loss"] , exception : None , regex : "^Epoch (.*) \\- Exp Loss: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/AdaBoost.php" , line : 348usize , placeholders : & [] , exception : None , regex : "^Estimator dropped due to high training loss$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/AdaBoost.php" , line : 396usize , placeholders : & [] , exception : None , regex : "^Training complete$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/AdaBoost.php" , line : 446usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/RandomForest.php" , line : 135usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Base Learner must be compatible with ensemble\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/RandomForest.php" , line : 140usize , placeholders : & ["$estimators"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of estimators must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/RandomForest.php" , line : 145usize , placeholders : & ["$ratio"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Ratio must be between 0 and 1\\.5, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/RandomForest.php" , line : 266usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/RandomForest.php" , line : 298usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/RandomForest.php" , line : 340usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/ClassificationTree.php" , line : 155usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/ClassificationTree.php" , line : 189usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/SVC.php" , line : 91usize , placeholders : & ["$c"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^C must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/SVC.php" , line : 98usize , placeholders : & ["$tolerance"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Tolerance must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/SVC.php" , line : 103usize , placeholders : & ["$cacheSize"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cache size must be greater than 0M, (.*)M given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/SVC.php" , line : 232usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/SVC.php" , line : 249usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Learner must be trained before saving\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/KNearestNeighbors.php" , line : 103usize , placeholders : & ["$k"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^At least 1 neighbor is required to make a prediction, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/KNearestNeighbors.php" , line : 208usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/KNearestNeighbors.php" , line : 251usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/NaiveBayes.php" , line : 107usize , placeholders : & ["$smoothing"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Smoothing must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/NaiveBayes.php" , line : 117usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Total class prior probability cannot be equal to 0\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/NaiveBayes.php" , line : 123usize , placeholders : & ["$prior"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Prior probability must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/NaiveBayes.php" , line : 295usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/NaiveBayes.php" , line : 326usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/ExtraTreeClassifier.php" , line : 156usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/ExtraTreeClassifier.php" , line : 190usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/DummyClassifier.php" , line : 50usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Strategy must be compatible with categorical data types\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/DummyClassifier.php" , line : 131usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/GaussianNB.php" , line : 105usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Total class prior probability cannot be equal to 0\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/GaussianNB.php" , line : 111usize , placeholders : & ["$prior"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Prior probability must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/GaussianNB.php" , line : 294usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/GaussianNB.php" , line : 325usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/SoftmaxClassifier.php" , line : 147usize , placeholders : & ["$batchSize"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Batch size must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/SoftmaxClassifier.php" , line : 152usize , placeholders : & ["$alpha"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Alpha must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/SoftmaxClassifier.php" , line : 157usize , placeholders : & ["$epochs"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of epochs must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/SoftmaxClassifier.php" , line : 162usize , placeholders : & ["$minChange"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Minimum change must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/SoftmaxClassifier.php" , line : 167usize , placeholders : & ["$window"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Window must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/SoftmaxClassifier.php" , line : 306usize , placeholders : & ["$this"] , exception : None , regex : "^(.*) initialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/SoftmaxClassifier.php" , line : 325usize , placeholders : & [] , exception : None , regex : "^Numerical instability detected$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/SoftmaxClassifier.php" , line : 336usize , placeholders : & ["$epoch" , "$this->costFn" , "$loss"] , exception : None , regex : "^Epoch (.*) \\- (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/SoftmaxClassifier.php" , line : 363usize , placeholders : & [] , exception : None , regex : "^Training complete$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/SoftmaxClassifier.php" , line : 388usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/RadiusNeighbors.php" , line : 102usize , placeholders : & ["$radius"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Radius must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/RadiusNeighbors.php" , line : 107usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Anomaly class cannot be an empty string\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/RadiusNeighbors.php" , line : 196usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Training set cannot contain labels of the outlier class\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/RadiusNeighbors.php" , line : 219usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Classifiers/RadiusNeighbors.php" , line : 266usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Graph/Trees/CART.php" , line : 120usize , placeholders : & ["$maxHeight"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Tree must have depth greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Graph/Trees/CART.php" , line : 125usize , placeholders : & ["$maxLeafSize"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^At least one sample is required to form a leaf node, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Graph/Trees/CART.php" , line : 130usize , placeholders : & ["$minPurityIncrease"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Min purity increase must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Graph/Trees/CART.php" , line : 135usize , placeholders : & ["$maxFeatures"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Tree must consider at least 1 feature to determine a split, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Graph/Trees/CART.php" , line : 312usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Tree has not been constructed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Graph/Trees/CART.php" , line : 342usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Tree has not been constructed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Graph/Trees/CART.php" , line : 346usize , placeholders : & ["$this->featureCount" , "count($header)"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Header must have the same number of columns as the training set, (.*) expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Graph/Trees/CART.php" , line : 450usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Could not split dataset\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Graph/Trees/KDTree.php" , line : 66usize , placeholders : & ["$maxLeafSize"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^At least one sample is required to form a neighborhood, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Graph/Trees/KDTree.php" , line : 71usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Distance kernel must be compatible with continuous features\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Graph/Trees/KDTree.php" , line : 140usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^KD Tree only works with continuous features\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Graph/Trees/BallTree.php" , line : 67usize , placeholders : & ["$maxLeafSize"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^At least one sample is required to form a leaf node, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Graph/Trees/ExtraTree.php" , line : 78usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Could not split dataset\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Graph/Trees/ITree.php" , line : 55usize , placeholders : & ["$maxHeight"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^A tree cannot have a depth of less than 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/MaxAbsoluteScaler.php" , line : 120usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Transformer has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/RecursiveFeatureEliminator.php" , line : 96usize , placeholders : & ["$minFeatures"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Maximum features must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/RecursiveFeatureEliminator.php" , line : 101usize , placeholders : & ["$maxDroppedFeatures"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Maximum dropped features must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/RecursiveFeatureEliminator.php" , line : 106usize , placeholders : & ["$maxDroppedImportance"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Maximum dropped importance must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/RecursiveFeatureEliminator.php" , line : 158usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Transformer requires a Labeled training set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/RecursiveFeatureEliminator.php" , line : 175usize , placeholders : & ["$dataset->labelType()"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^No compatible base learner for (.*) label type\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/RecursiveFeatureEliminator.php" , line : 181usize , placeholders : & ["$this"] , exception : None , regex : "^(.*) initialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/RecursiveFeatureEliminator.php" , line : 229usize , placeholders : & ["$epoch" , "count($dropped)" , "$subset->numColumns()" , "$total"] , exception : None , regex : "^Epoch (.*) \\- Dropped (.*)/(.*) columns, Total Dropped Importance: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/RecursiveFeatureEliminator.php" , line : 242usize , placeholders : & [] , exception : None , regex : "^Fitting complete$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/RecursiveFeatureEliminator.php" , line : 255usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Transformer has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/KNNImputer.php" , line : 94usize , placeholders : & ["$k"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^At least 1 neighbor is required to impute a value, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/KNNImputer.php" , line : 102usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Continuous distance kernels must implement the NaNSafe interface\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/KNNImputer.php" , line : 164usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^No complete donors found in dataset\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/KNNImputer.php" , line : 183usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Transformer has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/VarianceThresholdFilter.php" , line : 55usize , placeholders : & ["$minFeatures"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Min features must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/VarianceThresholdFilter.php" , line : 127usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Transformer has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/KBestFeatureSelector.php" , line : 68usize , placeholders : & ["$k"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^K must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/KBestFeatureSelector.php" , line : 116usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Transformer requires a Labeled training set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/KBestFeatureSelector.php" , line : 133usize , placeholders : & ["$dataset->labelType()"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^No compatible base learner for (.*) label type\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/KBestFeatureSelector.php" , line : 156usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Transformer has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/MissingDataImputer.php" , line : 79usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Continuous strategy must be compatible with continuous data types\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/MissingDataImputer.php" , line : 84usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Categorical strategy must be compatible with categorical data types\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/MissingDataImputer.php" , line : 161usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Dataset must contain at least 1 donor per feature column\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/MissingDataImputer.php" , line : 181usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Transformer has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/TruncatedSVD.php" , line : 68usize , placeholders : & ["$dimensions"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Dimensions must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/TruncatedSVD.php" , line : 147usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Transformer has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/BooleanConverter.php" , line : 45usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^True value must be a string or numeric type\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/BooleanConverter.php" , line : 50usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^False value must be a string or numeric type\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/ZScaleStandardizer.php" , line : 208usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Transformer has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/IntervalDiscretizer.php" , line : 67usize , placeholders : & ["$bins"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of bins must be greater than 3, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/IntervalDiscretizer.php" , line : 155usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Transformer has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/PrincipalComponentAnalysis.php" , line : 91usize , placeholders : & ["$dimensions"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Dimensions must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/PrincipalComponentAnalysis.php" , line : 208usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Transformer has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/GaussianRandomProjector.php" , line : 58usize , placeholders : & ["$n"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of samples must be be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/GaussianRandomProjector.php" , line : 63usize , placeholders : & ["$maxDistortion"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Max distortion must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/GaussianRandomProjector.php" , line : 79usize , placeholders : & ["$dimensions"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Dimensions must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/GaussianRandomProjector.php" , line : 132usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Transformer has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/StopWordFilter.php" , line : 30usize , placeholders : & ["gettype($word)"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Stop word must be a non\\-empty string, (.*) found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/PolynomialExpander.php" , line : 38usize , placeholders : & ["$degree"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^The degree of the polynomial must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/SparseRandomProjector.php" , line : 55usize , placeholders : & ["$sparsity"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Sparsity must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/WordCountVectorizer.php" , line : 85usize , placeholders : & ["$maxVocabulary"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Max vocabulary must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/WordCountVectorizer.php" , line : 90usize , placeholders : & ["$minDocumentFrequency"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Minimum document frequency must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/WordCountVectorizer.php" , line : 95usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Maximum document frequency cannot be less than minimum document frequency\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/WordCountVectorizer.php" , line : 201usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Transformer has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/RobustStandardizer.php" , line : 141usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Transformer has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/RegexFilter.php" , line : 99usize , placeholders : & ["gettype($pattern)"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Pattern must be a string, (.*) found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/ImageResizer.php" , line : 54usize , placeholders : & ["$width" , "$height"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Width and height must be greater than 0, (.*) and (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/ImageResizer.php" , line : 110usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Could not create placeholder image\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/ImageResizer.php" , line : 116usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Failed to resize image\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/OneHotEncoder.php" , line : 104usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Transformer has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/MinMaxNormalizer.php" , line : 79usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Minimum cannot be greater than maximum\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/MinMaxNormalizer.php" , line : 197usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Transformer has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/LinearDiscriminantAnalysis.php" , line : 80usize , placeholders : & ["$dimensions"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Dimensions must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/LinearDiscriminantAnalysis.php" , line : 158usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Transformer requires a Labeled training set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/LinearDiscriminantAnalysis.php" , line : 165usize , placeholders : & ["$dataset->labelType()"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Transformer requires categorical labels, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/LinearDiscriminantAnalysis.php" , line : 219usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Transformer has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/ImageVectorizer.php" , line : 110usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Transformer has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/TfIdfTransformer.php" , line : 74usize , placeholders : & ["$smoothing"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Smoothing must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/Transformers/TfIdfTransformer.php" , line : 174usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Transformer has not been fitted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/GaussianMLE.php" , line : 96usize , placeholders : & ["$contamination"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Contamination must be between 0 and 0\\.5, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/GaussianMLE.php" , line : 260usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/GaussianMLE.php" , line : 291usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/LocalOutlierFactor.php" , line : 119usize , placeholders : & ["$k"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^At least 1 neighbor is required to form a local region, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/LocalOutlierFactor.php" , line : 124usize , placeholders : & ["$contamination"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Contamination must be between 0 and 0\\.5, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/LocalOutlierFactor.php" , line : 246usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/LocalOutlierFactor.php" , line : 277usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/Loda.php" , line : 144usize , placeholders : & ["$estimators"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of estimators must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/Loda.php" , line : 149usize , placeholders : & ["self::MIN_BINS" , "$bins"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Bins must be greater than (.*), (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/Loda.php" , line : 154usize , placeholders : & ["$contamination"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Contamination must be between 0 and 0\\.5, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/Loda.php" , line : 345usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/IsolationForest.php" , line : 134usize , placeholders : & ["$estimators"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Number of estimators must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/IsolationForest.php" , line : 139usize , placeholders : & ["$ratio"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Ratio must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/IsolationForest.php" , line : 144usize , placeholders : & ["$contamination"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Contamination must be between 0 and 0\\.5, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/IsolationForest.php" , line : 261usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/IsolationForest.php" , line : 292usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/OneClassSVM.php" , line : 80usize , placeholders : & ["$nu"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Nu must be between0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/OneClassSVM.php" , line : 87usize , placeholders : & ["$tolerance"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Tolerance must be, greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/OneClassSVM.php" , line : 92usize , placeholders : & ["$cacheSize"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Cache size must be greater than 0M, (.*)M given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/OneClassSVM.php" , line : 207usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/OneClassSVM.php" , line : 222usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Learner must be trained before saving\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/RobustZScore.php" , line : 97usize , placeholders : & ["$threshold"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Threshold must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/RobustZScore.php" , line : 102usize , placeholders : & ["$alpha"] , exception : Some ("Rubix\\ML\\Exceptions\\InvalidArgumentException") , regex : "^Alpha must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/RobustZScore.php" , line : 213usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/ml/src/AnomalyDetectors/RobustZScore.php" , line : 242usize , placeholders : & [] , exception : Some ("Rubix\\ML\\Exceptions\\RuntimeException") , regex : "^Estimator has not been trained\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 89usize , placeholders : & ["$n"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^N must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 145usize , placeholders : & ["$n"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Number of elements must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 176usize , placeholders : & ["$m"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^M must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 181usize , placeholders : & ["$n"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^N must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 199usize , placeholders : & ["$m"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^M must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 204usize , placeholders : & ["$n"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^N must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 237usize , placeholders : & ["$m"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^M must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 242usize , placeholders : & ["$n"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^N must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 288usize , placeholders : & ["$m"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^M must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 293usize , placeholders : & ["$n"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^N must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 336usize , placeholders : & ["$m"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^M must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 341usize , placeholders : & ["$n"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^N must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 373usize , placeholders : & ["$a->m()" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) rows but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 378usize , placeholders : & ["$a->n()" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) columns but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 402usize , placeholders : & ["$a->m()" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) rows but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 407usize , placeholders : & ["$a->n()" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) columns but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 443usize , placeholders : & ["gettype($vector)"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot stack a non column vector, (.*) found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 448usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Vectors must be the same size\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 479usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Matrix must contain at least 1 element\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 491usize , placeholders : & ["$n" , "count($rowA)" , "$i"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^The number of columns must be equal for all rows, (.*) required but (.*) given at row offset (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 500usize , placeholders : & ["gettype($valueA)"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Matrix element must be an integer or floating point number, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 626usize , placeholders : & ["$this->shapeString()"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Matrix must be square, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 810usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\NotImplemented") , regex : "^Pseudoinverse is not implemented in Tensor PHP\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 822usize , placeholders : & ["$this->shapeString()"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Matrix must be square, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 957usize , placeholders : & ["$this->n" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A requires (.*) rows but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 994usize , placeholders : & ["$this->n" , "$b->size()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A requires (.*) elements but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 1014usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Matrix B cannot be larger than Matrix A\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 1019usize , placeholders : & ["$stride"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Stride cannot be less than 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 1137usize , placeholders : & ["$this->n" , "$b->size()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Solution vector must have (.*) elements, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 1247usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot multiply matrix by the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 1280usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot divide matrix by the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 1313usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot add matrix to the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 1346usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot subtract the given input from matrix\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 1380usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot raise matrix to the given power\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 1414usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot mod matrix with the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 1448usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot compare matrix to the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 1482usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot compare matrix to the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 1516usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot compare matrix to the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 1550usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot compare matrix to the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 1584usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot compare matrix to the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 1618usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot compare matrix to the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 1859usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Mean must be a Column Vector\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 1863usize , placeholders : & ["$this->m" , "$mean->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Mean vector must have (.*) rows, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 1914usize , placeholders : & ["$q"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Q must be between 0 and 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 1948usize , placeholders : & ["$this->m" , "$mean->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Mean vector must have (.*) rows, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 1971usize , placeholders : & ["$precision"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Decimal precision cannot be less than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2022usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Minimum cannot be greater than maximum\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2172usize , placeholders : & ["$rowOffset"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Matrix B does not fit into matrix A with row offset (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2177usize , placeholders : & ["$columnOffset"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Matrix B does not fit into matrix A with column offset (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2213usize , placeholders : & ["$startRow"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Start row must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2218usize , placeholders : & ["$startColumn"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Start column must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2223usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^End row must be greater than start row\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2228usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^End column must be greater than start column\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2233usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^End row is out of bounds of matrix\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2238usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^End column is out of bounds of matrix\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2269usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A requires (.*) columns but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2286usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A requires (.*) columns but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2303usize , placeholders : & ["$this->m" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A requires (.*) rows but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2320usize , placeholders : & ["$this->m" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A requires (.*) rows but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2371usize , placeholders : & ["$this->shapeString()" , "$b->shapeString()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^(.*) matrix expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2402usize , placeholders : & ["$this->shapeString()" , "$b->shapeString()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^(.*) matrix expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2433usize , placeholders : & ["$this->shapeString()" , "$b->shapeString()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^(.*) matrix expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2464usize , placeholders : & ["$this->shapeString()" , "$b->shapeString()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^(.*) matrix expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2495usize , placeholders : & ["$this->shapeString()" , "$b->shapeString()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^(.*) matrix expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2526usize , placeholders : & ["$this->shapeString()" , "$b->shapeString()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^(.*) matrix expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2557usize , placeholders : & ["$this->shapeString()" , "$b->shapeString()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^(.*) matrix expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2588usize , placeholders : & ["$this->shapeString()" , "$b->shapeString()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^(.*) matrix expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2619usize , placeholders : & ["$this->shapeString()" , "$b->shapeString()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^(.*) matrix expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2650usize , placeholders : & ["$this->shapeString()" , "$b->shapeString()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^(.*) matrix expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2681usize , placeholders : & ["$this->shapeString()" , "$b->shapeString()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^(.*) matrix expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2712usize , placeholders : & ["$this->shapeString()" , "$b->shapeString()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^(.*) matrix expected but (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2743usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) columns but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2774usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) columns but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2805usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) columns but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2836usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) columns but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2867usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) columns but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2898usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) columns but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2929usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) columns but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2960usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) columns but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 2991usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) columns but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 3022usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) columns but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 3053usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) columns but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 3084usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) columns but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 3115usize , placeholders : & ["$this->m" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) rows but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 3146usize , placeholders : & ["$this->m" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) rows but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 3177usize , placeholders : & ["$this->m" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) rows but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 3208usize , placeholders : & ["$this->m" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) rows but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 3239usize , placeholders : & ["$this->m" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) rows but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 3270usize , placeholders : & ["$this->m" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) rows but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 3301usize , placeholders : & ["$this->m" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) rows but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 3332usize , placeholders : & ["$this->m" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) rows but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 3363usize , placeholders : & ["$this->m" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) rows but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 3394usize , placeholders : & ["$this->m" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) rows but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 3425usize , placeholders : & ["$this->m" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) rows but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 3456usize , placeholders : & ["$this->m" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Matrix A expects (.*) rows but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 3768usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\RuntimeException") , regex : "^Matrix cannot be mutated directly\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 3788usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\RuntimeException") , regex : "^Matrix cannot be mutated directly\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Matrix.php" , line : 3804usize , placeholders : & ["$index"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Element not found at offset (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 97usize , placeholders : & ["$n"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Number of elements must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 114usize , placeholders : & ["$n"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Number of elements must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 140usize , placeholders : & ["$n"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Number of elements must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 175usize , placeholders : & ["$n"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Number of elements must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 211usize , placeholders : & ["$n"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Number of elements must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 251usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Minimum must be less than maximum\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 256usize , placeholders : & ["$n"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Number of elements must be greater than 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 286usize , placeholders : & ["$a->n()" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) elements but Vector B has(.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 306usize , placeholders : & ["$a->n()" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) elements but Vector B has(.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 323usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Vector must contain at least one element\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 433usize , placeholders : & ["$p" , "$this->n"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^(.*) elements are expected but vector has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 520usize , placeholders : & ["$this->n" , "$b->size()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) elements but vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 590usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cross product is only defined for vectors of 3 dimensions\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 616usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Vector B cannot be larger than Vector A\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 621usize , placeholders : & ["$stride"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Stride cannot be less than 1, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 688usize , placeholders : & ["$p"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^P must be greater than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 730usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot multiply vector to the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 760usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot divide vector by the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 790usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot add vector to the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 820usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot subtract vector from the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 851usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot raise vector to the power of the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 882usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot mod vector with the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 913usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot compare vector with the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 944usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot compare vector with the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 975usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot compare vector with the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1006usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot compare vector with the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1037usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot compare vector with the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1068usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Cannot compare vector with the given input\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1322usize , placeholders : & ["$q"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Q must be between 0 and 100, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1370usize , placeholders : & ["$precision"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Decimal precision cannot be less than 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1415usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Minimum cannot be greater than maximum\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1534usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) columns but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1563usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) columns but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1592usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) columns but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1621usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) columns but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1650usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) columns but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1679usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) columns but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1708usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) columns but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1737usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) columns but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1766usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) columns but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1795usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) columns but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1824usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) columns but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1853usize , placeholders : & ["$this->n" , "$b->n()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) columns but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1882usize , placeholders : & ["$this->n" , "$b->size()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) elements but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1905usize , placeholders : & ["$this->n" , "$b->size()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) elements but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1928usize , placeholders : & ["$this->n" , "$b->size()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) elements but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1951usize , placeholders : & ["$this->n" , "$b->size()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) elements but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1974usize , placeholders : & ["$this->n" , "$b->size()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) elements but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 1997usize , placeholders : & ["$this->n" , "$b->size()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) elements but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 2020usize , placeholders : & ["$this->n" , "$b->size()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) elements but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 2043usize , placeholders : & ["$this->n" , "$b->size()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) elements but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 2066usize , placeholders : & ["$this->n" , "$b->size()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) elements but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 2089usize , placeholders : & ["$this->n" , "$b->size()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) elements but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 2112usize , placeholders : & ["$this->n" , "$b->size()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) elements but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 2135usize , placeholders : & ["$this->n" , "$b->size()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A expects (.*) elements but Vector B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 2369usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\RuntimeException") , regex : "^Vector cannot be mutated directly\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 2389usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\RuntimeException") , regex : "^Vector cannot be mutated directly\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Vector.php" , line : 2405usize , placeholders : & ["$index"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Element not found at the given offset (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Reductions/REF.php" , line : 80usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\RuntimeException") , regex : "^Cannot compute row echelon form of a singular matrix\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Reductions/REF.php" , line : 183usize , placeholders : & ["$swaps"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^The number of swaps must be greater than or equal to 0, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Decompositions/Eigen.php" , line : 46usize , placeholders : & ["$a->shapeString()"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Matrix must be square, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Decompositions/SVD.php" , line : 46usize , placeholders : & [] , exception : Some ("Tensor\\Exceptions\\NotImplemented") , regex : "^SVD is not implemented in Tensor PHP\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Decompositions/LU.php" , line : 53usize , placeholders : & ["$a->shapeString()"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Matrix must be square, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/Decompositions/Cholesky.php" , line : 37usize , placeholders : & ["$a->shapeString()"] , exception : Some ("Tensor\\Exceptions\\InvalidArgumentException") , regex : "^Matrix must be square, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/ColumnVector.php" , line : 69usize , placeholders : & ["$this->n" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A requires (.*) rows but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/ColumnVector.php" , line : 100usize , placeholders : & ["$this->n" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A requires (.*) rows but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/ColumnVector.php" , line : 131usize , placeholders : & ["$this->n" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A requires (.*) rows but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/ColumnVector.php" , line : 162usize , placeholders : & ["$this->n" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A requires (.*) rows but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/ColumnVector.php" , line : 193usize , placeholders : & ["$this->n" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A requires (.*) rows but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/ColumnVector.php" , line : 224usize , placeholders : & ["$this->n" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A requires (.*) rows but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/ColumnVector.php" , line : 256usize , placeholders : & ["$this->n" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A requires (.*) rows but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/ColumnVector.php" , line : 288usize , placeholders : & ["$this->n" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A requires (.*) rows but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/ColumnVector.php" , line : 320usize , placeholders : & ["$this->n" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A requires (.*) rows but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/ColumnVector.php" , line : 352usize , placeholders : & ["$this->n" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A requires (.*) rows but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/ColumnVector.php" , line : 384usize , placeholders : & ["$this->n" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A requires (.*) rows but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/src/ColumnVector.php" , line : 416usize , placeholders : & ["$this->n" , "$b->m()"] , exception : Some ("Tensor\\Exceptions\\DimensionalityMismatch") , regex : "^Vector A requires (.*) rows but Matrix B has (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/rubix/tensor/benchmarks/Functions/LogMatrixBench.php" , line : 30usize , placeholders : & [] , exception : None , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorGreaterEqualOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor greater equal accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorGreaterEqualOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorDotOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Dot accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorDotOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorPowScalarOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor pow scalar accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorPowScalarOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorArgminOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Argmin accepts exactly one argument, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorArgminOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorDivideScalarOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor divide scalar accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorDivideScalarOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorModScalarOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor mod scalar accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorModScalarOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorRefOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^REF accepts exactly one argument, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorRefOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorAddOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor add accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorAddOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorConvolve2dOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Convolve 1D accepts exactly three arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorConvolve2dOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorSetNumThreadsOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Set num threads accepts exactly one argument, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorSetNumThreadsOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorGreaterEqualScalarOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor greater equal scalar accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorGreaterEqualScalarOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorLessEqualOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor less equal accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorLessEqualOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorEqualOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor equal accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorEqualOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorNotEqualScalarOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor not equal scalar accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorNotEqualScalarOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorLuOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Lu accepts exactly one argument, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorLuOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorDivideOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor divide accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorDivideOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorGreaterScalarOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor greater scalar accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorGreaterScalarOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorSubtractScalarOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor subtract scalar accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorSubtractScalarOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorPowOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor pow accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorPowOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorMatmulOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Dot accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorMatmulOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorAddScalarOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor add scalar accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorAddScalarOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorEqualScalarOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor equal scalar accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorEqualScalarOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorPseudoinverseOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Pseudo inverse accepts exactly one argument, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorPseudoinverseOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorNotEqualOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor not equal accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorNotEqualOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorInverseOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Inverse accepts exactly one argument, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorInverseOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorSubtractOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor subtract accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorSubtractOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorCholeskyOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Cholesky accepts exactly one argument, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorCholeskyOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorEigOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Eig accepts exactly one argument, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorEigOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorGetNumThreadsOptimizer.php" , line : 28usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorArgmaxOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Argmax accepts exactly one argument, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorArgmaxOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorConvolve1dOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Convolve 1D accepts exactly three arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorConvolve1dOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorLessOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor less accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorLessOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorGreaterOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor greater accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorGreaterOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorMultiplyOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor multiply accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorMultiplyOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorMultiplyScalarOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor multiply scalar accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorMultiplyScalarOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorLessScalarOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor less scalar accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorLessScalarOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorLessEqualScalarOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor less equal scalar accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorLessEqualScalarOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorModOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Tensor mod accepts exactly two arguments, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorModOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorEigSymmetricOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Eig symmetric accepts exactly one argument, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorEigSymmetricOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorSvdOptimizer.php" , line : 28usize , placeholders : & ["count($expression['parameters'])"] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^SVD accepts exactly one argument, (.*)given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/rubix/tensor/optimizers/TensorSvdOptimizer.php" , line : 39usize , placeholders : & [] , exception : Some ("Zephir\\Exception\\CompilerException") , regex : "^Return value must only be assigned to a dynamic variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/rubix/tensor/tests/MatrixTest.php" , line : 1847usize , placeholders : & [] , exception : None , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/rubix/tensor/tests/VectorTest.php" , line : 1077usize , placeholders : & [] , exception : None , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/league/flysystem/src/Filesystem.php" , line : 144usize , placeholders : & ["gettype($contents)"] , exception : Some ("League\\Flysystem\\InvalidStreamProvided") , regex : "^Invalid stream provided, expected stream resource, received (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/league/flysystem/src/Filesystem.php" , line : 148usize , placeholders : & ["$type"] , exception : Some ("League\\Flysystem\\InvalidStreamProvided") , regex : "^Invalid stream provided, expected stream resource, received resource of type (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/league/flysystem/src/ProxyArrayAccessToProperties.php" , line : 51usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Properties can not be manipulated$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/league/flysystem/src/ProxyArrayAccessToProperties.php" , line : 60usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Properties can not be manipulated$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/league/flysystem/src/InvalidVisibilityProvided.php" , line : 18usize , placeholders : & ["$message"] , exception : Some ("League\\Flysystem\\InvalidVisibilityProvided") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/ResourceOutputStream.php" , line : 41usize , placeholders : & [] , exception : Some ("Error") , regex : "^Expected a valid stream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/ResourceOutputStream.php" , line : 47usize , placeholders : & [] , exception : Some ("Error") , regex : "^Expected a writable stream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/ResourceOutputStream.php" , line : 75usize , placeholders : & [] , exception : Some ("Amp\\ByteStream\\ClosedException") , regex : "^The stream was closed by the peer$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/ResourceOutputStream.php" , line : 97usize , placeholders : & ["$message"] , exception : Some ("Amp\\ByteStream\\StreamException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/ResourceOutputStream.php" , line : 107usize , placeholders : & ["$message"] , exception : Some ("Amp\\ByteStream\\StreamException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/Base64/Base64DecodingInputStream.php" , line : 27usize , placeholders : & [] , exception : Some ("Amp\\ByteStream\\StreamException") , regex : "^Failed to read stream chunk due to invalid base64 data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/Base64/Base64DecodingInputStream.php" , line : 41usize , placeholders : & [] , exception : Some ("Amp\\ByteStream\\StreamException") , regex : "^Failed to read stream chunk due to invalid base64 data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/Base64/Base64DecodingInputStream.php" , line : 57usize , placeholders : & [] , exception : Some ("Amp\\ByteStream\\StreamException") , regex : "^Failed to read stream chunk due to invalid base64 data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/Payload.php" , line : 63usize , placeholders : & [] , exception : Some ("Error") , regex : "^Cannot stream message data once a buffered message has been requested$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/functions.php" , line : 13usize , placeholders : & [] , exception : Some ("Error") , regex : "^The mbstring\\.func_overload ini setting is enabled\\. It must be disabled to use the stream package\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/functions.php" , line : 182usize , placeholders : & ["\\json_last_error_msg()"] , exception : Some ("Amp\\ByteStream\\StreamException") , regex : "^Failed to parse JSON: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/ResourceInputStream.php" , line : 50usize , placeholders : & [] , exception : Some ("Error") , regex : "^Expected a valid stream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/ResourceInputStream.php" , line : 58usize , placeholders : & [] , exception : Some ("Error") , regex : "^Expected a readable stream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/ResourceInputStream.php" , line : 234usize , placeholders : & [] , exception : Some ("Error") , regex : "^Resource has already been freed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/ResourceInputStream.php" , line : 250usize , placeholders : & [] , exception : Some ("Error") , regex : "^Resource has already been freed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/ZlibInputStream.php" , line : 40usize , placeholders : & [] , exception : Some ("Amp\\ByteStream\\StreamException") , regex : "^Failed initializing deflate context$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/ZlibInputStream.php" , line : 66usize , placeholders : & [] , exception : Some ("Amp\\ByteStream\\StreamException") , regex : "^Failed adding data to deflate context$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/ZlibInputStream.php" , line : 77usize , placeholders : & [] , exception : Some ("Amp\\ByteStream\\StreamException") , regex : "^Failed adding data to deflate context$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/ZlibOutputStream.php" , line : 38usize , placeholders : & [] , exception : Some ("Amp\\ByteStream\\StreamException") , regex : "^Failed initializing deflate context$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/ZlibOutputStream.php" , line : 46usize , placeholders : & [] , exception : Some ("Amp\\ByteStream\\ClosedException") , regex : "^The stream has already been closed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/ZlibOutputStream.php" , line : 54usize , placeholders : & [] , exception : Some ("Amp\\ByteStream\\StreamException") , regex : "^Failed adding data to deflate context$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/ZlibOutputStream.php" , line : 71usize , placeholders : & [] , exception : Some ("Amp\\ByteStream\\ClosedException") , regex : "^The stream has already been closed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/ZlibOutputStream.php" , line : 79usize , placeholders : & [] , exception : Some ("Amp\\ByteStream\\StreamException") , regex : "^Failed adding data to deflate context$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/OutputBuffer.php" , line : 28usize , placeholders : & [] , exception : Some ("Amp\\ByteStream\\ClosedException") , regex : "^The stream has already been closed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/byte-stream/lib/OutputBuffer.php" , line : 39usize , placeholders : & [] , exception : Some ("Amp\\ByteStream\\ClosedException") , regex : "^The stream has already been closed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/LocalSemaphore.php" , line : 23usize , placeholders : & [] , exception : Some ("Error") , regex : "^The number of locks must be greater than 0$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/SemaphoreMutex.php" , line : 29usize , placeholders : & [] , exception : Some ("Error") , regex : "^Cannot use a semaphore with more than a single lock$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/PosixSemaphore.php" , line : 46usize , placeholders : & [] , exception : Some ("Error") , regex : "^Number of locks must be greater than 0$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/PosixSemaphore.php" , line : 74usize , placeholders : & ["__CLASS__"] , exception : Some ("Error") , regex : "^(.*) requires the sysvmsg extension\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/PosixSemaphore.php" , line : 93usize , placeholders : & [] , exception : Some ("Error") , regex : "^A semaphore cannot be serialized!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/PosixSemaphore.php" , line : 104usize , placeholders : & [] , exception : Some ("Amp\\Sync\\SyncException") , regex : "^No semaphore with that ID found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/PosixSemaphore.php" , line : 110usize , placeholders : & [] , exception : Some ("Amp\\Sync\\SyncException") , regex : "^Failed to open the semaphore\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/PosixSemaphore.php" , line : 123usize , placeholders : & [] , exception : Some ("Amp\\Sync\\SyncException") , regex : "^A semaphore with that ID already exists$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/PosixSemaphore.php" , line : 128usize , placeholders : & [] , exception : Some ("Amp\\Sync\\SyncException") , regex : "^Failed to create the semaphore\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/PosixSemaphore.php" , line : 162usize , placeholders : & [] , exception : Some ("Amp\\Sync\\SyncException") , regex : "^Failed to change the semaphore permissions\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/PosixSemaphore.php" , line : 188usize , placeholders : & ["\\sprintf('Failed to acquire a lock; errno: %d', $errno)"] , exception : Some ("Amp\\Sync\\SyncException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/PosixSemaphore.php" , line : 232usize , placeholders : & [] , exception : Some ("Amp\\Sync\\SyncException") , regex : "^The semaphore size is larger than the system allows\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/PosixSemaphore.php" , line : 235usize , placeholders : & [] , exception : Some ("Amp\\Sync\\SyncException") , regex : "^Failed to release the lock\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/FileMutex.php" , line : 80usize , placeholders : & [] , exception : Some ("Amp\\Sync\\SyncException") , regex : "^Failed to unlock the mutex file\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/Barrier.php" , line : 37usize , placeholders : & ["$count"] , exception : Some ("Error") , regex : "^Count must be positive, got (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/Barrier.php" , line : 52usize , placeholders : & ["$count"] , exception : Some ("Error") , regex : "^Count must be at least 1, got (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/Barrier.php" , line : 56usize , placeholders : & ["$count" , "$this->count"] , exception : Some ("Error") , regex : "^Count cannot be greater than remaining count: (.*) > (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/Barrier.php" , line : 69usize , placeholders : & ["$count"] , exception : Some ("Error") , regex : "^Count must be at least 1, got (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/Barrier.php" , line : 73usize , placeholders : & [] , exception : Some ("Error") , regex : "^Can't increase count, because the barrier already broke$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/ThreadedSemaphore.php" , line : 30usize , placeholders : & [] , exception : Some ("Error") , regex : "^The number of locks should be a positive integer$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/sync/src/ConcurrentIterator/functions.php" , line : 137usize , placeholders : & ["__NAMESPACE__" , "\\gettype($keep)"] , exception : Some ("TypeError") , regex : "^(.*)\\\\filter's callable must resolve to a boolean value, got (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parser/src/Parser.php" , line : 69usize , placeholders : & [] , exception : Some ("Error") , regex : "^The parser is no longer writable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parser/src/Parser.php" , line : 142usize , placeholders : & ["$this->generator"] , exception : Some ("Amp\\Parser\\InvalidDelimiterError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Internal/Windows/SocketConnector.php" , line : 42usize , placeholders : & ["$errNo" , "$errStr"] , exception : Some ("Error") , regex : "^Failed to create TCP server socket for process wrapper: (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Internal/Windows/SocketConnector.php" , line : 46usize , placeholders : & [] , exception : Some ("Error") , regex : "^Failed to set server socket to non\\-blocking mode$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Internal/Windows/SocketConnector.php" , line : 335usize , placeholders : & [] , exception : Some ("Error") , regex : "^Failed to set client socket to non\\-blocking mode$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Internal/Windows/Runner.php" , line : 82usize , placeholders : & [] , exception : Some ("Amp\\Process\\ProcessException") , regex : "^Can't execute commands that contain null bytes\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Internal/Windows/Runner.php" , line : 102usize , placeholders : & ["$message"] , exception : Some ("Amp\\Process\\ProcessException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Internal/Windows/Runner.php" , line : 109usize , placeholders : & [] , exception : Some ("Amp\\Process\\ProcessException") , regex : "^Could not get process status$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Internal/Windows/Runner.php" , line : 122usize , placeholders : & [] , exception : Some ("Amp\\Process\\ProcessException") , regex : "^Could not send security tokens / command to process wrapper$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Internal/Windows/Runner.php" , line : 192usize , placeholders : & [] , exception : Some ("Amp\\Process\\ProcessException") , regex : "^Signals are not supported on Windows$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Internal/Posix/Runner.php" , line : 97usize , placeholders : & ["$message"] , exception : Some ("Amp\\Process\\ProcessException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Internal/Posix/Runner.php" , line : 104usize , placeholders : & [] , exception : Some ("Amp\\Process\\ProcessException") , regex : "^Could not get process status$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Internal/Posix/Runner.php" , line : 146usize , placeholders : & [] , exception : Some ("Amp\\Process\\ProcessException") , regex : "^Unable to list open file descriptors$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Internal/Posix/Runner.php" , line : 188usize , placeholders : & [] , exception : Some ("Amp\\Process\\ProcessException") , regex : "^Terminating process failed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Process.php" , line : 57usize , placeholders : & [] , exception : Some ("Error") , regex : "^\\$env cannot accept array values$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Process.php" , line : 91usize , placeholders : & [] , exception : Some ("Error") , regex : "^Cloning is not allowed!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Process.php" , line : 104usize , placeholders : & [] , exception : Some ("Amp\\Process\\StatusError") , regex : "^Process has already been started\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Process.php" , line : 123usize , placeholders : & [] , exception : Some ("Amp\\Process\\StatusError") , regex : "^Process has not been started\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Process.php" , line : 138usize , placeholders : & [] , exception : Some ("Amp\\Process\\StatusError") , regex : "^Process is not running\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Process.php" , line : 155usize , placeholders : & [] , exception : Some ("Amp\\Process\\StatusError") , regex : "^Process is not running\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Process.php" , line : 171usize , placeholders : & [] , exception : Some ("Amp\\Process\\StatusError") , regex : "^Process has not been started or has not completed starting\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Process.php" , line : 239usize , placeholders : & [] , exception : Some ("Amp\\Process\\StatusError") , regex : "^Process has not been started or has not completed starting\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Process.php" , line : 253usize , placeholders : & [] , exception : Some ("Amp\\Process\\StatusError") , regex : "^Process has not been started or has not completed starting\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/Process.php" , line : 267usize , placeholders : & [] , exception : Some ("Amp\\Process\\StatusError") , regex : "^Process has not been started or has not completed starting\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/ProcessOutputStream.php" , line : 71usize , placeholders : & [] , exception : Some ("Amp\\ByteStream\\ClosedException") , regex : "^Stream has already been closed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/process/lib/ProcessOutputStream.php" , line : 92usize , placeholders : & [] , exception : Some ("Amp\\ByteStream\\ClosedException") , regex : "^Stream has already been closed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/serialization/src/NativeSerializer.php" , line : 23usize , placeholders : & ["\\sprintf('The given data could not be serialized: %s', $exception->getMessage())"] , exception : Some ("Amp\\Serialization\\SerializationException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/serialization/src/NativeSerializer.php" , line : 37usize , placeholders : & ["encodeUnprintableChars($data)"] , exception : Some ("Amp\\Serialization\\SerializationException") , regex : "^Invalid data provided to unserialize: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/serialization/src/NativeSerializer.php" , line : 42usize , placeholders : & [] , exception : Some ("Amp\\Serialization\\SerializationException") , regex : "^Exception thrown when unserializing data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/serialization/src/PassthroughSerializer.php" , line : 10usize , placeholders : & [] , exception : Some ("Amp\\Serialization\\SerializationException") , regex : "^Serializer implementation only allows strings$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/serialization/src/CompressingSerializer.php" , line : 28usize , placeholders : & ["($error['message'] ?? 'unknown error')"] , exception : Some ("Amp\\Serialization\\SerializationException") , regex : "^Could not compress data: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/serialization/src/CompressingSerializer.php" , line : 46usize , placeholders : & ["($error['message'] ?? 'unknown error')"] , exception : Some ("Amp\\Serialization\\SerializationException") , regex : "^Could not decompress data: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/serialization/src/JsonSerializer.php" , line : 69usize , placeholders : & ["\\json_last_error_msg()"] , exception : Some ("Amp\\Serialization\\SerializationException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/serialization/src/JsonSerializer.php" , line : 82usize , placeholders : & ["\\json_last_error_msg()"] , exception : Some ("Amp\\Serialization\\SerializationException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/EvDriver.php" , line : 73usize , placeholders : & ["$exception"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/EvDriver.php" , line : 110usize , placeholders : & ["$exception"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/EvDriver.php" , line : 138usize , placeholders : & ["$exception"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/EvDriver.php" , line : 288usize , placeholders : & [] , exception : Some ("Error") , regex : "^Unknown watcher type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/NativeDriver.php" , line : 79usize , placeholders : & ["$message"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/NativeDriver.php" , line : 91usize , placeholders : & [] , exception : Some ("Amp\\Loop\\UnsupportedFeatureException") , regex : "^Signal handling requires the pcntl extension$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/NativeDriver.php" , line : 156usize , placeholders : & ["$exception"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/NativeDriver.php" , line : 205usize , placeholders : & ["$message"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/NativeDriver.php" , line : 214usize , placeholders : & [] , exception : Some ("Error") , regex : "^Unknown watcher type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/NativeDriver.php" , line : 264usize , placeholders : & [] , exception : Some ("Error") , regex : "^Unknown watcher type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/NativeDriver.php" , line : 311usize , placeholders : & ["new \\Exception('Unknown error during stream_select')"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/NativeDriver.php" , line : 341usize , placeholders : & ["$exception"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/NativeDriver.php" , line : 380usize , placeholders : & ["$exception"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/NativeDriver.php" , line : 441usize , placeholders : & ["$exception"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/EventDriver.php" , line : 81usize , placeholders : & ["$exception"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/EventDriver.php" , line : 116usize , placeholders : & ["$exception"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/EventDriver.php" , line : 143usize , placeholders : & ["$exception"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/EventDriver.php" , line : 326usize , placeholders : & [] , exception : Some ("Error") , regex : "^Unknown watcher type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/DriverFactory.php" , line : 56usize , placeholders : & ["\\sprintf(\n                \"Driver '%s' does not exist.\",\n                $driver\n            )"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/DriverFactory.php" , line : 63usize , placeholders : & ["\\sprintf(\n                \"Driver '%s' is not a subclass of '%s'.\",\n                $driver,\n                Driver::class\n            )"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/TracingDriver.php" , line : 107usize , placeholders : & ["$watcherId"] , exception : Some ("Amp\\Loop\\InvalidWatcherError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/TracingDriver.php" , line : 137usize , placeholders : & ["$watcherId"] , exception : Some ("Amp\\Loop\\InvalidWatcherError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/TracingDriver.php" , line : 195usize , placeholders : & ["$exception"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/Driver.php" , line : 133usize , placeholders : & ["$exception"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/Driver.php" , line : 221usize , placeholders : & [] , exception : Some ("Error") , regex : "^Delay must be greater than or equal to zero$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/Driver.php" , line : 258usize , placeholders : & [] , exception : Some ("Error") , regex : "^Interval must be greater than or equal to zero$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/Driver.php" , line : 397usize , placeholders : & ["$watcherId"] , exception : Some ("Amp\\Loop\\InvalidWatcherError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/Driver.php" , line : 516usize , placeholders : & ["$watcherId"] , exception : Some ("Amp\\Loop\\InvalidWatcherError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/Driver.php" , line : 714usize , placeholders : & [] , exception : Some ("Error") , regex : "^Unknown watcher type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/UvDriver.php" , line : 84usize , placeholders : & ["$exception"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/UvDriver.php" , line : 122usize , placeholders : & ["$exception"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/UvDriver.php" , line : 150usize , placeholders : & ["$exception"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/UvDriver.php" , line : 295usize , placeholders : & [] , exception : Some ("Error") , regex : "^Unknown watcher type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop/UvDriver.php" , line : 346usize , placeholders : & [] , exception : Some ("Error") , regex : "^Unknown watcher type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop.php" , line : 47usize , placeholders : & [] , exception : Some ("Error") , regex : "^Can't activate watcher during garbage collection\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Loop.php" , line : 55usize , placeholders : & [] , exception : Some ("Error") , regex : "^Can't dispatch during garbage collection\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Struct.php" , line : 26usize , placeholders : & ["$this->generateStructPropertyError($property)"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Struct.php" , line : 39usize , placeholders : & ["$this->generateStructPropertyError($property)"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/functions.php" , line : 231usize , placeholders : & [] , exception : Some ("Error") , regex : "^Loop exceptionally stopped without resolving the promise$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/functions.php" , line : 235usize , placeholders : & [] , exception : Some ("Error") , regex : "^Loop stopped without resolving the promise$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/functions.php" , line : 333usize , placeholders : & [] , exception : Some ("Error") , regex : "^Object must be provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/functions.php" , line : 343usize , placeholders : & [] , exception : Some ("Error") , regex : "^Object must have a 'then' or 'done' method$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/functions.php" , line : 443usize , placeholders : & [] , exception : Some ("Error") , regex : "^No promises provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/functions.php" , line : 500usize , placeholders : & [] , exception : Some ("Error") , regex : "^Number of promises required must be non\\-negative$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/functions.php" , line : 506usize , placeholders : & [] , exception : Some ("Error") , regex : "^Too few promises provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Success.php" , line : 29usize , placeholders : & [] , exception : Some ("Error") , regex : "^Cannot use a promise as success value$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Internal/Placeholder.php" , line : 114usize , placeholders : & ["$message"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Internal/Producer.php" , line : 51usize , placeholders : & [] , exception : Some ("Error") , regex : "^The prior promise returned must resolve before invoking this method again$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Internal/Producer.php" , line : 84usize , placeholders : & [] , exception : Some ("Error") , regex : "^The iterator has completed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Internal/Producer.php" , line : 88usize , placeholders : & [] , exception : Some ("Error") , regex : "^Promise returned from advance\\(\\) must resolve before calling this method$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Internal/Producer.php" , line : 107usize , placeholders : & [] , exception : Some ("Error") , regex : "^Iterators cannot emit values after calling complete$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Internal/Producer.php" , line : 174usize , placeholders : & ["$message"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/amp/lib/Producer.php" , line : 26usize , placeholders : & [] , exception : Some ("Error") , regex : "^The callable did not return a Generator$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/TaskWorker.php" , line : 40usize , placeholders : & [] , exception : Some ("Error") , regex : "^The context was already running$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/TaskWorker.php" , line : 93usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\StatusError") , regex : "^The worker has been shut down$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/TaskWorker.php" , line : 106usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Worker\\WorkerException") , regex : "^The worker was shutdown$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/TaskWorker.php" , line : 111usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Worker\\WorkerException") , regex : "^The worker crashed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/TaskWorker.php" , line : 128usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Worker\\WorkerException") , regex : "^The worker failed unexpectedly$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/TaskWorker.php" , line : 131usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Worker\\WorkerException") , regex : "^The worker exited unexpectedly$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/TaskWorker.php" , line : 136usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Worker\\WorkerException") , regex : "^Context did not return a task result$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/TaskWorker.php" , line : 141usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Worker\\WorkerException") , regex : "^Task results returned out of order$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/TaskWorker.php" , line : 181usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Worker\\WorkerException") , regex : "^Failed to gracefully shutdown worker$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/Internal/worker-process.php" , line : 16usize , placeholders : & ["\\sprintf(\"No file found at bootstrap file path given '%s'\", $argv[2])"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/Internal/worker-process.php" , line : 26usize , placeholders : & [] , exception : Some ("Error") , regex : "^No environment class name provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/Internal/worker-process.php" , line : 32usize , placeholders : & ["\\sprintf(\"Invalid environment class name '%s'\", $className)"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/Internal/worker-process.php" , line : 36usize , placeholders : & ["\\sprintf(\n            \"The class '%s' does not implement '%s'\",\n            $className,\n            Worker\\Environment::class\n        )"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/Internal/Job.php" , line : 33usize , placeholders : & ["\\sprintf(\"Classes implementing %s must be autoloadable by the Composer autoloader\", Task::class)"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/BasicEnvironment.php" , line : 117usize , placeholders : & [] , exception : Some ("Error") , regex : "^The time\\-to\\-live must be a positive integer or null$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/WorkerThread.php" , line : 26usize , placeholders : & ["\\sprintf(\"No file found at bootstrap file path given '%s'\", $bootstrapPath)"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/WorkerThread.php" , line : 36usize , placeholders : & ["\\sprintf(\"Invalid environment class name '%s'\", $className)"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/WorkerThread.php" , line : 40usize , placeholders : & ["\\sprintf(\"The class '%s' does not implement '%s'\", $className, Environment::class)"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/BootstrapWorkerFactory.php" , line : 29usize , placeholders : & ["\\sprintf(\"No file found at autoload path given '%s'\", $bootstrapFilePath)"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/BootstrapWorkerFactory.php" , line : 33usize , placeholders : & ["\\sprintf(\"Invalid environment class name '%s'\", $envClassName)"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/BootstrapWorkerFactory.php" , line : 37usize , placeholders : & ["\\sprintf(\n                \"The class '%s' does not implement '%s'\",\n                $envClassName,\n                Environment::class\n            )"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/CallableTask.php" , line : 29usize , placeholders : & [] , exception : Some ("Error") , regex : "^When using a class instance as a callable, the class must be autoloadable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/CallableTask.php" , line : 33usize , placeholders : & [] , exception : Some ("Error") , regex : "^When using a class instance method as a callable, the class must be autoloadable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/CallableTask.php" , line : 42usize , placeholders : & ["$message"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/DefaultPool.php" , line : 55usize , placeholders : & [] , exception : Some ("Error") , regex : "^Maximum size must be a non\\-negative integer$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/DefaultPool.php" , line : 217usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\StatusError") , regex : "^The pool was shutdown$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/DefaultPool.php" , line : 229usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Worker\\WorkerException") , regex : "^Worker factory did not create a viable worker$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/DefaultWorkerFactory.php" , line : 25usize , placeholders : & ["\\sprintf(\"Invalid environment class name '%s'\", $envClassName)"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Worker/DefaultWorkerFactory.php" , line : 29usize , placeholders : & ["\\sprintf(\n                \"The class '%s' does not implement '%s'\",\n                $envClassName,\n                Environment::class\n            )"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Sync/ChannelledStream.php" , line : 55usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Sync\\ChannelException") , regex : "^Sending on the channel failed\\. Did the context die\\?$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Sync/ChannelledStream.php" , line : 70usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Sync\\ChannelException") , regex : "^Reading from the channel failed\\. Did the context die\\?$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Sync/ChannelledStream.php" , line : 74usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Sync\\ChannelException") , regex : "^The channel closed unexpectedly\\. Did the context die\\?$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Sync/SharedMemoryParcel.php" , line : 112usize , placeholders : & ["__CLASS__"] , exception : Some ("Error") , regex : "^(.*) requires the shmop extension$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Sync/SharedMemoryParcel.php" , line : 132usize , placeholders : & [] , exception : Some ("Error") , regex : "^The memory size must be greater than 0$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Sync/SharedMemoryParcel.php" , line : 136usize , placeholders : & [] , exception : Some ("Error") , regex : "^Invalid permissions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Sync/SharedMemoryParcel.php" , line : 200usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Sync\\SharedMemoryException") , regex : "^The object has already been freed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Sync/SharedMemoryParcel.php" , line : 207usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Sync\\SharedMemoryException") , regex : "^Shared object memory is corrupt$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Sync/SharedMemoryParcel.php" , line : 226usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Sync\\SharedMemoryException") , regex : "^The object has already been freed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Sync/SharedMemoryParcel.php" , line : 319usize , placeholders : & [] , exception : Some ("Error") , regex : "^A shared memory parcel cannot be serialized!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Sync/SharedMemoryParcel.php" , line : 390usize , placeholders : & ["($error['message'] ?? 'unknown error')"] , exception : Some ("Amp\\Parallel\\Sync\\SharedMemoryException") , regex : "^Failed to create shared memory block: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Sync/SharedMemoryParcel.php" , line : 412usize , placeholders : & ["($error['message'] ?? 'unknown error')"] , exception : Some ("Amp\\Parallel\\Sync\\SharedMemoryException") , regex : "^Failed to read from shared memory block: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Sync/SharedMemoryParcel.php" , line : 431usize , placeholders : & ["($error['message'] ?? 'unknown error')"] , exception : Some ("Amp\\Parallel\\Sync\\SharedMemoryException") , regex : "^Failed to write to shared memory block: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Sync/SharedMemoryParcel.php" , line : 446usize , placeholders : & ["($error['message'] ?? 'unknown error')"] , exception : Some ("Amp\\Parallel\\Sync\\SharedMemoryException") , regex : "^Failed to discard shared memory block(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Sync/ChannelParser.php" , line : 57usize , placeholders : & ["encodeUnprintableChars($data)"] , exception : Some ("Amp\\Parallel\\Sync\\ChannelException") , regex : "^Invalid packet received: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Internal/ProcessHub.php" , line : 63usize , placeholders : & ["\\sprintf(\"Could not create IPC server: (Errno: %d) %s\", $errno, $errstr)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Internal/ProcessHub.php" , line : 141usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\ContextException") , regex : "^Starting the process timed out$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Internal/process-runner.php" , line : 87usize , placeholders : & [] , exception : Some ("Error") , regex : "^No script path given$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Internal/process-runner.php" , line : 91usize , placeholders : & ["\\sprintf(\"No script found at '%s' (be sure to provide the full path to the script)\", $argv[0])"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Internal/process-runner.php" , line : 100usize , placeholders : & ["\\sprintf(\"Script '%s' did not return a callable function\", $argv[0])"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Internal/process-runner.php" , line : 102usize , placeholders : & ["\\sprintf(\"Script '%s' contains a parse error: \" . $exception->getMessage(), $argv[0])"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Internal/Thread.php" , line : 85usize , placeholders : & [] , exception : Some ("Error") , regex : "^Could not locate autoload\\.php$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Parallel.php" , line : 92usize , placeholders : & [] , exception : Some ("Error") , regex : "^The parallel extension is required to create parallel threads\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Parallel.php" , line : 122usize , placeholders : & [] , exception : Some ("Error") , regex : "^Could not locate autoload\\.php$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Parallel.php" , line : 173usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\StatusError") , regex : "^The thread has already been started\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Parallel.php" , line : 210usize , placeholders : & ["\\sprintf(\"No script found at '%s' (be sure to provide the full path to the script)\", $path)"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Parallel.php" , line : 221usize , placeholders : & ["\\sprintf(\"Script '%s' did not return a callable function\", $path)"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Parallel.php" , line : 223usize , placeholders : & ["\\sprintf(\"Script '%s' contains a parse error\", $path)"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Parallel.php" , line : 262usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\ContextException") , regex : "^Starting the parallel runtime failed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Parallel.php" , line : 318usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\StatusError") , regex : "^The thread has not been started or has already finished\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Parallel.php" , line : 327usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\ContextException") , regex : "^Failed to receive result from thread$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Parallel.php" , line : 332usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Sync\\SynchronizationError") , regex : "^Did not receive an exit result from thread\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Parallel.php" , line : 345usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\StatusError") , regex : "^The thread has not been started\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Parallel.php" , line : 352usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\ContextException") , regex : "^The thread stopped responding, potentially due to a fatal error or calling exit$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Parallel.php" , line : 357usize , placeholders : & ["\\sprintf(\n                    'Thread unexpectedly exited with result of type: %s',\n                    \\is_object($data) ? \\get_class($data) : \\gettype($data)\n                )"] , exception : Some ("Amp\\Parallel\\Sync\\SynchronizationError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Parallel.php" , line : 373usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\StatusError") , regex : "^The thread has not been started or has already finished\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Parallel.php" , line : 377usize , placeholders : & [] , exception : Some ("Error") , regex : "^Cannot send exit result objects\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Parallel.php" , line : 385usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\ContextException") , regex : "^The thread stopped responding, potentially due to a fatal error or calling exit$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Parallel.php" , line : 392usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\ContextException") , regex : "^The thread stopped responding, potentially due to a fatal error or calling exit$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Parallel.php" , line : 395usize , placeholders : & ["\\sprintf(\n                    'Thread unexpectedly exited with result of type: %s',\n                    \\is_object($data) ? \\get_class($data) : \\gettype($data)\n                )"] , exception : Some ("Amp\\Parallel\\Sync\\SynchronizationError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Parallel.php" , line : 413usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\StatusError") , regex : "^The thread has not been started$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Thread.php" , line : 94usize , placeholders : & [] , exception : Some ("Error") , regex : "^The pthreads extension is required to create threads\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Thread.php" , line : 146usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\StatusError") , regex : "^The thread has already been started\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Thread.php" , line : 200usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\ContextException") , regex : "^Could not kill thread\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Thread.php" , line : 234usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\StatusError") , regex : "^The thread has not been started or has already finished\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Thread.php" , line : 244usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\ContextException") , regex : "^Failed to receive result from thread$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Thread.php" , line : 252usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Sync\\SynchronizationError") , regex : "^Did not receive an exit result from thread\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Thread.php" , line : 265usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\StatusError") , regex : "^The process has not been started\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Thread.php" , line : 279usize , placeholders : & ["\\sprintf(\n                    'Thread process unexpectedly exited with result of type: %s',\n                    \\is_object($data) ? \\get_class($data) : \\gettype($data)\n                )"] , exception : Some ("Amp\\Parallel\\Sync\\SynchronizationError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Thread.php" , line : 295usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\StatusError") , regex : "^The thread has not been started or has already finished\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Thread.php" , line : 299usize , placeholders : & [] , exception : Some ("Error") , regex : "^Cannot send exit result objects\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Thread.php" , line : 325usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\StatusError") , regex : "^The thread has not been started$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Process.php" , line : 94usize , placeholders : & ["\\sprintf(\"The PHP binary path '%s' was not found or is not executable\", $binary)"] , exception : Some ("Error") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Process.php" , line : 167usize , placeholders : & [] , exception : Some ("Error") , regex : "^Could not locate PHP executable binary$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Process.php" , line : 206usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\ContextException") , regex : "^Starting the process failed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Process.php" , line : 225usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\StatusError") , regex : "^The process has not been started$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Process.php" , line : 232usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\ContextException") , regex : "^The process stopped responding, potentially due to a fatal error or calling exit$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Process.php" , line : 237usize , placeholders : & ["\\sprintf(\n                    'Process unexpectedly exited with result of type: %s',\n                    \\is_object($data) ? \\get_class($data) : \\gettype($data)\n                )"] , exception : Some ("Amp\\Parallel\\Sync\\SynchronizationError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Process.php" , line : 253usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\StatusError") , regex : "^The process has not been started$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Process.php" , line : 257usize , placeholders : & [] , exception : Some ("Error") , regex : "^Cannot send exit result objects$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Process.php" , line : 265usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\ContextException") , regex : "^The process stopped responding, potentially due to a fatal error or calling exit$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Process.php" , line : 274usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\ContextException") , regex : "^The process stopped responding, potentially due to a fatal error or calling exit$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Process.php" , line : 277usize , placeholders : & ["\\sprintf(\n                    'Process unexpectedly exited with result of type: %s',\n                    \\is_object($data) ? \\get_class($data) : \\gettype($data)\n                )"] , exception : Some ("Amp\\Parallel\\Sync\\SynchronizationError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Process.php" , line : 291usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\StatusError") , regex : "^The process has not been started$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Process.php" , line : 301usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Context\\ContextException") , regex : "^Failed to receive result from process$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Process.php" , line : 308usize , placeholders : & [] , exception : Some ("Amp\\Parallel\\Sync\\SynchronizationError") , regex : "^Did not receive an exit result from process$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/amphp/parallel/lib/Context/Process.php" , line : 315usize , placeholders : & ["\\sprintf(\"Process exited with code %d\", $code)"] , exception : Some ("Amp\\Parallel\\Context\\ContextException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/symfony/polyfill-mbstring/Mbstring.php" , line : 367usize , placeholders : & ["sprintf('Argument #1 ($encoding) must be a valid encoding, \"%s\" given', $encoding)"] , exception : Some ("ValueError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/symfony/polyfill-mbstring/Mbstring.php" , line : 388usize , placeholders : & ["sprintf('Argument #1 ($language) must be a valid language, \"%s\" given', $lang)"] , exception : Some ("ValueError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/symfony/polyfill-mbstring/Mbstring.php" , line : 557usize , placeholders : & [] , exception : Some ("ValueError") , regex : "^Argument \\#2 \\(\\$length\\) must be greater than 0$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/symfony/polyfill-mbstring/Mbstring.php" , line : 610usize , placeholders : & [] , exception : Some ("ValueError") , regex : "^Argument \\#1 \\(\\$substitute_character\\) must be \"none\", \"long\", \"entity\" or a valid codepoint$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/symfony/polyfill-php80/Php80.php" , line : 63usize , placeholders : & ["sprintf('Argument 1 passed to get_resource_id() must be of the type resource, %s given', get_debug_type($res))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/LoggerTrait.php" , line : 25usize , placeholders : & ["LogLevel::EMERGENCY"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/LoggerTrait.php" , line : 41usize , placeholders : & ["LogLevel::ALERT"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/LoggerTrait.php" , line : 56usize , placeholders : & ["LogLevel::CRITICAL"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/LoggerTrait.php" , line : 70usize , placeholders : & ["LogLevel::ERROR"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/LoggerTrait.php" , line : 86usize , placeholders : & ["LogLevel::WARNING"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/LoggerTrait.php" , line : 99usize , placeholders : & ["LogLevel::NOTICE"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/LoggerTrait.php" , line : 114usize , placeholders : & ["LogLevel::INFO"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/LoggerTrait.php" , line : 127usize , placeholders : & ["LogLevel::DEBUG"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/AbstractLogger.php" , line : 24usize , placeholders : & ["LogLevel::EMERGENCY"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/AbstractLogger.php" , line : 40usize , placeholders : & ["LogLevel::ALERT"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/AbstractLogger.php" , line : 55usize , placeholders : & ["LogLevel::CRITICAL"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/AbstractLogger.php" , line : 69usize , placeholders : & ["LogLevel::ERROR"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/AbstractLogger.php" , line : 85usize , placeholders : & ["LogLevel::WARNING"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/AbstractLogger.php" , line : 98usize , placeholders : & ["LogLevel::NOTICE"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/AbstractLogger.php" , line : 113usize , placeholders : & ["LogLevel::INFO"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/AbstractLogger.php" , line : 126usize , placeholders : & ["LogLevel::DEBUG"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php" , line : 45usize , placeholders : & ["$level"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php" , line : 74usize , placeholders : & [] , exception : None , regex : "^invalid level$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php" , line : 80usize , placeholders : & ["{nothing}" , "{user}"] , exception : None , regex : "^\\{Message (.*) (.*)\\{Message \\{nothing\\} \\{user\\} \\{foo\\.bar\\} a\\}$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php" , line : 97usize , placeholders : & ["$dummy"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php" , line : 120usize , placeholders : & [] , exception : None , regex : "^Crazy context data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php" , line : 129usize , placeholders : & [] , exception : None , regex : "^Random message$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php" , line : 130usize , placeholders : & [] , exception : None , regex : "^Uncaught Exception!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/psr/log/Psr/Log/Test/TestLogger.php" , line : 139usize , placeholders : & ["get_class($this)" , "$method"] , exception : Some ("BadMethodCallException") , regex : "^Call to undefined method (.*)::(.*)\\(\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/vendor/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/suspicious_login/lib/Listener/LoginMailListener.php" , line : 68usize , placeholders : & ["$uid"] , exception : None , regex : "^not sending suspicious login email because user <(.*)> does not exist \\(anymore\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/lib/Listener/LoginMailListener.php" , line : 72usize , placeholders : & ["$uid"] , exception : None , regex : "^not sending a suspicous login email because user <(.*)> has no email set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/apps/suspicious_login/lib/Listener/LoginNotificationListener.php" , line : 69usize , placeholders : & [] , exception : None , regex : "^could not send notification about a suspicious login$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/lib/Notifications/Notifier.php" , line : 70usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/lib/Notifications/Notifier.php" , line : 84usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/lib/Notifications/Notifier.php" , line : 112usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/suspicious_login/lib/Service/ETLService.php" , line : 76usize , placeholders : & ["$cnt"] , exception : None , regex : "^(.*) rows read for ETL$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/suspicious_login/lib/Service/ETLService.php" , line : 88usize , placeholders : & [] , exception : None , regex : "^starting login data ETL process$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/suspicious_login/lib/Service/ETLService.php" , line : 147usize , placeholders : & [] , exception : None , regex : "^finished login data ETL process, sending transaction commit$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/suspicious_login/lib/Service/ETLService.php" , line : 149usize , placeholders : & [] , exception : None , regex : "^ETL finished$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/suspicious_login/lib/Service/EstimatorService.php" , line : 58usize , placeholders : & [] , exception : None , regex : "^loading latest model$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/suspicious_login/lib/Service/EstimatorService.php" , line : 62usize , placeholders : & ["$modelId"] , exception : None , regex : "^loading model (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/lib/Service/EstimatorService.php" , line : 67usize , placeholders : & ["$modelId" , "$uid" , "$ip" , "$e->getMessage()"] , exception : Some ("OCA\\SuspiciousLogin\\Exception\\ServiceException") , regex : "^Could not load model (.*) to classify UID (.*) and IP (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/lib/Service/IpV6Strategy.php" , line : 56usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid IPv6 address$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/suspicious_login/lib/Service/LoginClassifier.php" , line : 106usize , placeholders : & [] , exception : None , regex : "^App password detected\\. No address classification is performed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/suspicious_login/lib/Service/LoginClassifier.php" , line : 112usize , placeholders : & ["$ip" , "$uid"] , exception : None , regex : "^Ip (.*) for user (.*) is not suspicious$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/suspicious_login/lib/Service/LoginClassifier.php" , line : 117usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^Could not predict suspiciousness: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/suspicious_login/lib/Service/LoginClassifier.php" , line : 122usize , placeholders : & ["$uid" , "$ip" , "$strategy::getTypeName()"] , exception : None , regex : "^Detected a login from a suspicious login\\. user=(.*) ip=(.*) strategy=(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/apps/suspicious_login/lib/Service/LoginClassifier.php" , line : 145usize , placeholders : & [] , exception : None , regex : "^could not save the details of a suspicious login$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/suspicious_login/lib/Service/LoginClassifier.php" , line : 163usize , placeholders : & ["$uid" , "$ip"] , exception : None , regex : "^Notification for (.*):(.*) already sent, waiting until the next training period$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/suspicious_login/lib/Service/LoginClassifier.php" , line : 171usize , placeholders : & ["$uid" , "$lastTwoDays"] , exception : None , regex : "^Suspicious login peak detected: (.*) received (.*) alerts in the last two days$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/apps/suspicious_login/lib/Service/LoginClassifier.php" , line : 179usize , placeholders : & ["$uid" , "$lastHour"] , exception : None , regex : "^Suspicious login peak detected: (.*) received (.*) alerts in the last hour$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/lib/Service/DataLoader.php" , line : 68usize , placeholders : & [] , exception : Some ("OCA\\SuspiciousLogin\\Exception\\InsufficientDataException") , regex : "^Not enough data for the specified maximum age$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/lib/Service/DataLoader.php" , line : 76usize , placeholders : & [] , exception : Some ("OCA\\SuspiciousLogin\\Exception\\InsufficientDataException") , regex : "^No historic data available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/lib/Service/DataLoader.php" , line : 79usize , placeholders : & [] , exception : Some ("OCA\\SuspiciousLogin\\Exception\\InsufficientDataException") , regex : "^No recent data available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/suspicious_login/lib/Service/ModelStore.php" , line : 92usize , placeholders : & [] , exception : None , regex : "^No models found\\. Can't load latest$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/lib/Service/ModelStore.php" , line : 93usize , placeholders : & [] , exception : Some ("OCA\\SuspiciousLogin\\Exception\\ServiceException") , regex : "^No models found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/suspicious_login/lib/Service/ModelStore.php" , line : 124usize , placeholders : & ["$id"] , exception : None , regex : "^using cached model (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/suspicious_login/lib/Service/ModelStore.php" , line : 128usize , placeholders : & ["$id"] , exception : None , regex : "^loading model (.*) from app data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/suspicious_login/lib/Service/ModelStore.php" , line : 134usize , placeholders : & ["$id" , "$e->getMessage()"] , exception : None , regex : "^Could not load classifier model (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/lib/Service/ModelStore.php" , line : 135usize , placeholders : & ["$id"] , exception : Some ("OCA\\SuspiciousLogin\\Exception\\ServiceException") , regex : "^Could not load model (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/suspicious_login/lib/Service/ModelStore.php" , line : 143usize , placeholders : & ["strlen($serialized)"] , exception : None , regex : "^seralized model size: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/suspicious_login/lib/Service/ModelStore.php" , line : 154usize , placeholders : & ["$id" , "$e->getMessage()"] , exception : None , regex : "^Could not deserialize persisted model (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/lib/Service/ModelStore.php" , line : 160usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Deserialized object is not an estimator$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/suspicious_login/lib/Service/ModelStore.php" , line : 172usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Estimator is not persistable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/apps/suspicious_login/lib/Service/ModelStore.php" , line : 182usize , placeholders : & [] , exception : None , regex : "^App data models folder does not exist\\. Creating it$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/suspicious_login/lib/Service/ModelStore.php" , line : 197usize , placeholders : & [] , exception : None , regex : "^Could not save persisted estimator to storage, reverting$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/updatenotification/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/updatenotification/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/updatenotification/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/updatenotification/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/updatenotification/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/updatenotification/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/updatenotification/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/updatenotification/lib/BackgroundJob/AppUpdatedNotifications.php" , line : 64usize , placeholders : & ["$appId"] , exception : None , regex : "^Running background job to create app update notifications for \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/updatenotification/lib/BackgroundJob/AppUpdatedNotifications.php" , line : 72usize , placeholders : & [] , exception : None , regex : "^Skipping app updated notification \\- no changelog provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/apps/updatenotification/lib/AppInfo/Application.php" , line : 92usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/updatenotification/lib/Manager.php" , line : 61usize , placeholders : & ["$appId" , "$languageCode"] , exception : None , regex : "^No changelog file found for app (.*) and language code (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/updatenotification/lib/Manager.php" , line : 100usize , placeholders : & [] , exception : None , regex : "^Could not open changelog file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/updatenotification/lib/Manager.php" , line : 106usize , placeholders : & [] , exception : None , regex : "^No entries in changelog found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/updatenotification/lib/Manager.php" , line : 122usize , placeholders : & ["$version"] , exception : None , regex : "^No changelog entry for version (.*) found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/apps/updatenotification/lib/Listener/AppUpdateEventListener.php" , line : 71usize , placeholders : & ["$event->getAppId()"] , exception : None , regex : "^Scheduled app update notification for \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/updatenotification/lib/Notification/AppUpdateNotifier.php" , line : 71usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unknown app$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/updatenotification/lib/Notification/AppUpdateNotifier.php" , line : 75usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unknown subject$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/updatenotification/lib/Notification/AppUpdateNotifier.php" , line : 81usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^App info not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/updatenotification/lib/Notification/Notifier.php" , line : 114usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unknown app id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/updatenotification/lib/Notification/Notifier.php" , line : 118usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unknown subject$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/updatenotification/lib/Notification/Notifier.php" , line : 126usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Update checked worked again$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/apps/updatenotification/lib/Notification/Notifier.php" , line : 183usize , placeholders : & [] , exception : Some ("OCP\\Notification\\AlreadyProcessedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/index.php" , line : 51usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/index.php" , line : 63usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/index.php" , line : 67usize , placeholders : & ["$ex2->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/index.php" , line : 108usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/index.php" , line : 117usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/SpeechToText/TranscriptionJob.php" , line : 70usize , placeholders : & ["$fileId"] , exception : None , regex : "^Transcription of file (.*) failed\\. The file could not be found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/SpeechToText/TranscriptionJob.php" , line : 93usize , placeholders : & ["$fileId"] , exception : None , regex : "^Transcription of file (.*) failed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/SpeechToText/SpeechToTextManager.php" , line : 82usize , placeholders : & ["$class"] , exception : None , regex : "^Failed to load SpeechToText provider (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/SpeechToText/SpeechToTextManager.php" , line : 101usize , placeholders : & [] , exception : Some ("OCP\\PreConditionNotMetException") , regex : "^No SpeechToText providers have been registered$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/SpeechToText/SpeechToTextManager.php" , line : 111usize , placeholders : & ["$e->getMessage()"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid file provided for file transcription: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/SpeechToText/SpeechToTextManager.php" , line : 124usize , placeholders : & ["$file->getId()"] , exception : None , regex : "^Failed to cancel a Speech\\-to\\-text job for file (.*)\\. No related job was found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/SpeechToText/SpeechToTextManager.php" , line : 129usize , placeholders : & ["$e->getMessage()"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid file provided to cancel file transcription: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/SpeechToText/SpeechToTextManager.php" , line : 135usize , placeholders : & [] , exception : Some ("OCP\\PreConditionNotMetException") , regex : "^No SpeechToText providers have been registered$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/SpeechToText/SpeechToTextManager.php" , line : 161usize , placeholders : & ["$provider->getName()"] , exception : None , regex : "^SpeechToText transcription using provider (.*) failed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/SpeechToText/SpeechToTextManager.php" , line : 162usize , placeholders : & ["$provider->getName()" , "$e->getMessage()"] , exception : Some ("RuntimeException") , regex : "^SpeechToText transcription using provider \"(.*)\" failed: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/SpeechToText/SpeechToTextManager.php" , line : 166usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Could not transcribe file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Collaboration/AutoComplete/Manager.php" , line : 48usize , placeholders : & ["{id}"] , exception : None , regex : "^No sorter for ID \"(.*)No sorter for ID \"\\{id\\}\", skipping$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/lib/private/Collaboration/AutoComplete/Manager.php" , line : 65usize , placeholders : & ["{class}"] , exception : None , regex : "^Skipping sorter which is not an instance of ISorter\\. Class name: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/lib/private/Collaboration/AutoComplete/Manager.php" , line : 71usize , placeholders : & ["{class}"] , exception : None , regex : "^Skipping sorter with empty ID\\. Class name: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Collaboration/Resources/ProviderManager.php" , line : 54usize , placeholders : & ["$provider" , "$e->getMessage()"] , exception : None , regex : "^Could not query resource provider (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Collaboration/Resources/Manager.php" , line : 72usize , placeholders : & [] , exception : Some ("OCP\\Collaboration\\Resources\\CollectionException") , regex : "^Collection not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Collaboration/Resources/Manager.php" , line : 101usize , placeholders : & [] , exception : Some ("OCP\\Collaboration\\Resources\\CollectionException") , regex : "^Collection not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Collaboration/Resources/Manager.php" , line : 205usize , placeholders : & [] , exception : Some ("OCP\\Collaboration\\Resources\\ResourceException") , regex : "^Resource not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Collaboration/Resources/Manager.php" , line : 474usize , placeholders : & [] , exception : None , regex : "^\\\\OC\\\\Collaboration\\\\Resources\\\\Manager::registerResourceProvider is deprecated$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Collaboration/Resources/Collection.php" , line : 102usize , placeholders : & [] , exception : Some ("OCP\\Collaboration\\Resources\\ResourceException") , regex : "^Already part of the collection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Collaboration/Resources/Collection.php" , line : 119usize , placeholders : & [] , exception : Some ("OCP\\Collaboration\\Resources\\ResourceException") , regex : "^Already part of the collection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Collaboration/Collaborators/LookupPlugin.php" , line : 88usize , placeholders : & ["$lookup['federationId']"] , exception : None , regex : "^Can not parse federated cloud ID \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Collaboration/Collaborators/RemotePlugin.php" , line : 183usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid Federated Cloud ID$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Collaboration/Collaborators/RemoteGroupPlugin.php" , line : 88usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid Federated Cloud ID$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Collaboration/Collaborators/Search.php" , line : 107usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Provided ShareType is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Collaboration/Reference/File/FileReferenceProvider.php" , line : 113usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Collaboration/Reference/File/FileReferenceProvider.php" , line : 118usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Collaboration/Reference/File/FileReferenceProvider.php" , line : 126usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Collaboration/Reference/File/FileReferenceProvider.php" , line : 150usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Collaboration/Reference/ReferenceManager.php" , line : 195usize , placeholders : & ["$registration->getService()" , "$e->getMessage()"] , exception : None , regex : "^Could not load reference provider (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Manager.php" , line : 139usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^Actor, Object and Verb information must be provided for saving$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Manager.php" , line : 144usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^Reactions can only be a single emoji$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Manager.php" , line : 223usize , placeholders : & ["$role"] , exception : Some ("InvalidArgumentException") , regex : "^(.*) parameters must be string and not empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Manager.php" , line : 260usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^IDs must be translatable to a number in this implementation\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Manager.php" , line : 277usize , placeholders : & [] , exception : Some ("OCP\\Comments\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Manager.php" , line : 872usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Parameter must be string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Comments/Manager.php" , line : 891usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Manager.php" , line : 945usize , placeholders : & [] , exception : Some ("OCP\\Comments\\NotFoundException") , regex : "^Comment related with reaction not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Manager.php" , line : 1029usize , placeholders : & [] , exception : Some ("OCP\\PreConditionNotMetException") , regex : "^The database does not support reactions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Comments/Manager.php" , line : 1177usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Manager.php" , line : 1273usize , placeholders : & [] , exception : Some ("OCP\\Comments\\NotFoundException") , regex : "^Comment to update does ceased to exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Comments/Manager.php" , line : 1348usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Comments/Manager.php" , line : 1455usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Manager.php" , line : 1488usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^String expected\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Manager.php" , line : 1491usize , placeholders : & [] , exception : Some ("OutOfBoundsException") , regex : "^Displayname resolver for this type already registered$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Manager.php" , line : 1511usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^String expected\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Manager.php" , line : 1514usize , placeholders : & [] , exception : Some ("OutOfBoundsException") , regex : "^No Displayname resolver for this type registered$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Manager.php" , line : 1533usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given entity does not implement the ICommentsEntity interface$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Comment.php" , line : 92usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^String expected\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Comment.php" , line : 101usize , placeholders : & [] , exception : Some ("OCP\\Comments\\IllegalIDChangeException") , regex : "^Not allowed to assign a new ID to an already saved comment\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Comment.php" , line : 121usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^String expected\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Comment.php" , line : 145usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^String expected\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Comment.php" , line : 168usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Integer expected\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Comment.php" , line : 192usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^String expected\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Comment.php" , line : 196usize , placeholders : & ["$maxLength"] , exception : Some ("OCP\\Comments\\MessageTooLongException") , regex : "^Comment message must not exceed (.*) characters$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Comment.php" , line : 272usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Non\\-empty String expected\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Comment.php" , line : 306usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^String expected\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Comment.php" , line : 322usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Cannot get creation date before setting one or writting to database$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Comment.php" , line : 380usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^String expected\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Comments/Comment.php" , line : 407usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Non empty string expected\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/CapabilitiesManager.php" , line : 61usize , placeholders : & [] , exception : None , regex : "^CapabilitiesManager$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/CapabilitiesManager.php" , line : 77usize , placeholders : & ["get_class($c)"] , exception : Some ("InvalidArgumentException") , regex : "^The given Capability \\((.*)\\) does not implement the ICapability interface$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Search.php" , line : 69usize , placeholders : & [] , exception : None , regex : "^Ignoring Unknown search provider$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/DateTimeZone.php" , line : 68usize , placeholders : & ["$timeZone"] , exception : None , regex : "^Failed to created DateTimeZone \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/DateTimeZone.php" , line : 113usize , placeholders : & ["$offset"] , exception : None , regex : "^Failed to find DateTimeZone for offset \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Dashboard/Manager.php" , line : 55usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Dashboard widget with this id has already been registered$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/lib/private/Dashboard/Manager.php" , line : 84usize , placeholders : & ["$service['class']"] , exception : None , regex : "^Could not load lazy dashboard widget: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/lib/private/Dashboard/Manager.php" , line : 105usize , placeholders : & ["$service['class']"] , exception : None , regex : "^Could not register lazy dashboard widget: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Dashboard/Manager.php" , line : 118usize , placeholders : & ["{widget}" , "{duration}"] , exception : None , regex : "^Dashboard widget (.*) took (.*)Dashboard widget \\{widget\\} took \\{duration\\} seconds to load\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/lib/private/Dashboard/Manager.php" , line : 127usize , placeholders : & ["$service['class']"] , exception : None , regex : "^Error during dashboard widget loading: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Manager.php" , line : 106usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given consumer does not implement the \\\\OCP\\\\Activity\\\\IConsumer interface$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Manager.php" , line : 153usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^The given event is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Manager.php" , line : 198usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid activity filter registered$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Manager.php" , line : 221usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Requested filter does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Manager.php" , line : 248usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid activity provider registered$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Manager.php" , line : 286usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid activity filter registered$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Manager.php" , line : 309usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Requested setting does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Manager.php" , line : 353usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^The given current user is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Manager.php" , line : 387usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^The token is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Manager.php" , line : 394usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^The token is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Event.php" , line : 101usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given app is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Event.php" , line : 124usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given type is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Event.php" , line : 147usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given affected user is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Event.php" , line : 170usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given author user is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Event.php" , line : 214usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given subject is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Event.php" , line : 243usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given parsed subject is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Event.php" , line : 266usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given parsed subject is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Event.php" , line : 288usize , placeholders : & ["$requiredField"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid rich object, (.*) field is missing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Event.php" , line : 329usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given message is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Event.php" , line : 415usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given object type is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Event.php" , line : 418usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given object name is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Event.php" , line : 457usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given link is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/Event.php" , line : 478usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given icon is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/EventMerger.php" , line : 149usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/EventMerger.php" , line : 167usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Activity/EventMerger.php" , line : 229usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Config.php" , line : 236usize , placeholders : & ["sprintf('Could not acquire a shared lock on the config file %s', $file)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Config.php" , line : 253usize , placeholders : & ["$errorMessage"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Config.php" , line : 275usize , placeholders : & ["sprintf('Configuration was not read or initialized correctly, not overwriting %s', $this->configFilePath)"] , exception : Some ("OCP\\HintException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Config.php" , line : 292usize , placeholders : & [] , exception : Some ("OCP\\HintException") , regex : "^Can't write into config directory!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Config.php" , line : 302usize , placeholders : & ["$this->configDir"] , exception : Some ("Exception") , regex : "^(.*) does not have enough space for writing the config file! Not writing it back!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Config.php" , line : 308usize , placeholders : & ["sprintf('Could not acquire an exclusive lock on the config file %s', $this->configFilePath)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Config.php" , line : 328usize , placeholders : & [] , exception : Some ("OCP\\HintException") , regex : "^Config is set to be read\\-only via option \"config_is_read_only\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/UserStatus/Manager.php" , line : 98usize , placeholders : & ["$this->providerClass" , "$e->getMessage()"] , exception : None , regex : "^Could not load user\\-status \"(.*)\" provider dynamically: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/User/User.php" , line : 225usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Only verified emails can be set as primary$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/User/User.php" , line : 538usize , placeholders : & ["$quota"] , exception : Some ("InvalidArgumentException") , regex : "^Failed to set quota to invalid value (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/User/AvailabilityCoordinator.php" , line : 67usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Failed to deserialize cached out\\-of\\-office data: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/User/AvailabilityCoordinator.php" , line : 94usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Failed to serialize out\\-of\\-office data: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/User/Session.php" , line : 337usize , placeholders : & [] , exception : Some ("OC\\User\\NoUserException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/User/Session.php" , line : 382usize , placeholders : & ["$message"] , exception : Some ("OC\\User\\LoginException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/User/Session.php" , line : 421usize , placeholders : & ["$message"] , exception : Some ("OC\\User\\LoginException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/User/Session.php" , line : 457usize , placeholders : & [] , exception : Some ("OC\\Authentication\\Exceptions\\PasswordLoginForbiddenException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/User/Session.php" , line : 460usize , placeholders : & [] , exception : Some ("OC\\Authentication\\Exceptions\\PasswordLoginForbiddenException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/User/Session.php" , line : 498usize , placeholders : & ["$user" , "$remoteAddress"] , exception : None , regex : "^Login failed: '(.*)' \\(Remote IP: '(.*)'\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/User/Session.php" , line : 555usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^Token is not valid: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/User/Session.php" , line : 621usize , placeholders : & [] , exception : Some ("OC\\User\\LoginException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/User/Session.php" , line : 808usize , placeholders : & [] , exception : None , regex : "^Session token is invalid because it does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/User/Session.php" , line : 821usize , placeholders : & [] , exception : None , regex : "^Session token credentials are invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/User/Session.php" , line : 844usize , placeholders : & [] , exception : None , regex : "^App token login name does not match$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/User/Session.php" , line : 924usize , placeholders : & [] , exception : None , regex : "^Tried to log in but could not verify token$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/User/Session.php" , line : 934usize , placeholders : & [] , exception : None , regex : "^Remember\\-me token replaced$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/User/Session.php" , line : 942usize , placeholders : & [] , exception : None , regex : "^Session token replaced$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/lib/private/User/Session.php" , line : 947usize , placeholders : & ["{uid}"] , exception : None , regex : "^Could not renew session token for (.*)Could not renew session token for \\{uid\\} because the session is unavailable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/User/Session.php" , line : 954usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^Renewing session token failed: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/User/Session.php" , line : 999usize , placeholders : & [] , exception : None , regex : "^Session token invalidated before logout$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/User/Session.php" , line : 1005usize , placeholders : & [] , exception : None , regex : "^Logging out$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/User/Manager.php" , line : 239usize , placeholders : & ["$loginName" , "\\OC::$server->getRequest()->getRemoteAddress()"] , exception : None , regex : "^Login failed: '(.*)' \\(Remote IP: '(.*)'\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/User/Manager.php" , line : 464usize , placeholders : & ["$l->t('A valid password must be provided')"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/User/Manager.php" , line : 469usize , placeholders : & ["$l->t('The Login is already being used')"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/User/Manager.php" , line : 477usize , placeholders : & ["$l->t('Could not create account')"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/User/Manager.php" , line : 747usize , placeholders : & ["$l->t('Only the following characters are allowed in an Login:'\n\t\t\t\t. ' \"a-z\", \"A-Z\", \"0-9\", spaces and \"_.@-\\'\"')"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/User/Manager.php" , line : 753usize , placeholders : & ["$l->t('A valid Login must be provided')"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/User/Manager.php" , line : 758usize , placeholders : & ["$l->t('Login contains whitespace at the beginning or at the end')"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/User/Manager.php" , line : 763usize , placeholders : & ["$l->t('Login must not consist of dots only')"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/User/Manager.php" , line : 767usize , placeholders : & ["$l->t('Login is invalid because files already exist for this user')"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/User/Listeners/BeforeUserDeletedListener.php" , line : 63usize , placeholders : & ["$user->getUID()"] , exception : None , regex : "^Could not cleanup avatar of (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/User/Database.php" , line : 229usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid displayname$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/User/Database.php" , line : 505usize , placeholders : & [] , exception : Some ("Exception") , regex : "^key uid is expected to be set in \\$param$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/User/Database.php" , line : 523usize , placeholders : & ["$uid"] , exception : Some ("RuntimeException") , regex : "^(.*) does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullCache.php" , line : 66usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullCache.php" , line : 70usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullCache.php" , line : 74usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullCache.php" , line : 90usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullCache.php" , line : 94usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullCache.php" , line : 98usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullCache.php" , line : 130usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullStorage.php" , line : 41usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullStorage.php" , line : 45usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullStorage.php" , line : 61usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullStorage.php" , line : 69usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullStorage.php" , line : 105usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullStorage.php" , line : 109usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullStorage.php" , line : 113usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullStorage.php" , line : 117usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullStorage.php" , line : 121usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullStorage.php" , line : 125usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullStorage.php" , line : 129usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullStorage.php" , line : 133usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullStorage.php" , line : 141usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullStorage.php" , line : 165usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lockdown/Filesystem/NullStorage.php" , line : 169usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^This request is not allowed to access the filesystem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Share/Share.php" , line : 84usize , placeholders : & ["$class" , "self::$backendTypes[$itemType]['class']" , "$itemType"] , exception : None , regex : "^Sharing backend (.*) not registered, (.*) is already registered for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Share/Share.php" , line : 111usize , placeholders : & ["sprintf($message, $class)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share/Share.php" , line : 112usize , placeholders : & ["$message_t"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Share/Share.php" , line : 118usize , placeholders : & ["sprintf($message, $class)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share/Share.php" , line : 119usize , placeholders : & ["$message_t"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Share/Share.php" , line : 124usize , placeholders : & ["sprintf($message, $itemType)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share/Share.php" , line : 125usize , placeholders : & ["$message_t"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Preview/Movie.php" , line : 166usize , placeholders : & ["{output}"] , exception : None , regex : "^Movie preview generation failed Output: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Preview/Bitmap.php" , line : 58usize , placeholders : & ["$file->getPath()"] , exception : None , regex : "^Failed to get thumbnail for: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Preview/Bitmap.php" , line : 69usize , placeholders : & ["$file->getPath()"] , exception : None , regex : "^File: (.*) Imagick says:$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Preview/Bitmap.php" , line : 111usize , placeholders : & ["$mimeType"] , exception : Some ("Exception") , regex : "^File mime type does not match the preview provider: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Preview/Generator.php" , line : 126usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Cannot read file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Preview/Generator.php" , line : 147usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Max preview size 0, invalid!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Preview/Generator.php" , line : 153usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^The maximum preview sizes are zero or less pixels$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Preview/Generator.php" , line : 186usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Preview/Generator.php" , line : 198usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Preview/Generator.php" , line : 203usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Cached preview size 0, invalid!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Preview/Generator.php" , line : 379usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Preview/Generator.php" , line : 386usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^No provider successfully handled the preview generation$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Preview/Generator.php" , line : 526usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Failed to generate preview, failed to load image$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Preview/Generator.php" , line : 563usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Preview/Generator.php" , line : 587usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Preview/Generator.php" , line : 629usize , placeholders : & ["$mimeType"] , exception : Some ("InvalidArgumentException") , regex : "^Not a valid mimetype: \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Preview/MP3.php" , line : 55usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Preview/Imaginary.php" , line : 74usize , placeholders : & [] , exception : None , regex : "^Imaginary preview provider is enabled, but no url is configured\\. Please provide the url of your imaginary server to the 'preview_imaginary_url' config variable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Preview/Imaginary.php" , line : 172usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Imaginary preview generation failed: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Preview/Imaginary.php" , line : 179usize , placeholders : & ["json_decode($response->getBody())['message']"] , exception : None , regex : "^Imaginary preview generation failed: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Preview/HEIC.php" , line : 67usize , placeholders : & ["$file->getPath()"] , exception : None , regex : "^Failed to get thumbnail for: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Preview/HEIC.php" , line : 79usize , placeholders : & ["$file->getPath()"] , exception : None , regex : "^File: (.*) Imagick says:$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Preview/HEIC.php" , line : 122usize , placeholders : & ["$mimeType"] , exception : Some ("Exception") , regex : "^File mime type does not match the preview provider: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Preview/SVG.php" , line : 62usize , placeholders : & ["$mimeType"] , exception : Some ("Exception") , regex : "^File mime type does not match the preview provider: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Preview/SVG.php" , line : 69usize , placeholders : & ["$file->getPath()"] , exception : None , regex : "^File: (.*) Imagick says:$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Accounts/Account.php" , line : 51usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^setProperty cannot set an IAccountsPropertyCollection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Accounts/Account.php" , line : 59usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^getProperty cannot retrieve an IAccountsPropertyCollection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Accounts/Account.php" , line : 62usize , placeholders : & ["$property"] , exception : Some ("OCP\\Accounts\\PropertyDoesNotExistException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Accounts/Account.php" , line : 150usize , placeholders : & ["$propertyCollectionName"] , exception : Some ("OCP\\Accounts\\PropertyDoesNotExistException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Accounts/Account.php" , line : 156usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Requested collection is not an IAccountPropertyCollection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Accounts/AccountManager.php" , line : 135usize , placeholders : & ["self::PROPERTY_PHONE"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Accounts/AccountManager.php" , line : 146usize , placeholders : & ["self::PROPERTY_PHONE"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Accounts/AccountManager.php" , line : 155usize , placeholders : & ["self::PROPERTY_WEBSITE"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Accounts/AccountManager.php" , line : 159usize , placeholders : & ["self::PROPERTY_WEBSITE"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Accounts/AccountManager.php" , line : 172usize , placeholders : & ["$property->getName()"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Accounts/AccountManager.php" , line : 182usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^scope$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Accounts/AccountManager.php" , line : 191usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^scope$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Accounts/AccountManager.php" , line : 206usize , placeholders : & ["sprintf('sanitizePhoneNumberValue can only sanitize phone numbers, %s given', $property->getName())"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Accounts/AccountManager.php" , line : 226usize , placeholders : & ["sprintf('sanitizeWebsite can only sanitize web domains, %s given', $property->getName())"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Accounts/AccountManager.php" , line : 440usize , placeholders : & [] , exception : None , regex : "^Failed to send verification mail$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/lib/private/Accounts/AccountManager.php" , line : 544usize , placeholders : & ["{uid}"] , exception : None , regex : "^User data of (.*)User data of \\{uid\\} contained invalid JSON \\(error \\{json_error\\}\\), hence falling back to a default user record$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Accounts/AccountProperty.php" , line : 81usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid scope$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Accounts/AccountProperty.php" , line : 161usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Provided verification value is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Accounts/Hooks.php" , line : 61usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Accounts/AccountPropertyCollection.php" , line : 58usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Provided property does not match collection name$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/DefaultShareProvider.php" , line : 182usize , placeholders : & [] , exception : Some ("Exception") , regex : "^invalid share type!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/DefaultShareProvider.php" , line : 352usize , placeholders : & ["$share->getSharedWith()"] , exception : Some ("OC\\Share20\\Exception\\ProviderException") , regex : "^Group \"(.*)\" does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/DefaultShareProvider.php" , line : 356usize , placeholders : & [] , exception : Some ("OC\\Share20\\Exception\\ProviderException") , regex : "^Recipient not in receiving group$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/DefaultShareProvider.php" , line : 386usize , placeholders : & [] , exception : Some ("OC\\Share20\\Exception\\ProviderException") , regex : "^Recipient does not match$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/DefaultShareProvider.php" , line : 391usize , placeholders : & [] , exception : Some ("OC\\Share20\\Exception\\ProviderException") , regex : "^Invalid shareType$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/DefaultShareProvider.php" , line : 478usize , placeholders : & ["$share->getSharedWith()"] , exception : Some ("OC\\Share20\\Exception\\ProviderException") , regex : "^Group \"(.*)\" does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/DefaultShareProvider.php" , line : 523usize , placeholders : & [] , exception : Some ("OC\\Share20\\Exception\\ProviderException") , regex : "^Recipient does not match$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/DefaultShareProvider.php" , line : 529usize , placeholders : & [] , exception : Some ("OC\\Share20\\Exception\\ProviderException") , regex : "^Invalid shareType$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/DefaultShareProvider.php" , line : 821usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/DefaultShareProvider.php" , line : 827usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/DefaultShareProvider.php" , line : 1021usize , placeholders : & [] , exception : Some ("OC\\Share20\\Exception\\BackendError") , regex : "^Invalid backend$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/DefaultShareProvider.php" , line : 1051usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/DefaultShareProvider.php" , line : 1057usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Share20/DefaultShareProvider.php" , line : 1229usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/PublicShareTemplateFactory.php" , line : 44usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Can't retrieve public share template providers as context is not defined$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Share20/ProviderFactory.php" , line : 270usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Share20/ProviderFactory.php" , line : 308usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/ProviderFactory.php" , line : 320usize , placeholders : & ["$id"] , exception : Some ("OC\\Share20\\Exception\\ProviderException") , regex : "^No provider with id \\.(.*) found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/ProviderFactory.php" , line : 353usize , placeholders : & ["$shareType"] , exception : Some ("OC\\Share20\\Exception\\ProviderException") , regex : "^No share provider for share type (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Share20/ProviderFactory.php" , line : 379usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 137usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Passwords are enforced for link and mail shares$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 147usize , placeholders : & ["$e->getHint()"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 164usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^SharedWith is not a valid user$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 169usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^SharedWith is not a valid group$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 174usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^SharedWith should be empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 178usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^SharedWith should not be empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 182usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^SharedWith should not be empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 186usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^SharedWith should not be empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 191usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^SharedWith is not a valid circle$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 198usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^unknown share type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 203usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^SharedBy should be set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 209usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Cannot share with yourself$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 214usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Path should be set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 220usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Path should be either a file or a folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 230usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^You cannot share your root folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 236usize , placeholders : & ["$message_t"] , exception : Some ("OCP\\Share\\Exceptions\\GenericShareException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 241usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A share requires permissions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 260usize , placeholders : & ["$message_t"] , exception : Some ("OCP\\Share\\Exceptions\\GenericShareException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 270usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Shares need at least read permissions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 276usize , placeholders : & ["$message_t"] , exception : Some ("OCP\\Share\\Exceptions\\GenericShareException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 280usize , placeholders : & ["$message_t"] , exception : Some ("OCP\\Share\\Exceptions\\GenericShareException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 322usize , placeholders : & ["$message"] , exception : Some ("OCP\\Share\\Exceptions\\GenericShareException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 347usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Expiration date is enforced$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 355usize , placeholders : & ["$message"] , exception : Some ("OCP\\Share\\Exceptions\\GenericShareException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 370usize , placeholders : & ["$message"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 402usize , placeholders : & ["$message"] , exception : Some ("OCP\\Share\\Exceptions\\GenericShareException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 428usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Expiration date is enforced$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 436usize , placeholders : & ["$message"] , exception : Some ("OCP\\Share\\Exceptions\\GenericShareException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 452usize , placeholders : & ["$message"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 486usize , placeholders : & ["$message_t"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 510usize , placeholders : & ["$message"] , exception : Some ("OCP\\Share\\Exceptions\\AlreadySharedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 521usize , placeholders : & ["$message"] , exception : Some ("OCP\\Share\\Exceptions\\AlreadySharedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 537usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Group sharing is now allowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 548usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Sharing is only allowed within your own groups$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 569usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\AlreadySharedException") , regex : "^Path is already shared with this group$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 583usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Link sharing is not allowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 589usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Public upload is not allowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 624usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Path contains files shared with you$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 638usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Sharing is disabled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 642usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Sharing is disabled for you$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 726usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Cannot share with the share owner$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 746usize , placeholders : & ["$event->getError()"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Share20/Manager.php" , line : 791usize , placeholders : & ["$emailAddress" , "$share->getId()"] , exception : None , regex : "^Sent share notification to (.*) for share with ID (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Share20/Manager.php" , line : 793usize , placeholders : & ["$share->getSharedWith()"] , exception : None , regex : "^Share notification not sent to (.*) because email address is not set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Share20/Manager.php" , line : 796usize , placeholders : & ["$share->getSharedWith()"] , exception : None , regex : "^Share notification not sent to (.*) because user could not be found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Share20/Manager.php" , line : 799usize , placeholders : & [] , exception : None , regex : "^Share notification not sent because mailsend is false\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Share20/Manager.php" , line : 883usize , placeholders : & ["implode(', ', $failedRecipients)"] , exception : None , regex : "^Share notification mail could not be sent to: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Share20/Manager.php" , line : 887usize , placeholders : & [] , exception : None , regex : "^Share notification mail could not be sent$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 906usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Share does not have a full id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 911usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Cannot change share type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 917usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Can only update recipient on user shares$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 923usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Cannot share with the share owner$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 958usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Cannot enable sending the password by Talk with an empty password$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 968usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Cannot enable sending the password by Talk without setting a new password$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 971usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Cannot disable sending the password by Talk without setting a new password$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 1053usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Share provider does not support accepting$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 1165usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Share does not have a full id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 1212usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Cannot change target of link share$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 1216usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid recipient$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 1222usize , placeholders : & ["$share->getSharedWith()"] , exception : Some ("InvalidArgumentException") , regex : "^Group \"(.*)\" does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 1226usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid recipient$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 1259usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^invalid path$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 1373usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 1381usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 1415usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 1467usize , placeholders : & ["$this->l->t('The requested share does not exist anymore')"] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 1491usize , placeholders : & ["$this->l->t('The requested share does not exist anymore')"] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Manager.php" , line : 1498usize , placeholders : & ["$this->l->t('The requested share comes from a disabled user')"] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Share.php" , line : 121usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^String expected\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Share.php" , line : 125usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\IllegalIDChangeException") , regex : "^Not allowed to assign a new internal id to a share$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Share.php" , line : 154usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^String expected\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Share.php" , line : 158usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\IllegalIDChangeException") , regex : "^Not allowed to assign a new provider id to a share$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Share.php" , line : 181usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Share.php" , line : 194usize , placeholders : & ["$this->fileId"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Node for share not found, fileid: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Share.php" , line : 221usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Share source not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Share.php" , line : 232usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Share.php" , line : 276usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Share.php" , line : 294usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Share.php" , line : 312usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Share.php" , line : 457usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Share20/Share.php" , line : 478usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/lib/private/Log.php" , line : 91usize , placeholders : & ["ILogger::FATAL"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/lib/private/Log.php" , line : 104usize , placeholders : & ["ILogger::ERROR"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/lib/private/Log.php" , line : 116usize , placeholders : & ["ILogger::ERROR"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/lib/private/Log.php" , line : 127usize , placeholders : & ["ILogger::ERROR"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/lib/private/Log.php" , line : 140usize , placeholders : & ["ILogger::WARN"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/lib/private/Log.php" , line : 150usize , placeholders : & ["ILogger::INFO"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/lib/private/Log.php" , line : 162usize , placeholders : & ["ILogger::INFO"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/lib/private/Log.php" , line : 172usize , placeholders : & ["ILogger::DEBUG"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Log.php" , line : 317usize , placeholders : & ["$exception->getMessage()"] , exception : None , regex : "^Failed to load ExceptionSerializer serializer while trying to log (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Log.php" , line : 384usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Log implementation has no path$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Search/Result/File.php" , line : 136usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Search result not in user folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Search/SearchComposer.php" , line : 126usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Could not load search provider dynamically: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Search/SearchComposer.php" , line : 152usize , placeholders : & ["$filterName"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid filter (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Search/SearchComposer.php" , line : 161usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Filter name is already used$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Search/SearchComposer.php" , line : 293usize , placeholders : & ["{name}"] , exception : None , regex : "^Unable to find (.*)Unable to find \\{name\\} definition$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Search/SearchComposer.php" , line : 303usize , placeholders : & ["$name"] , exception : Some ("OC\\Search\\UnsupportedFilter") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Search/SearchComposer.php" , line : 342usize , placeholders : & ["$providerId"] , exception : Some ("InvalidArgumentException") , regex : "^Provider (.*) is unknown$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Search/Filter/UserFilter.php" , line : 43usize , placeholders : & ["$value"] , exception : Some ("InvalidArgumentException") , regex : "^User (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Search/Filter/IntegerFilter.php" , line : 38usize , placeholders : & ["$value"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid integer value (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Search/Filter/BooleanFilter.php" , line : 39usize , placeholders : & ["$value"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid boolean value (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Search/Filter/GroupFilter.php" , line : 43usize , placeholders : & ["$value"] , exception : Some ("InvalidArgumentException") , regex : "^Group (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Search/Filter/StringsFilter.php" , line : 41usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Strings filter can’t be empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Search/Filter/StringFilter.php" , line : 37usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^String filter can’t be empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Search/Filter/FloatFilter.php" , line : 38usize , placeholders : & ["$value"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid float value (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Search/FilterFactory.php" , line : 48usize , placeholders : & ["$type"] , exception : Some ("RuntimeException") , regex : "^Invalid filter type (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Setup/MySQL.php" , line : 73usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Setup/MySQL.php" , line : 76usize , placeholders : & ["$this->trans->t('MySQL Login and/or password not valid')"] , exception : Some ("OC\\DatabaseSetupException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Setup/MySQL.php" , line : 93usize , placeholders : & [] , exception : None , regex : "^Database creation failed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Setup/MySQL.php" , line : 105usize , placeholders : & [] , exception : None , regex : "^Could not automatically grant privileges, this can be ignored if database user already had privileges\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Setup/MySQL.php" , line : 135usize , placeholders : & [] , exception : None , regex : "^Database user creation failed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Setup/MySQL.php" , line : 197usize , placeholders : & [] , exception : None , regex : "^Can not create a new MySQL user, will continue with the provided user\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Setup/PostgreSQL.php" , line : 98usize , placeholders : & [] , exception : None , regex : "^Error trying to connect as \"postgres\", assuming database is setup and tables need to be created$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Setup/PostgreSQL.php" , line : 114usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Setup/PostgreSQL.php" , line : 117usize , placeholders : & ["$this->trans->t('PostgreSQL Login and/or password not valid')"] , exception : Some ("OC\\DatabaseSetupException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Setup/PostgreSQL.php" , line : 129usize , placeholders : & [] , exception : None , regex : "^Error while trying to create database$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Setup/PostgreSQL.php" , line : 138usize , placeholders : & [] , exception : None , regex : "^Error while trying to restrict database permissions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Setup/PostgreSQL.php" , line : 182usize , placeholders : & [] , exception : None , regex : "^Error while trying to create database user$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Setup/OCI.php" , line : 71usize , placeholders : & ["$this->trans->t('Oracle connection could not be established')"] , exception : Some ("OC\\DatabaseSetupException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Setup/OCI.php" , line : 78usize , placeholders : & ["$this->trans->t('Oracle Login and/or password not valid')"] , exception : Some ("OC\\DatabaseSetupException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/FilesMetadata/FilesMetadataManager.php" , line : 178usize , placeholders : & ["$json"] , exception : None , regex : "^huge metadata content detected: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/FilesMetadataManager.php" , line : 179usize , placeholders : & ["self::JSON_MAXSIZE" , "$filesMetadata->getFileId()" , "strlen($json)"] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataException") , regex : "^json cannot exceed (.*) characters long; fileId: (.*); size: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/FilesMetadata/FilesMetadataManager.php" , line : 191usize , placeholders : & [] , exception : None , regex : "^issue while saveMetadata$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/FilesMetadata/FilesMetadataManager.php" , line : 201usize , placeholders : & [] , exception : None , regex : "^issue while updateIndex$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/FilesMetadata/FilesMetadataManager.php" , line : 221usize , placeholders : & [] , exception : None , regex : "^issue while deleteMetadata$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/FilesMetadata/FilesMetadataManager.php" , line : 227usize , placeholders : & [] , exception : None , regex : "^issue while deleteMetadata$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/FilesMetadata/FilesMetadataManager.php" , line : 263usize , placeholders : & [] , exception : None , regex : "^issue while reading stored list of metadata\\. Advised to run \\./occ files:scan \\-\\-all \\-\\-generate\\-metadata$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/FilesMetadata/Job/UpdateSingleMetadata.php" , line : 63usize , placeholders : & [] , exception : None , regex : "^issue while running UpdateSingleMetadata$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/FilesMetadata/Service/IndexRequestService.php" , line : 84usize , placeholders : & [] , exception : None , regex : "^issue while updateIndex$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/FilesMetadata/Service/MetadataRequestService.php" , line : 82usize , placeholders : & [] , exception : None , regex : "^exception while getMetadataFromDatabase\\(\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Service/MetadataRequestService.php" , line : 83usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Service/MetadataRequestService.php" , line : 87usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/FilesMetadata/Service/MetadataRequestService.php" , line : 180usize , placeholders : & [] , exception : None , regex : "^exception during generateSyncToken$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/MetadataValueWrapper.php" , line : 113usize , placeholders : & ["$this->getType()" , "$type"] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataTypeException") , regex : "^type is '(.*)', expecting '(.*)'$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/MetadataValueWrapper.php" , line : 238usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^value is not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/MetadataValueWrapper.php" , line : 254usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^value is not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/MetadataValueWrapper.php" , line : 270usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^value is not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/MetadataValueWrapper.php" , line : 286usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^value is not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/MetadataValueWrapper.php" , line : 302usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^value is not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/MetadataValueWrapper.php" , line : 318usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^value is not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/MetadataValueWrapper.php" , line : 334usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^value is not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/MetadataValueWrapper.php" , line : 348usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^value is not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/FilesMetadata.php" , line : 137usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/FilesMetadata.php" , line : 153usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/FilesMetadata.php" , line : 170usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/FilesMetadata.php" , line : 187usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/FilesMetadata.php" , line : 204usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/FilesMetadata.php" , line : 221usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/FilesMetadata.php" , line : 238usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/FilesMetadata.php" , line : 255usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/FilesMetadata.php" , line : 272usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/FilesMetadata.php" , line : 289usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/FilesMetadata.php" , line : 312usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/FilesMetadata.php" , line : 558usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataKeyFormatException") , regex : "^key can only contains alphanumerical characters, and dash \\(\\-, _\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/Model/FilesMetadata.php" , line : 635usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/FilesMetadata/Listener/MetadataUpdate.php" , line : 61usize , placeholders : & [] , exception : None , regex : "^issue while running MetadataUpdate$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/FilesMetadata/Listener/MetadataDelete.php" , line : 58usize , placeholders : & [] , exception : None , regex : "^issue while running MetadataDelete$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/FilesMetadata/MetadataQuery.php" , line : 63usize , placeholders : & [] , exception : None , regex : "^It is deprecated to use IFilesMetadata as second parameter when calling MetadataQuery::__construct\\(\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/MetadataQuery.php" , line : 144usize , placeholders : & ["$metadataKey"] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataNotFoundException") , regex : "^table related to (.*) not initiated, you need to use leftJoin\\(\\) first\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FilesMetadata/MetadataQuery.php" , line : 190usize , placeholders : & [] , exception : Some ("OCP\\FilesMetadata\\Exceptions\\FilesMetadataTypeException") , regex : "^metadata is not set as indexed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Template/ResourceLocator.php" , line : 76usize , placeholders : & ["$e->getResourcePath()"] , exception : None , regex : "^Could not find resource file \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Template/ResourceLocator.php" , line : 85usize , placeholders : & ["$e->getResourcePath()"] , exception : None , regex : "^Could not find resource file in theme \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Template/ResourceLocator.php" , line : 163usize , placeholders : & ["$file"] , exception : Some ("OC\\Template\\ResourceNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Template/ResourceLocator.php" , line : 173usize , placeholders : & ["{root}" , "{file}" , "{webRoot}" , "{throw}"] , exception : None , regex : "^ResourceLocator can not find a web root \\(root: (.*), file: (.*), webRoot: (.*), throw: (.*)ResourceLocator can not find a web root \\(root: \\{root\\}, file: \\{file\\}, webRoot: \\{webRoot\\}, throw: \\{throw\\}\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Template/ResourceLocator.php" , line : 185usize , placeholders : & ["$file"] , exception : Some ("OC\\Template\\ResourceNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Template/TemplateFileLocator.php" , line : 46usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Empty template name$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Template/TemplateFileLocator.php" , line : 56usize , placeholders : & ["$template"] , exception : Some ("Exception") , regex : "^template file not found: template:(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Template/JSResourceLocator.php" , line : 107usize , placeholders : & ["{resource}"] , exception : None , regex : "^Could not find resource (.*)Could not find resource \\{resource\\} to load$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Template/JSCombiner.php" , line : 123usize , placeholders : & ["$fileName"] , exception : None , regex : "^JSCombiner: deps file empty: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Template/JSCombiner.php" , line : 198usize , placeholders : & ["$fileName"] , exception : None , regex : "^JSCombiner: successfully cached: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Template/JSCombiner.php" , line : 201usize , placeholders : & ["$fileName"] , exception : None , regex : "^JSCombiner: unable to cache: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Template/CSSResourceLocator.php" , line : 56usize , placeholders : & ["{resource}"] , exception : None , regex : "^Could not find resource (.*)Could not find resource \\{resource\\} to load$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Template/CSSResourceLocator.php" , line : 90usize , placeholders : & ["{root}" , "{file}" , "{webRoot}" , "{throw}"] , exception : None , regex : "^ResourceLocator can not find a web root \\(root: (.*), file: (.*), webRoot: (.*), throw: (.*)ResourceLocator can not find a web root \\(root: \\{root\\}, file: \\{file\\}, webRoot: \\{webRoot\\}, throw: \\{throw\\}\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Template/CSSResourceLocator.php" , line : 99usize , placeholders : & ["$file"] , exception : Some ("OC\\Template\\ResourceNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/RichObjectStrings/Validator.php" , line : 64usize , placeholders : & [] , exception : Some ("OCP\\RichObjectStrings\\InvalidObjectExeption") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/RichObjectStrings/Validator.php" , line : 70usize , placeholders : & [] , exception : Some ("OCP\\RichObjectStrings\\InvalidObjectExeption") , regex : "^Parameter is undefined$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/RichObjectStrings/Validator.php" , line : 77usize , placeholders : & [] , exception : Some ("OCP\\RichObjectStrings\\InvalidObjectExeption") , regex : "^Parameter is malformed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/RichObjectStrings/Validator.php" , line : 90usize , placeholders : & [] , exception : Some ("OCP\\RichObjectStrings\\InvalidObjectExeption") , regex : "^Object type is undefined$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/RichObjectStrings/Validator.php" , line : 98usize , placeholders : & ["json_encode($missingKeys)"] , exception : Some ("OCP\\RichObjectStrings\\InvalidObjectExeption") , regex : "^Object is invalid, missing keys:(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Server.php" , line : 856usize , placeholders : & [] , exception : Some ("OC\\DatabaseException") , regex : "^Invalid database type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Server.php" , line : 965usize , placeholders : & ["$app"] , exception : Some ("OC\\ServiceUnavailableException") , regex : "^The app providing the command bus \\((.*)\\) is not enabled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Server.php" , line : 2333usize , placeholders : & ["$alias" , "$target"] , exception : None , regex : "^The requested alias \"(.*)\" is deprecated\\. Please request \"(.*)\" directly\\. This alias will be removed in a future Nextcloud version\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/lib/private/Profile/ProfileManager.php" , line : 133usize , placeholders : & ["$action->getAppId()" , "$targetUser->getUID()"] , exception : None , regex : "^App: (.*) cannot register actions as it is not enabled for the target user: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/lib/private/Profile/ProfileManager.php" , line : 137usize , placeholders : & ["$action->getAppId()" , "($visitingUser ? $visitingUser->getUID() : '(user not connected)')"] , exception : None , regex : "^App: (.*) cannot register actions as it is not enabled for the visiting user: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Profile/ProfileManager.php" , line : 143usize , placeholders : & ["$action->getId()"] , exception : None , regex : "^Cannot register action with ID: (.*), as it is used by a core account property\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Profile/ProfileManager.php" , line : 148usize , placeholders : & ["$action->getId()"] , exception : None , regex : "^Cannot register duplicate action: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DirectEditing/Manager.php" , line : 103usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^No matching editor found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DirectEditing/Manager.php" , line : 135usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^File already exists$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DirectEditing/Manager.php" , line : 138usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Invalid path$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DirectEditing/Manager.php" , line : 153usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^No creator found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DirectEditing/Manager.php" , line : 171usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DirectEditing/Manager.php" , line : 180usize , placeholders : & ["$editorId"] , exception : Some ("RuntimeException") , regex : "^Editor (.*) is unknown$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DirectEditing/Manager.php" , line : 192usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^No default editor found for files mimetype$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DirectEditing/Manager.php" , line : 200usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Token has already been used and can only be used for followup requests$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DirectEditing/Manager.php" , line : 223usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^No editor found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DirectEditing/Manager.php" , line : 236usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Failed to validate the token$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DirectEditing/Manager.php" , line : 313usize , placeholders : & ["$fileId"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^File nound found by id (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Installer.php" , line : 91usize , placeholders : & [] , exception : Some ("Exception") , regex : "^App not found in any app directory$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Installer.php" , line : 97usize , placeholders : & ["$appId"] , exception : Some ("Exception") , regex : "^The appinfo/database\\.xml file is not longer supported\\. Used in (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Installer.php" , line : 104usize , placeholders : & ["$l->t('App \"%s\" cannot be installed because appinfo file cannot be read.',\n\t\t\t\t\t[$appId]\n\t\t\t\t)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Installer.php" , line : 179usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Installer.php" , line : 232usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not validate CRL signature$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Installer.php" , line : 237usize , placeholders : & ["sprintf(\n\t\t\t\t\t\t\t'Certificate \"%s\" has been revoked',\n\t\t\t\t\t\t\t$csn\n\t\t\t\t\t\t)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Installer.php" , line : 247usize , placeholders : & ["sprintf(\n\t\t\t\t\t\t\t'App with id %s has a certificate not issued by a trusted Code Signing Authority',\n\t\t\t\t\t\t\t$appId\n\t\t\t\t\t\t)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Installer.php" , line : 258usize , placeholders : & ["sprintf(\n\t\t\t\t\t\t\t'App with id %s has a cert with no CN',\n\t\t\t\t\t\t\t$appId\n\t\t\t\t\t\t)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Installer.php" , line : 266usize , placeholders : & ["sprintf(\n\t\t\t\t\t\t\t'App with id %s has a cert issued to %s',\n\t\t\t\t\t\t\t$appId,\n\t\t\t\t\t\t\t$certInfo['subject']['CN']\n\t\t\t\t\t\t)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Installer.php" , line : 302usize , placeholders : & ["$errorMessage"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Installer.php" , line : 309usize , placeholders : & ["sprintf(\n\t\t\t\t\t\t\t\t'Extracted app %s has more than 1 folder',\n\t\t\t\t\t\t\t\t$appId\n\t\t\t\t\t\t\t)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Installer.php" , line : 326usize , placeholders : & ["sprintf(\n\t\t\t\t\t\t\t\t'App for id %s has a wrong app ID in info.xml: %s',\n\t\t\t\t\t\t\t\t$appId,\n\t\t\t\t\t\t\t\t(string)$xml->id\n\t\t\t\t\t\t\t)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Installer.php" , line : 339usize , placeholders : & ["sprintf(\n\t\t\t\t\t\t\t\t'App for id %s has version %s and tried to update to lower version %s',\n\t\t\t\t\t\t\t\t$appId,\n\t\t\t\t\t\t\t\t$currentVersion,\n\t\t\t\t\t\t\t\t$newVersion\n\t\t\t\t\t\t\t)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Installer.php" , line : 362usize , placeholders : & ["sprintf(\n\t\t\t\t\t\t'App with id %s has invalid signature',\n\t\t\t\t\t\t$appId\n\t\t\t\t\t)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Installer.php" , line : 371usize , placeholders : & ["sprintf(\n\t\t\t\t'Could not download app %s',\n\t\t\t\t$appId\n\t\t\t)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Installer.php" , line : 480usize , placeholders : & ["$appId"] , exception : None , regex : "^can't remove app (.*)\\. It is not installed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Installer.php" , line : 516usize , placeholders : & [] , exception : None , regex : "^Installing shipped apps$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Installer.php" , line : 561usize , placeholders : & ["$app"] , exception : None , regex : "^Installing (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Installer.php" , line : 584usize , placeholders : & ["$app"] , exception : None , regex : "^Registering tasks of (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Console/Application.php" , line : 110usize , placeholders : & [] , exception : Some ("OC\\NeedsUpdateException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Console/Application.php" , line : 128usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Console/Application.php" , line : 140usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Console/Application.php" , line : 167usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Environment not properly prepared\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Console/Application.php" , line : 225usize , placeholders : & ["$command" , "$e->getMessage()"] , exception : Some ("Exception") , regex : "^Failed to construct console command '(.*)': (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Console/Application.php" , line : 228usize , placeholders : & ["$command"] , exception : Some ("Exception") , regex : "^Console command '(.*)' is unknown and could not be loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/legacy/OC_Files.php" , line : 174usize , placeholders : & ["$event->getErrorMessage()"] , exception : Some ("OC\\ForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Files.php" , line : 203usize , placeholders : & ["{file}"] , exception : None , regex : "^File given, but no Node available\\. Name (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/legacy/OC_Files.php" , line : 350usize , placeholders : & ["$msg"] , exception : Some ("OC\\ForbiddenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_User.php" , line : 101usize , placeholders : & ["$backend"] , exception : None , regex : "^Adding user backend (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_User.php" , line : 110usize , placeholders : & ["$backend"] , exception : None , regex : "^Adding default user backend (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_User.php" , line : 155usize , placeholders : & ["$class"] , exception : None , regex : "^User backend (.*) already initialized\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/legacy/OC_User.php" , line : 158usize , placeholders : & ["$class"] , exception : None , regex : "^User backend (.*) not found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/legacy/OC_User.php" , line : 187usize , placeholders : & ["$message"] , exception : Some ("OC\\User\\LoginException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/legacy/OC_Helper.php" , line : 492usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/legacy/OC_Helper.php" , line : 508usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^The root directory of the user's files is missing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/legacy/OC_Helper.php" , line : 554usize , placeholders : & [] , exception : None , regex : "^Error while getting quota info, using root quota$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/legacy/OC_Util.php" , line : 207usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^no instance id!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/legacy/OC_Util.php" , line : 211usize , placeholders : & ["$appdata"] , exception : Some ("RuntimeException") , regex : "^username is reserved name: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Util.php" , line : 215usize , placeholders : & ["$userId" , "$skeletonDirectory" , "$userDirectory->getFullPath('/')"] , exception : None , regex : "^copying skeleton for (.*) from (.*) to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/legacy/OC_Util.php" , line : 239usize , placeholders : & ["sprintf('Could not opendir \"%s\"', $source)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/legacy/OC_Util.php" , line : 253usize , placeholders : & ["sprintf('Could not fopen \"%s\"', $source . '/' . $file)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/legacy/OC_Util.php" , line : 906usize , placeholders : & [] , exception : Some ("OCP\\HintException") , regex : "^Can't create test file to check for working \\.htaccess file\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/legacy/OC_Util.php" , line : 1074usize , placeholders : & ["$value"] , exception : None , regex : "^normalizing failed for \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/legacy/OC_Util.php" , line : 1151usize , placeholders : & ["$installedVersion" , "$currentVersion"] , exception : Some ("OCP\\HintException") , regex : "^Downgrading is not supported and is likely to cause unpredictable issues \\(from (.*) to (.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/legacy/OC_Util.php" , line : 1155usize , placeholders : & ["$installedVersion" , "$currentVersion"] , exception : Some ("OCP\\HintException") , regex : "^Downgrading is not supported and is likely to cause unpredictable issues \\(from (.*) to (.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/legacy/OC_EventSource.php" , line : 107usize , placeholders : & ["$type"] , exception : Some ("BadMethodCallException") , regex : "^Type needs to be alphanumeric \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/legacy/OC_Image.php" , line : 103usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The first parameter in the constructor is not supported anymore\\. Please use any of the load\\* methods of the image object to load an image\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 167usize , placeholders : & ["$o"] , exception : None , regex : "^OC_Image\\->widthTopLeft\\(\\) Orientation: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 191usize , placeholders : & ["$o"] , exception : None , regex : "^OC_Image\\->heightTopLeft\\(\\) Orientation: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/legacy/OC_Image.php" , line : 236usize , placeholders : & ["__METHOD__"] , exception : None , regex : "^(.*)\\(\\): called with no path\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/legacy/OC_Image.php" , line : 260usize , placeholders : & ["__METHOD__" , "dirname($filePath)"] , exception : None , regex : "^(.*)\\(\\): Directory '(.*)' is not writable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/legacy/OC_Image.php" , line : 263usize , placeholders : & ["__METHOD__" , "$filePath"] , exception : None , regex : "^(.*)\\(\\): File '(.*)' is not writable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/legacy/OC_Image.php" , line : 294usize , placeholders : & ["$mimeType"] , exception : Some ("Exception") , regex : "^\\\\OC_Image::_output\\(\\): \"(.*)\" is not supported when forcing a specific output format$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/legacy/OC_Image.php" , line : 314usize , placeholders : & [] , exception : Some ("Exception") , regex : "^\\\\OC_Image::_output\\(\\): imagexbm\\(\\) is not supported\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/legacy/OC_Image.php" , line : 355usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Supplied resource is not of type \"gd\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/legacy/OC_Image.php" , line : 410usize , placeholders : & [] , exception : None , regex : "^OC_Image\\->data\\. Could not guess mime\\-type, defaulting to png$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/legacy/OC_Image.php" , line : 414usize , placeholders : & [] , exception : None , regex : "^OC_Image\\->data\\. Error getting image data\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 462usize , placeholders : & [] , exception : None , regex : "^OC_Image\\->fixOrientation\\(\\) Image is not a JPEG\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 466usize , placeholders : & [] , exception : None , regex : "^OC_Image\\->fixOrientation\\(\\) Exif module not enabled\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 470usize , placeholders : & [] , exception : None , regex : "^OC_Image\\->fixOrientation\\(\\) No image loaded\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 474usize , placeholders : & [] , exception : None , regex : "^OC_Image\\->fixOrientation\\(\\) No readable file path set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 490usize , placeholders : & [] , exception : None , regex : "^OC_Image\\->fixOrientation\\(\\) Exif module not enabled\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 494usize , placeholders : & [] , exception : None , regex : "^OC_Image\\->fixOrientation\\(\\) No image loaded\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 516usize , placeholders : & ["__METHOD__"] , exception : None , regex : "^(.*)\\(\\): No image loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 520usize , placeholders : & ["$o"] , exception : None , regex : "^OC_Image\\->fixOrientation\\(\\) Orientation: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 567usize , placeholders : & [] , exception : None , regex : "^OC_Image\\->fixOrientation\\(\\) Error during alpha\\-saving$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 571usize , placeholders : & [] , exception : None , regex : "^OC_Image\\->fixOrientation\\(\\) Error during alpha\\-blending$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 575usize , placeholders : & [] , exception : None , regex : "^OC_Image\\->fixOrientation\\(\\) Error during orientation fixing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/legacy/OC_Image.php" , line : 613usize , placeholders : & ["$width" , "$height" , "$memory_limit"] , exception : None , regex : "^Image size of (.*)x(.*) would exceed allowed memory limit of (.*)\\. You may increase the preview_max_memory in your config\\.php if you need previews of this image\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 686usize , placeholders : & ["$imagePath"] , exception : None , regex : "^OC_Image\\->loadFromFile, GIF image not valid: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 689usize , placeholders : & ["$imagePath"] , exception : None , regex : "^OC_Image\\->loadFromFile, GIF images not supported: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 700usize , placeholders : & ["$imagePath"] , exception : None , regex : "^OC_Image\\->loadFromFile, JPG image not valid: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 703usize , placeholders : & ["$imagePath"] , exception : None , regex : "^OC_Image\\->loadFromFile, JPG images not supported: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 717usize , placeholders : & ["$imagePath"] , exception : None , regex : "^OC_Image\\->loadFromFile, PNG image not valid: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 720usize , placeholders : & ["$imagePath"] , exception : None , regex : "^OC_Image\\->loadFromFile, PNG images not supported: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 730usize , placeholders : & ["$imagePath"] , exception : None , regex : "^OC_Image\\->loadFromFile, XBM/XPM images not supported: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 740usize , placeholders : & ["$imagePath"] , exception : None , regex : "^OC_Image\\->loadFromFile, WBMP images not supported: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 753usize , placeholders : & ["$imagePath"] , exception : None , regex : "^OC_Image\\->loadFromFile, webp images not supported: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 789usize , placeholders : & [] , exception : None , regex : "^OC_Image\\->loadFromFile, Default$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 820usize , placeholders : & [] , exception : None , regex : "^OC_Image\\->loadFromFile, could not load$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 843usize , placeholders : & [] , exception : None , regex : "^OC_Image\\->loadFromBase64, could not load$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 860usize , placeholders : & ["__METHOD__"] , exception : None , regex : "^(.*)\\(\\): No image loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 875usize , placeholders : & ["__METHOD__"] , exception : None , regex : "^(.*)\\(\\): No image loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 900usize , placeholders : & ["__METHOD__"] , exception : None , regex : "^(.*)\\(\\): No image loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/legacy/OC_Image.php" , line : 916usize , placeholders : & ["__METHOD__"] , exception : None , regex : "^(.*)\\(\\): Requested image size not bigger than 0$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 920usize , placeholders : & ["__METHOD__"] , exception : None , regex : "^(.*)\\(\\): No image loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 927usize , placeholders : & ["__METHOD__"] , exception : None , regex : "^(.*)\\(\\): Error creating true color image$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 940usize , placeholders : & ["__METHOD__"] , exception : None , regex : "^(.*)\\(\\): Error re\\-sampling process image$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 955usize , placeholders : & [] , exception : None , regex : "^OC_Image\\->centerCrop, No image loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 982usize , placeholders : & [] , exception : None , regex : "^OC_Image\\->centerCrop, Error creating true color image$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 995usize , placeholders : & ["$width" , "$height"] , exception : None , regex : "^OC_Image\\->centerCrop, Error re\\-sampling process image (.*)x(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 1014usize , placeholders : & ["__METHOD__"] , exception : None , regex : "^(.*)\\(\\): No image loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 1034usize , placeholders : & ["__METHOD__"] , exception : None , regex : "^(.*)\\(\\): No image loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 1039usize , placeholders : & ["__METHOD__"] , exception : None , regex : "^(.*)\\(\\): Error creating true color image$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 1052usize , placeholders : & ["__METHOD__" , "$w" , "$h"] , exception : None , regex : "^(.*)\\(\\): Error re\\-sampling process image (.*)x(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 1069usize , placeholders : & ["__METHOD__"] , exception : None , regex : "^(.*)\\(\\): No image loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_Image.php" , line : 1092usize , placeholders : & ["__METHOD__"] , exception : None , regex : "^(.*)\\(\\): No image loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/legacy/OC_App.php" , line : 295usize , placeholders : & [] , exception : None , regex : "^No application directories are marked as writable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/legacy/OC_App.php" , line : 415usize , placeholders : & [] , exception : None , regex : "^Failed to detect current app from script path$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/legacy/OC_App.php" , line : 457usize , placeholders : & [] , exception : None , regex : "^OC_App::registerLogIn\\(\\) is deprecated, please register your alternative login option using the registerAlternativeLogin\\(\\) on the RegistrationContext in your Application class implementing the OCP\\\\Authentication\\\\IAlternativeLogin interface$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/legacy/OC_App.php" , line : 470usize , placeholders : & ["{option}" , "{interface}"] , exception : None , regex : "^Alternative login option (.*) does not implement (.*)Alternative login option \\{option\\} does not implement \\{interface\\} and is therefore ignored\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/legacy/OC_App.php" , line : 520usize , placeholders : & ["$apps_dir['path']"] , exception : None , regex : "^unable to read app folder : (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/legacy/OC_App.php" , line : 571usize , placeholders : & ["$app"] , exception : None , regex : "^Could not read app info file for app \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/legacy/OC_App.php" , line : 576usize , placeholders : & ["$app"] , exception : None , regex : "^App id \"(.*)\" has no name in appinfo$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/legacy/OC_App.php" , line : 756usize , placeholders : & ["$appId"] , exception : None , regex : "^The appinfo/database\\.xml file is not longer supported\\. Used in (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/legacy/OC_App.php" , line : 874usize , placeholders : & ["$appId"] , exception : None , regex : "^Can't get app storage, app (.*), user not logged in$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/legacy/OC_App.php" , line : 878usize , placeholders : & ["$appId"] , exception : None , regex : "^Can't get app storage, app (.*) not enabled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/legacy/OC_App.php" , line : 969usize , placeholders : & ["$l->t('App \"%1$s\" cannot be installed because the following dependencies are not fulfilled: %2$s',\n\t\t\t\t\t[$info['name'], $missingMsg]\n\t\t\t\t)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/legacy/OC_Template.php" , line : 284usize , placeholders : & ["$error_msg" , "$hint"] , exception : None , regex : "^(.*) (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FullTextSearch/FullTextSearchManager.php" , line : 88usize , placeholders : & [] , exception : Some ("OCP\\FullTextSearch\\Exceptions\\FullTextSearchAppNotAvailableException") , regex : "^No IProviderService registered$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FullTextSearch/FullTextSearchManager.php" , line : 100usize , placeholders : & [] , exception : Some ("OCP\\FullTextSearch\\Exceptions\\FullTextSearchAppNotAvailableException") , regex : "^No IIndexService registered$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FullTextSearch/FullTextSearchManager.php" , line : 112usize , placeholders : & [] , exception : Some ("OCP\\FullTextSearch\\Exceptions\\FullTextSearchAppNotAvailableException") , regex : "^No ISearchService registered$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/FullTextSearch/Model/IndexDocument.php" , line : 145usize , placeholders : & [] , exception : Some ("OCP\\FullTextSearch\\Exceptions\\FullTextSearchIndexNotAvailableException") , regex : "^No IIndex generated$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/CleanTags.php" , line : 84usize , placeholders : & ["sprintf('%d tags of deleted users have been removed.', $this->deletedTags)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/CleanTags.php" , line : 205usize , placeholders : & ["sprintf($repairInfo, count($orphanItems))"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Owncloud/CleanPreviewsBackgroundJob.php" , line : 52usize , placeholders : & ["$uid"] , exception : None , regex : "^User no longer exists, skip user (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Owncloud/CleanPreviewsBackgroundJob.php" , line : 55usize , placeholders : & ["$uid"] , exception : None , regex : "^Started preview cleanup for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Owncloud/CleanPreviewsBackgroundJob.php" , line : 60usize , placeholders : & ["$uid"] , exception : None , regex : "^New preview cleanup scheduled for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Owncloud/CleanPreviewsBackgroundJob.php" , line : 62usize , placeholders : & ["$uid"] , exception : None , regex : "^Preview cleanup done for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Owncloud/MoveAvatars.php" , line : 59usize , placeholders : & [] , exception : None , regex : "^Repair step already executed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Owncloud/MoveAvatars.php" , line : 63usize , placeholders : & [] , exception : None , regex : "^Avatars are disabled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Owncloud/MoveAvatars.php" , line : 65usize , placeholders : & [] , exception : None , regex : "^Add background job$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Owncloud/UpdateLanguageCodes.php" , line : 85usize , placeholders : & ["$affectedRows" , "$oldCode" , "$newCode"] , exception : None , regex : "^Changed (.*) setting\\(s\\) from \"(.*)\" to \"(.*)\" in preferences table\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Owncloud/MigrateOauthTables.php" , line : 50usize , placeholders : & [] , exception : None , regex : "^oauth2_clients table does not exist\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Owncloud/MigrateOauthTables.php" , line : 54usize , placeholders : & [] , exception : None , regex : "^Update the oauth2_access_tokens table schema\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Owncloud/MigrateOauthTables.php" , line : 76usize , placeholders : & [] , exception : None , regex : "^Update the oauth2_clients table schema\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Owncloud/MigrateOauthTables.php" , line : 123usize , placeholders : & [] , exception : None , regex : "^Move identifier column's data to the new client_identifier column\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Owncloud/MigrateOauthTables.php" , line : 140usize , placeholders : & [] , exception : None , regex : "^Drop the identifier column\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Owncloud/MigrateOauthTables.php" , line : 147usize , placeholders : & [] , exception : None , regex : "^Delete clients \\(and their related access tokens\\) with the redirect_uri starting with oc:// or ending with \\*$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Owncloud/MoveAvatarsBackgroundJob.php" , line : 58usize , placeholders : & [] , exception : None , regex : "^Started migrating avatars to AppData folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Owncloud/MoveAvatarsBackgroundJob.php" , line : 60usize , placeholders : & [] , exception : None , regex : "^All avatars migrated to AppData folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Owncloud/MoveAvatarsBackgroundJob.php" , line : 65usize , placeholders : & [] , exception : None , regex : "^No legacy avatars available, skipping migration$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Repair/Owncloud/MoveAvatarsBackgroundJob.php" , line : 82usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Failed to open old avatar file for reading$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Repair/Owncloud/MoveAvatarsBackgroundJob.php" , line : 87usize , placeholders : & ["$uid"] , exception : None , regex : "^Failed to migrate avatar for user (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Owncloud/MoveAvatarsBackgroundJob.php" , line : 92usize , placeholders : & [] , exception : None , regex : "^\\{amount\\} avatars migrated$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Repair/Owncloud/MoveAvatarsBackgroundJob.php" , line : 107usize , placeholders : & ["$path"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^(.*)/avatar\\.jpg\\|png$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Repair/NC25/AddMissingSecretJob.php" , line : 50usize , placeholders : & [] , exception : None , regex : "^passwordsalt is missing from your config\\.php and your config\\.php is read only\\. Please fix it manually\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Repair/NC25/AddMissingSecretJob.php" , line : 59usize , placeholders : & [] , exception : None , regex : "^secret is missing from your config\\.php and your config\\.php is read only\\. Please fix it manually\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/ClearGeneratedAvatarCache.php" , line : 63usize , placeholders : & [] , exception : None , regex : "^Avatar cache clearing job added$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Repair/ClearGeneratedAvatarCache.php" , line : 65usize , placeholders : & [] , exception : None , regex : "^Unable to clear the avatar cache$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Repair/NC21/ValidatePhoneNumber.php" , line : 58usize , placeholders : & [] , exception : None , regex : "^Can not validate phone numbers without `default_phone_region` being set in the config file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/NC21/ValidatePhoneNumber.php" , line : 85usize , placeholders : & ["$numUpdated" , "$numRemoved"] , exception : None , regex : "^Updated (.*) entries and cleaned (.*) invalid phone numbers$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/MoveUpdaterStepFile.php" , line : 55usize , placeholders : & [] , exception : None , regex : "^\\.step file exists$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/MoveUpdaterStepFile.php" , line : 62usize , placeholders : & [] , exception : None , regex : "^\\.step\\-previous\\-update removed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/MoveUpdaterStepFile.php" , line : 64usize , placeholders : & [] , exception : None , regex : "^\\.step\\-previous\\-update can't be removed \\- abort move of \\.step file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/MoveUpdaterStepFile.php" , line : 71usize , placeholders : & [] , exception : None , regex : "^\\.step file moved to \\.step\\-previous\\-update$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Repair/MoveUpdaterStepFile.php" , line : 73usize , placeholders : & [] , exception : None , regex : "^\\.step file can't be moved$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairMimeTypes.php" , line : 294usize , placeholders : & [] , exception : None , regex : "^Fixed image mime types$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairMimeTypes.php" , line : 298usize , placeholders : & [] , exception : None , regex : "^Fixed windows program mime types$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairMimeTypes.php" , line : 302usize , placeholders : & [] , exception : None , regex : "^Fixed geospatial mime types$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairMimeTypes.php" , line : 306usize , placeholders : & [] , exception : None , regex : "^Fixed internet\\-shortcut mime types$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairMimeTypes.php" , line : 310usize , placeholders : & [] , exception : None , regex : "^Fixed streaming mime types$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairMimeTypes.php" , line : 314usize , placeholders : & [] , exception : None , regex : "^Fixed visio mime types$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairMimeTypes.php" , line : 318usize , placeholders : & [] , exception : None , regex : "^Fixed comicbook mime types$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairMimeTypes.php" , line : 322usize , placeholders : & [] , exception : None , regex : "^Fixed OpenDocument template mime types$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairMimeTypes.php" , line : 326usize , placeholders : & [] , exception : None , regex : "^Fixed orgmode mime types$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairMimeTypes.php" , line : 330usize , placeholders : & [] , exception : None , regex : "^Fixed Flat OpenDocument mime types$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairMimeTypes.php" , line : 334usize , placeholders : & [] , exception : None , regex : "^Fixed ONLYOFFICE Forms OpenXML mime types$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairMimeTypes.php" , line : 338usize , placeholders : & [] , exception : None , regex : "^Fixed AsciiDoc mime types$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairMimeTypes.php" , line : 342usize , placeholders : & [] , exception : None , regex : "^Fixed Enhanced Metafile Format mime types$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairMimeTypes.php" , line : 346usize , placeholders : & [] , exception : None , regex : "^Fixed eml and msg mime type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairMimeTypes.php" , line : 350usize , placeholders : & [] , exception : None , regex : "^Fixed aac mime type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairMimeTypes.php" , line : 354usize , placeholders : & [] , exception : None , regex : "^Fixed ReStructured Text mime type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RemoveLinkShares.php" , line : 227usize , placeholders : & [] , exception : None , regex : "^Sending notifications to admins and affected users$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RemoveLinkShares.php" , line : 233usize , placeholders : & [] , exception : None , regex : "^No need to remove link shares\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RemoveLinkShares.php" , line : 237usize , placeholders : & [] , exception : None , regex : "^Removing potentially over exposing link shares$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RemoveLinkShares.php" , line : 239usize , placeholders : & [] , exception : None , regex : "^Removed potentially over exposing link shares$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/OldGroupMembershipShares.php" , line : 94usize , placeholders : & ["$deletedEntries"] , exception : None , regex : "^Removed (.*) shares where user is not a member of the group anymore$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairDavShares.php" , line : 114usize , placeholders : & ["{id}" , "{old}" , "{new}"] , exception : None , regex : "^Repaired principal for dav share (.*) from (.*) to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairDavShares.php" , line : 118usize , placeholders : & ["{id}" , "{old}" , "{new}" , "{message}"] , exception : None , regex : "^Could not repair principal for dav share (.*) from (.*) to (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairDavShares.php" , line : 132usize , placeholders : & [] , exception : None , regex : "^Repaired DAV group shares$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairDavShares.php" , line : 134usize , placeholders : & [] , exception : None , regex : "^Invalid shares might be left in the database, running \"occ dav:remove\\-invalid\\-shares\" can remove them\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/lib/private/Repair/AddAppConfigLazyMigration.php" , line : 60usize , placeholders : & ["$c"] , exception : None , regex : "^core/BackgroundJobs/AppConfigLazyMigration: (.*) config values updated$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairInvalidShares.php" , line : 72usize , placeholders : & ["$updatedEntries"] , exception : None , regex : "^Fixed file share permissions for (.*) shares$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/RepairInvalidShares.php" , line : 108usize , placeholders : & ["$deletedEntries"] , exception : None , regex : "^Removed (.*) shares where the parent did not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Repair/NC16/CleanupCardDAVPhotoCache.php" , line : 72usize , placeholders : & [] , exception : None , regex : "^Failed to fetch directory listing in CleanupCardDAVPhotoCache$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/NC16/CleanupCardDAVPhotoCache.php" , line : 84usize , placeholders : & ["count($folders)"] , exception : None , regex : "^Delete (.*) \"photo\\.\" files$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Repair/NC16/CleanupCardDAVPhotoCache.php" , line : 91usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Repair/NC16/CleanupCardDAVPhotoCache.php" , line : 92usize , placeholders : & ["$folder->getName()"] , exception : None , regex : "^Could not delete file \"dav\\-photocache/(.*)/photo\\.\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/NC11/FixMountStorages.php" , line : 72usize , placeholders : & ["$entriesUpdated"] , exception : None , regex : "^(.*) mounts updated$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/NC11/FixMountStorages.php" , line : 76usize , placeholders : & [] , exception : None , regex : "^No mounts updated$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/ClearFrontendCaches.php" , line : 53usize , placeholders : & [] , exception : None , regex : "^Image cache cleared$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/ClearFrontendCaches.php" , line : 56usize , placeholders : & [] , exception : None , regex : "^JS cache cleared$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Repair/ClearFrontendCaches.php" , line : 58usize , placeholders : & [] , exception : None , regex : "^Unable to clear the frontend cache$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Collation.php" , line : 73usize , placeholders : & [] , exception : None , regex : "^Not a mysql database \\-> nothing to do$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Collation.php" , line : 81usize , placeholders : & ["$table"] , exception : None , regex : "^Change row format for (.*) \\.\\.\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Repair/Collation.php" , line : 87usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Collation.php" , line : 93usize , placeholders : & ["$table"] , exception : None , regex : "^Change collation for (.*) \\.\\.\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Repair/Collation.php" , line : 99usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/Collation.php" , line : 106usize , placeholders : & [] , exception : None , regex : "^All tables already have the correct collation \\-> nothing to do$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Repair/NC20/ShippedDashboardEnable.php" , line : 48usize , placeholders : & [] , exception : None , regex : "^Removed old dashboard app config$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/MemoryInfo.php" , line : 75usize , placeholders : & ["$number"] , exception : Some ("InvalidArgumentException") , regex : "^(.*) is not a valid numeric string \\(in memory_limit ini directive\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/NaturalSort.php" , line : 45usize , placeholders : & ["get_class($injectedCollator)"] , exception : None , regex : "^forced use of (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Notification/Manager.php" , line : 106usize , placeholders : & ["$exception->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Notification/Manager.php" , line : 130usize , placeholders : & ["$appClass"] , exception : None , regex : "^Failed to load notification app class: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Notification/Manager.php" , line : 138usize , placeholders : & ["$appClass" , "IApp::class"] , exception : None , regex : "^Notification app class (.*) is not implementing (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Notification/Manager.php" , line : 162usize , placeholders : & ["$notifierService->getService()"] , exception : None , regex : "^Failed to load notification notifier class: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Notification/Manager.php" , line : 170usize , placeholders : & ["$notifierService->getService()" , "INotifier::class"] , exception : None , regex : "^Notification notifier class (.*) is not implementing (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Notification/Manager.php" , line : 190usize , placeholders : & ["$notifierClass"] , exception : None , regex : "^Failed to load notification notifier class: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Notification/Manager.php" , line : 198usize , placeholders : & ["$notifierClass" , "INotifier::class"] , exception : None , regex : "^Notification notifier class (.*) is not implementing (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Manager.php" , line : 309usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given notification is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Manager.php" , line : 360usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given notification has been processed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Manager.php" , line : 364usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given notification has not been handled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Notification/Manager.php" , line : 369usize , placeholders : & ["$notification->getApp()" , "$notification->getSubject()"] , exception : None , regex : "^Notification was not parsed by any notifier \\[app: (.*), subject: (.*)\\]$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Manager.php" , line : 370usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given notification has not been handled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Notification.php" , line : 72usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given app name is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Notification.php" , line : 94usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given user id is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Notification.php" , line : 116usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given date time is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Notification.php" , line : 139usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given object type is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Notification.php" , line : 144usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given object id is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Notification.php" , line : 175usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given subject is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Notification.php" , line : 208usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given parsed subject is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Notification.php" , line : 231usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given parsed subject is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Notification.php" , line : 254usize , placeholders : & ["$requiredField"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid rich object, (.*) field is missing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Notification.php" , line : 293usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given message is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Notification.php" , line : 326usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given parsed message is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Notification.php" , line : 349usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given parsed message is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Notification.php" , line : 386usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given link is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Notification.php" , line : 408usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given icon is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Notification.php" , line : 438usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given action is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Notification.php" , line : 443usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The notification already has a primary action$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Notification.php" , line : 469usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given parsed action is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Notification.php" , line : 474usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The notification already has a primary action$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Action.php" , line : 58usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given label is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Action.php" , line : 80usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given parsed label is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Action.php" , line : 121usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given link is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Notification/Action.php" , line : 130usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The given request type is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Teams/TeamManager.php" , line : 77usize , placeholders : & ["$providerId"] , exception : Some ("RuntimeException") , regex : "^No provider found for id (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/ServerContainer.php" , line : 89usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\QueryException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/ServerContainer.php" , line : 118usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\QueryException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/IntegrityCheck/Checker.php" , line : 236usize , placeholders : & ["$appInfoDir"] , exception : Some ("Exception") , regex : "^(.*) is not writable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/IntegrityCheck/Checker.php" , line : 265usize , placeholders : & ["$coreDir"] , exception : Some ("Exception") , regex : "^(.*) is not writable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/IntegrityCheck/Checker.php" , line : 306usize , placeholders : & [] , exception : Some ("OC\\IntegrityCheck\\Exceptions\\InvalidSignatureException") , regex : "^Signature data not found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/IntegrityCheck/Checker.php" , line : 324usize , placeholders : & [] , exception : Some ("OC\\IntegrityCheck\\Exceptions\\InvalidSignatureException") , regex : "^Certificate is not valid\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/IntegrityCheck/Checker.php" , line : 328usize , placeholders : & ["sprintf('Certificate is not valid for required scope. (Requested: %s, current: CN=%s)', $certificateCN, $x509->getDN(true)['CN'])"] , exception : Some ("OC\\IntegrityCheck\\Exceptions\\InvalidSignatureException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/IntegrityCheck/Checker.php" , line : 341usize , placeholders : & [] , exception : Some ("OC\\IntegrityCheck\\Exceptions\\InvalidSignatureException") , regex : "^Signature could not get verified\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/IntegrityCheck/Checker.php" , line : 386usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid behaviour in file hash comparison experienced\\. Please report this error to the developers\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/IntegrityCheck/Helpers/AppLocator.php" , line : 47usize , placeholders : & [] , exception : Some ("Exception") , regex : "^App not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/IntegrityCheck/Helpers/FileAccessHelper.php" , line : 68usize , placeholders : & ["$filename"] , exception : Some ("Exception") , regex : "^Failed to write into (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/IntegrityCheck/Helpers/FileAccessHelper.php" , line : 87usize , placeholders : & ["$path"] , exception : Some ("Exception") , regex : "^Directory (.*) does not exist\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/TextToImage/Manager.php" , line : 91usize , placeholders : & ["$class"] , exception : None , regex : "^Failed to load Text to image provider (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/TextToImage/Manager.php" , line : 115usize , placeholders : & [] , exception : None , regex : "^Running TextToImage Task$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextToImage/Manager.php" , line : 117usize , placeholders : & [] , exception : Some ("OCP\\PreConditionNotMetException") , regex : "^No text to image provider is installed that can handle this task$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/TextToImage/Manager.php" , line : 122usize , placeholders : & ["$provider::class"] , exception : None , regex : "^Trying to run Text2Image provider (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/TextToImage/Manager.php" , line : 129usize , placeholders : & [] , exception : None , regex : "^Inserting Text2Image task into DB$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/TextToImage/Manager.php" , line : 133usize , placeholders : & [] , exception : None , regex : "^Updating Text2Image task in DB$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/TextToImage/Manager.php" , line : 139usize , placeholders : & [] , exception : None , regex : "^Creating folder in appdata for Text2Image results$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/TextToImage/Manager.php" , line : 145usize , placeholders : & [] , exception : None , regex : "^Creating new folder in appdata Text2Image results folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/TextToImage/Manager.php" , line : 148usize , placeholders : & [] , exception : None , regex : "^Creating result files for Text2Image task$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextToImage/Manager.php" , line : 158usize , placeholders : & ["$provider->getName()"] , exception : Some ("RuntimeException") , regex : "^Text2Image generation using provider \"(.*)\" failed: Couldn't open file to write\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/TextToImage/Manager.php" , line : 161usize , placeholders : & [] , exception : None , regex : "^Calling Text2Image provider's generate method$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/TextToImage/Manager.php" , line : 173usize , placeholders : & [] , exception : None , regex : "^Updating Text2Image task in DB$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/TextToImage/Manager.php" , line : 182usize , placeholders : & [] , exception : None , regex : "^Failed to clean up Text2Image result file after error$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/TextToImage/Manager.php" , line : 187usize , placeholders : & ["$provider->getName()"] , exception : None , regex : "^Text2Image generation using provider \"(.*)\" failed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/TextToImage/Manager.php" , line : 192usize , placeholders : & [] , exception : None , regex : "^Failed to update database after Text2Image error$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextToImage/Manager.php" , line : 194usize , placeholders : & ["$provider->getName()" , "$e->getMessage()"] , exception : Some ("OCP\\TextToImage\\Exception\\TaskFailureException") , regex : "^Text2Image generation using provider \"(.*)\" failed: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/TextToImage/Manager.php" , line : 202usize , placeholders : & [] , exception : None , regex : "^Failed to update database after Text2Image error$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextToImage/Manager.php" , line : 204usize , placeholders : & [] , exception : Some ("OCP\\TextToImage\\Exception\\TaskFailureException") , regex : "^Could not run task$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextToImage/Manager.php" , line : 212usize , placeholders : & [] , exception : Some ("OCP\\PreConditionNotMetException") , regex : "^No text to image provider is installed that can handle this task$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/TextToImage/Manager.php" , line : 214usize , placeholders : & [] , exception : None , regex : "^Scheduling Text2Image Task$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextToImage/Manager.php" , line : 232usize , placeholders : & [] , exception : Some ("OCP\\PreConditionNotMetException") , regex : "^No text to image provider is installed that can handle this task$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextToImage/Manager.php" , line : 268usize , placeholders : & [] , exception : Some ("OCP\\TextToImage\\Exception\\TaskNotFoundException") , regex : "^Could not find task with the provided id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextToImage/Manager.php" , line : 270usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Could not uniquely identify task with given id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextToImage/Manager.php" , line : 272usize , placeholders : & ["$e->getMessage()"] , exception : Some ("RuntimeException") , regex : "^Failure while trying to find task by id: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextToImage/Manager.php" , line : 291usize , placeholders : & [] , exception : Some ("OCP\\TextToImage\\Exception\\TaskNotFoundException") , regex : "^Could not find task with the provided id and user id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextToImage/Manager.php" , line : 293usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Could not uniquely identify task with given id and user id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextToImage/Manager.php" , line : 295usize , placeholders : & ["$e->getMessage()"] , exception : Some ("RuntimeException") , regex : "^Failure while trying to find task by id and user id: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextToImage/Manager.php" , line : 317usize , placeholders : & ["$e->getMessage()"] , exception : Some ("RuntimeException") , regex : "^Failure while trying to find tasks by appId and identifier: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/TextToImage/Manager.php" , line : 335usize , placeholders : & [] , exception : None , regex : "^Failed to decode Text2Image setting `ai\\.text2image_provider`$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/TextToImage/RemoveOldTasksBackgroundJob.php" , line : 69usize , placeholders : & [] , exception : None , regex : "^Failed to delete stale text to image task files$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/TextToImage/RemoveOldTasksBackgroundJob.php" , line : 73usize , placeholders : & [] , exception : None , regex : "^Failed to delete stale text to image tasks$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/App/CompareVersion.php" , line : 52usize , placeholders : & ["$actual"] , exception : Some ("InvalidArgumentException") , regex : "^version specification (.*) is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/App/CompareVersion.php" , line : 63usize , placeholders : & ["$required"] , exception : Some ("InvalidArgumentException") , regex : "^required version (.*) is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/App/AppStore/Bundles/BundleFetcher.php" , line : 63usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Bundle with specified identifier does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/App/AppStore/Version/VersionParser.php" , line : 78usize , placeholders : & ["sprintf(\n\t\t\t\t'Version cannot be parsed: %s',\n\t\t\t\t$versionSpec\n\t\t\t)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/App/AppStore/Fetcher/Fetcher.php" , line : 196usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Could not connect to appstore: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/App/AppStore/Fetcher/Fetcher.php" , line : 199usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/App/AppStore/Fetcher/AppFetcher.php" , line : 127usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/App/PlatformRepository.php" , line : 82usize , placeholders : & [] , exception : None , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/App/PlatformRepository.php" , line : 207usize , placeholders : & ["$version" , "$extraMessage"] , exception : Some ("UnexpectedValueException") , regex : "^Invalid version string \"(.*)\"(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Emergency , path : "/lib/private/App/AppManager.php" , line : 218usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error during app loading: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/App/AppManager.php" , line : 327usize , placeholders : & ["print_r($enabled, true)" , "$jsonError"] , exception : None , regex : "^AppManger::checkAppForUser \\- can't decode group IDs: (.*) \\- json error code: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/App/AppManager.php" , line : 353usize , placeholders : & ["print_r($enabled, true)" , "$jsonError"] , exception : None , regex : "^AppManger::checkAppForUser \\- can't decode group IDs: (.*) \\- json error code: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/App/AppManager.php" , line : 407usize , placeholders : & [] , exception : None , regex : "^/appinfo/app\\.php is not loaded when \\\\OCP\\\\AppFramework\\\\Bootstrap\\\\IBootstrap on the application class is used\\. Migrate everything from app\\.php to the Application class\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/App/AppManager.php" , line : 412usize , placeholders : & [] , exception : None , regex : "^/appinfo/app\\.php is deprecated, use \\\\OCP\\\\AppFramework\\\\Bootstrap\\\\IBootstrap on the application class instead\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/App/AppManager.php" , line : 422usize , placeholders : & ["$app" , "$ex->getMessage()"] , exception : None , regex : "^App (.*) threw an error during app\\.php load and will be disabled: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/App/AppManager.php" , line : 429usize , placeholders : & ["$app" , "$ex->getMessage()"] , exception : None , regex : "^App (.*) threw an error during app\\.php load: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/App/AppManager.php" , line : 582usize , placeholders : & ["$appId"] , exception : Some ("InvalidArgumentException") , regex : "^(.*) can't be enabled for groups\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/App/AppManager.php" , line : 615usize , placeholders : & ["$appId"] , exception : Some ("Exception") , regex : "^(.*) can't be disabled\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/App/AppManager.php" , line : 652usize , placeholders : & ["$appId"] , exception : Some ("OCP\\App\\AppPathNotFoundException") , regex : "^Could not find path for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/App/AppManager.php" , line : 667usize , placeholders : & ["$appId"] , exception : Some ("OCP\\App\\AppPathNotFoundException") , regex : "^Could not find web path for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/App/AppManager.php" , line : 793usize , placeholders : & ["$shippedJson"] , exception : Some ("Exception") , regex : "^File not found: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/App/AppManager.php" , line : 874usize , placeholders : & [] , exception : None , regex : "^Can not set not installed app as default app$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/App/AppManager.php" , line : 875usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^App is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Translation/TranslationManager.php" , line : 70usize , placeholders : & [] , exception : Some ("OCP\\PreConditionNotMetException") , regex : "^No translation providers available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Translation/TranslationManager.php" , line : 109usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Could not detect language$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Translation/TranslationManager.php" , line : 124usize , placeholders : & ["$fromLanguage" , "$toLanguage" , "$provider->getName()"] , exception : None , regex : "^Failed to translate from (.*) to (.*) using provider (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Translation/TranslationManager.php" , line : 128usize , placeholders : & ["$fromLanguage"] , exception : Some ("OCP\\Translation\\CouldNotTranslateException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Translation/TranslationManager.php" , line : 144usize , placeholders : & ["$class"] , exception : None , regex : "^Failed to load translation provider (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Files/Storage/Wrapper/Encryption.php" , line : 469usize , placeholders : & ["$encryptionModuleId"] , exception : None , regex : "^Encryption module \"(.*)\" not found, file will be stored unencrypted$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Storage/Wrapper/Encryption.php" , line : 525usize , placeholders : & ["$path"] , exception : None , regex : "^Couldn't re\\-calculate unencrypted size for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Storage/Wrapper/Encryption.php" , line : 552usize , placeholders : & ["$path"] , exception : None , regex : "^Could not open (.*)\\. Recalculation of unencrypted size aborted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Storage/Wrapper/Encryption.php" , line : 816usize , placeholders : & [] , exception : None , regex : "^Could not find mount point, can't keep encryption keys$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/lib/private/Files/Storage/Wrapper/Encryption.php" , line : 997usize , placeholders : & ["$path"] , exception : None , regex : "^Encryption module defined in \"(.*)\" not loaded!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/Wrapper/Availability.php" , line : 93usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/Wrapper/Quota.php" , line : 68usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No quota or quota callback provider$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Storage/Wrapper/Wrapper.php" , line : 69usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Files/Storage/Common.php" , line : 249usize , placeholders : & ["$source" , "$target"] , exception : None , regex : "^Failed to write data while copying (.*) to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Files/Storage/Common.php" , line : 473usize , placeholders : & [] , exception : None , regex : "^External storage not available: stat\\(\\) failed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Files/Storage/Common.php" , line : 476usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^External storage not available: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/Common.php" , line : 537usize , placeholders : & [] , exception : Some ("OCP\\Files\\EmptyFileNameException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/Common.php" , line : 541usize , placeholders : & [] , exception : Some ("OCP\\Files\\InvalidDirectoryException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/Common.php" , line : 551usize , placeholders : & [] , exception : Some ("OCP\\Files\\InvalidCharacterInPathException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/Common.php" , line : 558usize , placeholders : & [] , exception : Some ("OCP\\Files\\FileNameTooLongException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/Common.php" , line : 576usize , placeholders : & [] , exception : Some ("OCP\\Files\\ReservedWordException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/Common.php" , line : 588usize , placeholders : & [] , exception : Some ("OCP\\Files\\InvalidCharacterInPathException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/Common.php" , line : 594usize , placeholders : & [] , exception : Some ("OCP\\Files\\InvalidCharacterInPathException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Files/Storage/Common.php" , line : 645usize , placeholders : & [] , exception : None , regex : "^Failed to copy stream to storage$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/Common.php" , line : 721usize , placeholders : & ["$path"] , exception : Some ("OCP\\Files\\ForbiddenException") , regex : "^Invalid path: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Files/Storage/Common.php" , line : 759usize , placeholders : & ["sprintf(\n\t\t\t\t\t'acquire %s lock on \"%s\" on storage \"%s\"',\n\t\t\t\t\t$typeString,\n\t\t\t\t\t$path,\n\t\t\t\t\t$this->getId()\n\t\t\t\t)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Files/Storage/Common.php" , line : 776usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Files/Storage/Common.php" , line : 792usize , placeholders : & ["sprintf(\n\t\t\t\t\t'release %s lock on \"%s\" on storage \"%s\"',\n\t\t\t\t\t$typeString,\n\t\t\t\t\t$path,\n\t\t\t\t\t$this->getId()\n\t\t\t\t)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Files/Storage/Common.php" , line : 809usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Files/Storage/Common.php" , line : 825usize , placeholders : & ["sprintf(\n\t\t\t\t\t'change lock on \"%s\" to %s on storage \"%s\"',\n\t\t\t\t\t$path,\n\t\t\t\t\t$typeString,\n\t\t\t\t\t$this->getId()\n\t\t\t\t)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Files/Storage/Common.php" , line : 842usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/Common.php" , line : 888usize , placeholders : & ["$path"] , exception : Some ("OCP\\Files\\GenericFileException") , regex : "^Failed to open (.*) for writing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/Common.php" , line : 893usize , placeholders : & [] , exception : Some ("OCP\\Files\\GenericFileException") , regex : "^Failed to copy stream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/Common.php" , line : 906usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^Directory listing failed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 46usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Missing \"exception\" argument in FailedStorage constructor$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 56usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 60usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 64usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 68usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 72usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 76usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 80usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 84usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 88usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 92usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 96usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 100usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 104usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 108usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 112usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 116usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 120usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 124usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 128usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 132usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 136usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 140usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 144usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 148usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 152usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 156usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 160usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 164usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 168usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 172usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 176usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 184usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 188usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 192usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 196usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 200usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 204usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/FailedStorage.php" , line : 208usize , placeholders : & ["$this->e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/Local.php" , line : 81usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^No data directory set for local storage$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/Local.php" , line : 106usize , placeholders : & ["$this->getSourcePath('')"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^Local storage path does not exist \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/Local.php" , line : 359usize , placeholders : & ["$file->getPathname()"] , exception : Some ("OCP\\Files\\ForbiddenException") , regex : "^Invalid path: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Storage/Local.php" , line : 369usize , placeholders : & ["$srcParent"] , exception : None , regex : "^unable to rename, source directory is not writable : (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Storage/Local.php" , line : 374usize , placeholders : & ["$dstParent"] , exception : None , regex : "^unable to rename, destination directory is not writable : (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Storage/Local.php" , line : 379usize , placeholders : & ["$source"] , exception : None , regex : "^unable to rename, file does not exists : (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/Local.php" , line : 514usize , placeholders : & ["$path"] , exception : Some ("OCP\\Files\\ForbiddenException") , regex : "^Invalid path: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Storage/Local.php" , line : 539usize , placeholders : & ["$fullPath" , "$realPath" , "$this->realDataDir"] , exception : None , regex : "^Following symlinks is not allowed \\('(.*)' \\-> '(.*)' not inside '(.*)'\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/Local.php" , line : 540usize , placeholders : & [] , exception : Some ("OCP\\Files\\ForbiddenException") , regex : "^Following symlinks is not allowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/Local.php" , line : 655usize , placeholders : & ["$path"] , exception : Some ("OCP\\Files\\GenericFileException") , regex : "^Failed write stream to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/DAV.php" , line : 151usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid webdav storage configuration$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Files/Storage/DAV.php" , line : 195usize , placeholders : & ["$request->getMethod()" , "$request->getAbsoluteUrl()"] , exception : None , regex : "^sending dav (.*) request to external storage: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Files/Storage/DAV.php" , line : 201usize , placeholders : & ["$request->getMethod()" , "$request->getAbsoluteUrl()" , "round($elapsed * 1000, 1)"] , exception : None , regex : "^dav (.*) request to external storage: (.*) took (.*)ms$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/DAV.php" , line : 383usize , placeholders : & ["$path"] , exception : Some ("OCP\\Lock\\LockedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Storage/DAV.php" , line : 385usize , placeholders : & ["$response->getStatusCode()"] , exception : None , regex : "^Guzzle get returned status code (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/DAV.php" , line : 598usize , placeholders : & ["$path"] , exception : Some ("OCP\\Files\\ForbiddenException") , regex : "^Invalid path: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/DAV.php" , line : 817usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^root is gone$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/DAV.php" , line : 846usize , placeholders : & ["get_class($e)" , "$e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Files/Storage/DAV.php" , line : 874usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/DAV.php" , line : 877usize , placeholders : & ["$path"] , exception : Some ("OCP\\Lock\\LockedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/DAV.php" , line : 881usize , placeholders : & ["get_class($e)" , "$e->getMessage()"] , exception : Some ("OCP\\Files\\StorageInvalidException") , regex : "^(.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/DAV.php" , line : 887usize , placeholders : & ["get_class($e)" , "$e->getMessage()"] , exception : Some ("OCP\\Files\\ForbiddenException") , regex : "^(.*):(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/DAV.php" , line : 889usize , placeholders : & ["get_class($e)" , "$e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/DAV.php" , line : 892usize , placeholders : & ["get_class($e)" , "$e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/DAV.php" , line : 896usize , placeholders : & ["get_class($e)" , "$e->getMessage()"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^(.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Storage/StorageFactory.php" , line : 102usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid result from storage wrapper$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Mount/RootMountProvider.php" , line : 59usize , placeholders : & [] , exception : None , regex : "^No class given for objectstore$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Mount/ObjectHomeMountProvider.php" , line : 83usize , placeholders : & [] , exception : None , regex : "^No class given for objectstore$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Mount/ObjectHomeMountProvider.php" , line : 108usize , placeholders : & [] , exception : None , regex : "^No class given for objectstore$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Mount/ObjectStorePreviewCacheMountProvider.php" , line : 106usize , placeholders : & [] , exception : None , regex : "^No class given for objectstore$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Mount/ObjectStorePreviewCacheMountProvider.php" , line : 135usize , placeholders : & [] , exception : None , regex : "^No class given for objectstore$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Mount/Manager.php" , line : 109usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No mounts even after explicitly setting up the root mounts$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Mount/Manager.php" , line : 129usize , placeholders : & ["$path" , "count($this->mounts)" , "implode(\",\", array_keys($this->mounts))"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^No mount for path (.*) existing mounts \\((.*)\\): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Mount/MountPoint.php" , line : 132usize , placeholders : & ["$mountProvider"] , exception : Some ("Exception") , regex : "^Mount provider (.*) name exceeds the limit of 128 characters$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Mount/MountPoint.php" , line : 175usize , placeholders : & [] , exception : Some ("Exception") , regex : "^The root storage could not be initialized\\. Please contact your local administrator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Mount/MountPoint.php" , line : 177usize , placeholders : & ["$exception->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Mount/MountPoint.php" , line : 182usize , placeholders : & ["$this->class"] , exception : None , regex : "^Storage backend (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/SimpleFS/NewSimpleFile.php" , line : 140usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^File not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/SimpleFS/NewSimpleFile.php" , line : 156usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^File does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/SimpleFS/SimpleFolder.php" , line : 78usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/SimpleFS/SimpleFolder.php" , line : 98usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/SimpleFS/SimpleFile.php" , line : 122usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^File does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/AppData/AppData.php" , line : 67usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^no instance id!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/AppData/AppData.php" , line : 84usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Could not get appdata folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/AppData/AppData.php" , line : 108usize , placeholders : & ["$this->appId"] , exception : Some ("RuntimeException") , regex : "^Could not get appdata folder for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Lock/LockManager.php" , line : 17usize , placeholders : & [] , exception : Some ("OCP\\PreConditionNotMetException") , regex : "^There is already a registered lock provider$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Lock/LockManager.php" , line : 34usize , placeholders : & ["$this->lockInScope"] , exception : Some ("OCP\\PreConditionNotMetException") , regex : "^Could not obtain lock scope as already in use by (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Lock/LockManager.php" , line : 51usize , placeholders : & [] , exception : Some ("OCP\\PreConditionNotMetException") , regex : "^No lock provider available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Lock/LockManager.php" , line : 59usize , placeholders : & [] , exception : Some ("OCP\\PreConditionNotMetException") , regex : "^No lock provider available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Lock/LockManager.php" , line : 67usize , placeholders : & [] , exception : Some ("OCP\\PreConditionNotMetException") , regex : "^No lock provider available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Files/SetupManager.php" , line : 429usize , placeholders : & ["$cachedMount->getMountPoint()"] , exception : None , regex : "^mount at (.*) has no provider set, performing full setup$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Files/SetupManager.php" , line : 446usize , placeholders : & [] , exception : None , regex : "^mount has no provider set, performing full setup$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Files/Type/Detection.php" , line : 135usize , placeholders : & ["$fileName" , "json_last_error_msg()"] , exception : None , regex : "^Failed to parse (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Type/Loader.php" , line : 132usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Database threw an unique constraint on inserting a new mimetype, but couldn't return the ID for this very mimetype$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Stream/Encryption.php" , line : 248usize , placeholders : & ["$property"] , exception : Some ("BadMethodCallException") , regex : "^Invalid context, \"(.*)\" options not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Stream/SeekableHttpStream.php" , line : 111usize , placeholders : & ["get_class($responseHead)"] , exception : Some ("Exception") , regex : "^Failed to get source stream from stream wrapper of (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/QuerySearchHelper.php" , line : 221usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^This search operation requires the user to be set in the query$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Files/Cache/Scanner.php" , line : 127usize , placeholders : & ["$path"] , exception : None , regex : "^!!! Path '(.*)' is not accessible or present !!!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Files/Cache/Scanner.php" , line : 519usize , placeholders : & ["$originalFile" , "$path"] , exception : None , regex : "^Scanner: Skipping non\\-normalized file name \"(.*)\" in path \"(.*)\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Files/Cache/Scanner.php" , line : 554usize , placeholders : & ["$child"] , exception : None , regex : "^Exception while scanning file \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Files/Cache/Propagator.php" , line : 146usize , placeholders : & [] , exception : None , regex : "^Retrying propagation query after retryable exception\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/Propagator.php" , line : 194usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Not in batch$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/SearchBuilder.php" , line : 159usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Binary operators inside \"not\" is not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/SearchBuilder.php" , line : 167usize , placeholders : & ["$operator->getType()"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid operator type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/SearchBuilder.php" , line : 172usize , placeholders : & ["get_class($operator)"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid operator type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/SearchBuilder.php" , line : 192usize , placeholders : & ["$comparison->getType()"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid operator type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/SearchBuilder.php" , line : 239usize , placeholders : & ["$value"] , exception : Some ("InvalidArgumentException") , regex : "^Unsupported query value for mimetype: (.*), only values in the format \"mime/type\" or \"mime/%\" are supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/SearchBuilder.php" , line : 285usize , placeholders : & ["$operator->getField()"] , exception : Some ("InvalidArgumentException") , regex : "^Unsupported comparison field (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/SearchBuilder.php" , line : 290usize , placeholders : & ["$operator->getField()"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid type for field (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/SearchBuilder.php" , line : 294usize , placeholders : & ["$operator->getField()"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid type in array for field (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/SearchBuilder.php" , line : 299usize , placeholders : & ["$operator->getField()"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid type for field (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/SearchBuilder.php" , line : 303usize , placeholders : & ["$operator->getField()" , "$operator->getType()"] , exception : Some ("InvalidArgumentException") , regex : "^Unsupported comparison for field  (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/SearchBuilder.php" , line : 320usize , placeholders : & ["$operator->getExtra()"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid extra type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/Storage.php" , line : 87usize , placeholders : & ["$this->storageId"] , exception : Some ("RuntimeException") , regex : "^Storage could neither be inserted nor be selected from the database: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Files/Cache/Storage.php" , line : 174usize , placeholders : & ["$this->storageId"] , exception : None , regex : "^Storage with (.*) marked as unavailable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Files/Cache/Updater.php" , line : 269usize , placeholders : & [] , exception : None , regex : "^Error while updating parent storage_mtime, should be safe to ignore$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/FailedCache.php" , line : 142usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid cache$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/Cache.php" , line : 347usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^File entry could not be inserted but could also not be selected with getId\\(\\) in order to perform an update\\. Please try again\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/Cache.php" , line : 683usize , placeholders : & ["$sourcePath"] , exception : Some ("Exception") , regex : "^Invalid source storage path: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/Cache.php" , line : 693usize , placeholders : & ["$sourceStorageId"] , exception : Some ("Exception") , regex : "^Invalid source storage id: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/Cache.php" , line : 696usize , placeholders : & ["$targetStorageId"] , exception : Some ("Exception") , regex : "^Invalid target storage id: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/Cache.php" , line : 1166usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Invalid source cache entry on copyFromCache$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Cache/Cache.php" , line : 1177usize , placeholders : & ["$targetPath" , "json_encode($data)"] , exception : Some ("RuntimeException") , regex : "^Failed to copy to (.*) from cache with source data (.*) $" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 34usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 38usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 42usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 46usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 53usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 58usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 65usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 73usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 81usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 89usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 97usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 105usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 113usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 121usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 126usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 130usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 138usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 142usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 146usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 150usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 154usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 158usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 162usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 166usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 170usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFolder.php" , line : 177usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Folder.php" , line : 72usize , placeholders : & ["$path"] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^Invalid path \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Folder.php" , line : 162usize , placeholders : & ["$fullPath"] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^Could not create folder \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Folder.php" , line : 169usize , placeholders : & ["$path"] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^No create permission for folder \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Folder.php" , line : 181usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^Could not create as provided path is empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Folder.php" , line : 193usize , placeholders : & ["$fullPath"] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^Could not create path \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Folder.php" , line : 199usize , placeholders : & ["$path"] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^No create permission for path \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Folder.php" , line : 229usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^searching by owner is only allowed in the users home folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Folder.php" , line : 380usize , placeholders : & ["$this->path"] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^No delete permission for path \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Node/LazyUserFolder.php" , line : 50usize , placeholders : & ["$this->path"] , exception : None , regex : "^User root storage is not a folder: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/LazyUserFolder.php" , line : 77usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No mountpoint for user folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/LazyFolder.php" , line : 424usize , placeholders : & ["$path"] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^Invalid path \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFile.php" , line : 33usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFile.php" , line : 37usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFile.php" , line : 41usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFile.php" , line : 45usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFile.php" , line : 52usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFile.php" , line : 57usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFile.php" , line : 64usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFile.php" , line : 72usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFile.php" , line : 80usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFile.php" , line : 88usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFile.php" , line : 96usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFile.php" , line : 104usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFile.php" , line : 112usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFile.php" , line : 120usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFile.php" , line : 125usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFile.php" , line : 129usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFile.php" , line : 136usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/NonExistingFile.php" , line : 141usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/LazyRoot.php" , line : 47usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Lazy root folder closure didn't return a root folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Files/Node/HookConnector.php" , line : 134usize , placeholders : & [] , exception : None , regex : "^delete process aborted$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Files/Node/HookConnector.php" , line : 177usize , placeholders : & [] , exception : None , regex : "^rename process aborted$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Files/Node/HookConnector.php" , line : 202usize , placeholders : & [] , exception : None , regex : "^copy process aborted$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Node.php" , line : 75usize , placeholders : & [] , exception : Some ("OCP\\PreConditionNotMetException") , regex : "^The view passed to the node should not have any fake root set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Node.php" , line : 93usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Must be implemented by subclasses$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Node.php" , line : 106usize , placeholders : & [] , exception : Some ("OCP\\Files\\InvalidPathException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Node.php" , line : 113usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Node.php" , line : 177usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Node.php" , line : 184usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No storage for node$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Node.php" , line : 435usize , placeholders : & ["$this->path" , "$targetPath"] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^Could not copy (.*) to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Node.php" , line : 442usize , placeholders : & ["$targetPath"] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^No permission to copy to path (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Node.php" , line : 469usize , placeholders : & ["$this->path" , "$targetPath"] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^Could not move (.*) to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Node.php" , line : 486usize , placeholders : & ["$targetPath"] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^No permission to move to path (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Root.php" , line : 212usize , placeholders : & ["$path"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Root.php" , line : 215usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Root.php" , line : 227usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Root.php" , line : 231usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Root.php" , line : 240usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Root.php" , line : 248usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Root.php" , line : 256usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Root.php" , line : 348usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Node/Root.php" , line : 371usize , placeholders : & ["sprintf(\n\t\t\t\t\t'Backends provided no user object for %s',\n\t\t\t\t\t$userId\n\t\t\t\t)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Root.php" , line : 391usize , placeholders : & ["$userId"] , exception : Some ("Exception") , regex : "^Account folder for \"(.*)\" exists as a file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Root.php" , line : 487usize , placeholders : & [] , exception : Some ("Exception") , regex : "^getByIdInPath with non folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/Root.php" , line : 533usize , placeholders : & ["$parentPath"] , exception : Some ("Exception") , regex : "^parent (.*) is not a folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/File.php" , line : 56usize , placeholders : & [] , exception : Some ("OCP\\Files\\GenericFileException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/File.php" , line : 60usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/File.php" , line : 74usize , placeholders : & [] , exception : Some ("OCP\\Files\\GenericFileException") , regex : "^file_put_contents failed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/File.php" , line : 79usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/File.php" , line : 120usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Node/File.php" , line : 138usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Template/TemplateManager.php" , line : 154usize , placeholders : & ["$this->l10n->t('File already exists')"] , exception : Some ("OCP\\Files\\GenericFileException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Template/TemplateManager.php" , line : 159usize , placeholders : & ["$this->l10n->t('Invalid path')"] , exception : Some ("OCP\\Files\\GenericFileException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Template/TemplateManager.php" , line : 180usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Template/TemplateManager.php" , line : 181usize , placeholders : & ["$this->l10n->t('Failed to create file from template')"] , exception : Some ("OCP\\Files\\GenericFileException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Template/TemplateManager.php" , line : 195usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Template/TemplateManager.php" , line : 346usize , placeholders : & ["$userLang" , "$userId"] , exception : None , regex : "^Failed to initialize templates directory to user language (.*) for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/FileInfo.php" , line : 111usize , placeholders : & [] , exception : Some ("TypeError") , regex : "^Null offset not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Config/MountProviderCollection.php" , line : 174usize , placeholders : & ["$user"] , exception : Some ("Exception") , regex : "^No home storage configured for user (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Config/MountProviderCollection.php" , line : 243usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No root mounts provided by any provider$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Files/Config/UserMountCache.php" , line : 186usize , placeholders : & ["$mount->getMountPoint()"] , exception : None , regex : "^Could not get storage info for mount at (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Config/UserMountCache.php" , line : 356usize , placeholders : & ["$fileId"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^File with id \"(.*)\" not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Config/UserMountCache.php" , line : 501usize , placeholders : & ["$path"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^No cached mount for path (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Config/CachedMountInfo.php" , line : 66usize , placeholders : & ["$mountProvider"] , exception : Some ("Exception") , regex : "^Mount provider (.*) name exceeds the limit of 128 characters$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Utils/Scanner.php" , line : 189usize , placeholders : & ["$mount->getMountPoint()" , "$e->getMessage()"] , exception : None , regex : "^Error while trying to scan mount as (.*):(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Utils/Scanner.php" , line : 203usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid path to scan$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Utils/Scanner.php" , line : 227usize , placeholders : & ["$fullPath"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^User folder (.*) exists in cache but not on disk$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Utils/Scanner.php" , line : 233usize , placeholders : & ["$fullPath" , "$owner" , "$permissions"] , exception : Some ("OC\\ForbiddenException") , regex : "^User folder (.*) is not writable, folders is owned by (.*) and has mode (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Utils/Scanner.php" , line : 269usize , placeholders : & ["$dir"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/Utils/Scanner.php" , line : 286usize , placeholders : & ["$storage->getId()"] , exception : None , regex : "^Storage (.*) not available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/S3ConnectionTrait.php" , line : 57usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Bucket has to be configured\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Files/ObjectStore/S3ConnectionTrait.php" , line : 148usize , placeholders : & ["$this->bucket"] , exception : None , regex : "^Bucket \"(.*)\" This bucket name is not dns compatible, it may contain invalid characters\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Files/ObjectStore/S3ConnectionTrait.php" , line : 155usize , placeholders : & ["$this->bucket"] , exception : None , regex : "^Bucket \"(.*)\" does not exist \\- creating it\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/S3ConnectionTrait.php" , line : 157usize , placeholders : & ["$this->bucket"] , exception : Some ("Exception") , regex : "^The bucket will not be created because the name is not dns compatible, please correct it: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Files/ObjectStore/S3ConnectionTrait.php" , line : 162usize , placeholders : & [] , exception : None , regex : "^Invalid remote storage\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/S3ConnectionTrait.php" , line : 167usize , placeholders : & ["$this->bucket" , "$e->getMessage()"] , exception : Some ("Exception") , regex : "^Creation of bucket \"(.*)\" failed\\. (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/S3ObjectTrait.php" , line : 95usize , placeholders : & ["$urn"] , exception : Some ("Exception") , regex : "^Failed to read object (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/S3ObjectTrait.php" , line : 150usize , placeholders : & [] , exception : Some ("OCA\\DAV\\Connector\\Sabre\\Exception\\BadGateway") , regex : "^Error while uploading to S3 bucket$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/Swift.php" , line : 120usize , placeholders : & ["$urn"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^object (.*) not found in object store$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/SwiftFactory.php" , line : 82usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageAuthException") , regex : "^Unauthenticated ObjectStore connection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/SwiftFactory.php" , line : 162usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageAuthException") , regex : "^Scope has to be defined for V3 requests$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Files/ObjectStore/SwiftFactory.php" , line : 187usize , placeholders : & ["json_encode($cachedToken)"] , exception : None , regex : "^Invalid cached token for swift, no catalog set: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Files/ObjectStore/SwiftFactory.php" , line : 189usize , placeholders : & [] , exception : None , regex : "^Cached token for swift expired$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Files/ObjectStore/SwiftFactory.php" , line : 203usize , placeholders : & [] , exception : None , regex : "^Cached token for swift expired$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/ObjectStore/SwiftFactory.php" , line : 206usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/SwiftFactory.php" , line : 217usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageAuthException") , regex : "^Failed to connect to keystone, verify the keystone url$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/SwiftFactory.php" , line : 221usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageAuthException") , regex : "^Keystone not found, verify the keystone url$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/SwiftFactory.php" , line : 223usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageAuthException") , regex : "^Precondition failed, verify the keystone url$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/SwiftFactory.php" , line : 225usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageAuthException") , regex : "^Authentication failed, verify the username, password and possibly tenant$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/SwiftFactory.php" , line : 227usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageAuthException") , regex : "^Unknown error$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/SwiftFactory.php" , line : 230usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageAuthException") , regex : "^Connection reset while connecting to keystone, verify the keystone url$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/SwiftFactory.php" , line : 276usize , placeholders : & [] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^Invalid response while trying to get container info$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/ObjectStore/SwiftFactory.php" , line : 282usize , placeholders : & ["$host"] , exception : None , regex : "^Can't connect to object storage server at (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/SwiftFactory.php" , line : 283usize , placeholders : & ["$host"] , exception : Some ("OCP\\Files\\StorageNotAvailableException") , regex : "^Can't connect to object storage server at (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/AppdataPreviewObjectStoreStorage.php" , line : 37usize , placeholders : & [] , exception : Some ("Exception") , regex : "^missing id in parameters$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/StorageObjectStore.php" , line : 64usize , placeholders : & [] , exception : Some ("Exception") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/StorageObjectStore.php" , line : 73usize , placeholders : & [] , exception : Some ("Exception") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/ObjectStoreStorage.php" , line : 72usize , placeholders : & [] , exception : Some ("Exception") , regex : "^missing IObjectStore instance$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Files/ObjectStore/ObjectStoreStorage.php" , line : 93usize , placeholders : & ["$path"] , exception : None , regex : "^Tried to create an object store folder that already exists: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Files/ObjectStore/ObjectStoreStorage.php" , line : 117usize , placeholders : & ["$parent"] , exception : None , regex : "^Parent folder \\((.*)\\) doesn't exist and couldn't be created$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Files/ObjectStore/ObjectStoreStorage.php" , line : 122usize , placeholders : & ["$parent"] , exception : None , regex : "^Parent \\((.*)\\) is a file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/ObjectStore/ObjectStoreStorage.php" , line : 223usize , placeholders : & ["$this->getURN($entry->getId())" , "$entry->getPath()"] , exception : None , regex : "^Could not delete object (.*) for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/ObjectStore/ObjectStoreStorage.php" , line : 292usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/ObjectStore/ObjectStoreStorage.php" , line : 342usize , placeholders : & ["$this->getURN($stat['fileid'])" , "$path"] , exception : None , regex : "^Could not get object (.*) for file (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/ObjectStore/ObjectStoreStorage.php" , line : 351usize , placeholders : & ["$this->getURN($stat['fileid'])" , "$path"] , exception : None , regex : "^Could not get object (.*) for file (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/ObjectStore/ObjectStoreStorage.php" , line : 454usize , placeholders : & ["$path"] , exception : None , regex : "^Could not create object for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/ObjectStore/ObjectStoreStorage.php" , line : 555usize , placeholders : & ["$urn" , "$path"] , exception : None , regex : "^Could not create object (.*) for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/ObjectStore/ObjectStoreStorage.php" , line : 563usize , placeholders : & ["$urn" , "$path"] , exception : None , regex : "^Could not update object (.*) for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/ObjectStoreStorage.php" , line : 583usize , placeholders : & ["$urn" , "$path"] , exception : Some ("Exception") , regex : "^Object not found after writing \\(urn: (.*), path: (.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/ObjectStoreStorage.php" , line : 627usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Source object not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/ObjectStoreStorage.php" , line : 658usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid source cache for object store copy$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/ObjectStoreStorage.php" , line : 680usize , placeholders : & [] , exception : Some ("OCP\\Files\\GenericFileException") , regex : "^Object store does not support multipart upload$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/ObjectStoreStorage.php" , line : 699usize , placeholders : & [] , exception : Some ("OCP\\Files\\GenericFileException") , regex : "^Object store does not support multipart upload$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/ObjectStoreStorage.php" , line : 715usize , placeholders : & [] , exception : Some ("OCP\\Files\\GenericFileException") , regex : "^Object store does not support multipart upload$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/ObjectStore/ObjectStoreStorage.php" , line : 734usize , placeholders : & ["$urn" , "$writeToken"] , exception : None , regex : "^Could not compete multipart upload (.*) with uploadId (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/ObjectStoreStorage.php" , line : 741usize , placeholders : & [] , exception : Some ("OCP\\Files\\GenericFileException") , regex : "^Could not write chunked file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/ObjectStoreStorage.php" , line : 748usize , placeholders : & [] , exception : Some ("OCP\\Files\\GenericFileException") , regex : "^Object store does not support multipart upload$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/HomeObjectStoreStorage.php" , line : 44usize , placeholders : & [] , exception : Some ("Exception") , regex : "^missing user object in parameters$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/ObjectStore/S3.php" , line : 55usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No upload id returned$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 106usize , placeholders : & [] , exception : Some ("Exception") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 466usize , placeholders : & [] , exception : Some ("OCP\\Files\\UnseekableException") , regex : "^fseek error$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 474usize , placeholders : & ["$connectionStatus"] , exception : Some ("OCP\\Files\\ConnectionLostException") , regex : "^Connection lost\\. Status: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Files/View.php" , line : 560usize , placeholders : & [] , exception : None , regex : "^Error while setting modified time$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 634usize , placeholders : & ["$absolutePath"] , exception : Some ("OCP\\Files\\InvalidPathException") , regex : "^Path (.*) is not in the expected root$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 739usize , placeholders : & [] , exception : Some ("OCP\\Files\\ForbiddenException") , regex : "^Moving a folder into a child folder is forbidden$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/View.php" , line : 990usize , placeholders : & ["$mode" , "$path"] , exception : None , regex : "^invalid mode \\((.*)\\) for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Files/View.php" , line : 994usize , placeholders : & [] , exception : None , regex : "^Trying to open a file with a mode other than \"r\" or \"w\" can cause severe performance issues with some backends$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 1122usize , placeholders : & [] , exception : Some ("OCP\\Files\\InvalidPathException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Files/View.php" , line : 1413usize , placeholders : & ["$mount->getMountPoint()"] , exception : None , regex : "^Storage not valid for mountpoint: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/View.php" , line : 1515usize , placeholders : & ["$subStorage->getId()"] , exception : None , regex : "^Exception while scanning storage \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 1707usize , placeholders : & ["$path"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^(.*) not found while trying to get owner$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 1711usize , placeholders : & ["$path"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^(.*) has no owner$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 1779usize , placeholders : & ["sprintf('File with id \"%s\" has not been found.', $id)"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 1792usize , placeholders : & ["$pathLen" , "$maxLen" , "$path"] , exception : Some ("OCP\\Files\\InvalidPathException") , regex : "^Path length\\((.*)\\) exceeds max path length\\((.*)\\): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Files/View.php" , line : 1819usize , placeholders : & [] , exception : None , regex : "^It is not allowed to move one mount point into a shared folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 1868usize , placeholders : & ["$l->t('File name is a reserved word')"] , exception : Some ("OCP\\Files\\InvalidPathException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 1871usize , placeholders : & ["$l->t('File name contains at least one invalid character')"] , exception : Some ("OCP\\Files\\InvalidPathException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 1874usize , placeholders : & ["$l->t('File name is too long')"] , exception : Some ("OCP\\Files\\InvalidPathException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 1877usize , placeholders : & ["$l->t('Dot files are not allowed')"] , exception : Some ("OCP\\Files\\InvalidPathException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 1880usize , placeholders : & ["$l->t('Empty filename is not allowed')"] , exception : Some ("OCP\\Files\\InvalidPathException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 1963usize , placeholders : & ["$this->getPathRelativeToFiles($absolutePath)"] , exception : Some ("OCP\\Lock\\LockedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 2004usize , placeholders : & ["$this->getPathRelativeToFiles($absolutePath)"] , exception : Some ("OCP\\Lock\\LockedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 2010usize , placeholders : & ["$absolutePath"] , exception : Some ("OCP\\Lock\\LockedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Files/View.php" , line : 2140usize , placeholders : & ["{absolutePath}"] , exception : None , regex : "^\\$absolutePath must be relative to \"files\", value is \"(.*)\\$absolutePath must be relative to \"files\", value is \"\\{absolutePath\\}\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 2146usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^\\$absolutePath must be relative to \"files\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 2163usize , placeholders : & ["$this->getAbsolutePath($filename)"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^(.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/View.php" , line : 2172usize , placeholders : & ["$info['fileid']" , "$uid"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^File with id (.*) not found for user (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Files/Filesystem.php" , line : 204usize , placeholders : & ["{wrapper}"] , exception : None , regex : "^Storage wrapper '(.*)Storage wrapper '\\{wrapper\\}' was not registered via the 'OC_Filesystem \\- preSetup' hook which could cause potential problems\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Files/Filesystem.php" , line : 364usize , placeholders : & [] , exception : Some ("OC\\User\\NoUserException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Encryption/Update.php" , line : 159usize , placeholders : & ["$info->getId()"] , exception : Some ("InvalidArgumentException") , regex : "^No file found for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Encryption/Update.php" , line : 195usize , placeholders : & ["$this->uid" , "$file"] , exception : None , regex : "^Failed to update encryption module for (.*) (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Encryption/Keys/Storage.php" , line : 231usize , placeholders : & [] , exception : Some ("OC\\ServerNotAvailableException") , regex : "^Key is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Encryption/Keys/Storage.php" , line : 246usize , placeholders : & [] , exception : Some ("OC\\ServerNotAvailableException") , regex : "^Key has been modified$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Encryption/Keys/Storage.php" , line : 285usize , placeholders : & [] , exception : Some ("OC\\ServerNotAvailableException") , regex : "^Could not decrypt key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Encryption/Keys/Storage.php" , line : 290usize , placeholders : & [] , exception : Some ("OC\\ServerNotAvailableException") , regex : "^Invalid encryption key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Encryption/Keys/Storage.php" , line : 309usize , placeholders : & [] , exception : Some ("OC\\ServerNotAvailableException") , regex : "^Invalid encryption key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Encryption/Util.php" , line : 120usize , placeholders : & [] , exception : Some ("OC\\Encryption\\Exceptions\\ModuleDoesNotExistsException") , regex : "^Default encryption module missing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Encryption/Util.php" , line : 140usize , placeholders : & ["$key"] , exception : Some ("OC\\Encryption\\Exceptions\\EncryptionHeaderKeyExistsException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Encryption/Util.php" , line : 147usize , placeholders : & [] , exception : Some ("OC\\Encryption\\Exceptions\\EncryptionHeaderToLargeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Encryption/Util.php" , line : 228usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^path needs to be relative to the system wide data folder and point to a user specific file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Encryption/HookManager.php" , line : 60usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Inconsistent data, File unshared, but owner not found\\. Should not happen$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Encryption/Manager.php" , line : 78usize , placeholders : & [] , exception : Some ("OC\\ServiceUnavailableException") , regex : "^Key Storage is not ready$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Encryption/Manager.php" , line : 113usize , placeholders : & ["$id"] , exception : Some ("OC\\Encryption\\Exceptions\\ModuleAlreadyExistsException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Encryption/Manager.php" , line : 163usize , placeholders : & ["$message"] , exception : Some ("OC\\Encryption\\Exceptions\\ModuleDoesNotExistsException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Encryption/Manager.php" , line : 176usize , placeholders : & ["$message"] , exception : Some ("OC\\Encryption\\Exceptions\\ModuleDoesNotExistsException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Encryption/Manager.php" , line : 182usize , placeholders : & ["$message"] , exception : Some ("OC\\Encryption\\Exceptions\\ModuleDoesNotExistsException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Route/Router.php" , line : 342usize , placeholders : & [] , exception : Some ("Exception") , regex : "^not a callable action$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Route/Router.php" , line : 352usize , placeholders : & [] , exception : Some ("Exception") , regex : "^no action available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Route/Router.php" , line : 412usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Archive/ZIP.php" , line : 53usize , placeholders : & ["$source"] , exception : None , regex : "^Error while opening archive (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/SystemTag/SystemTagsInFilesDetector.php" , line : 70usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Could not climb up to root folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/SystemTag/SystemTagObjectMapper.php" , line : 105usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Limit is only allowed with a single tag$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/SystemTag/SystemTagObjectMapper.php" , line : 254usize , placeholders : & [] , exception : Some ("OCP\\SystemTag\\TagNotFoundException") , regex : "^Tags not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/SystemTag/SystemTagManager.php" , line : 82usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Tag id must be integer$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/SystemTag/SystemTagManager.php" , line : 108usize , placeholders : & [] , exception : Some ("OCP\\SystemTag\\TagNotFoundException") , regex : "^Tag id\\(s\\) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/SystemTag/SystemTagManager.php" , line : 169usize , placeholders : & ["$truncatedTagName" , "$userVisible" , "$userAssignable"] , exception : Some ("OCP\\SystemTag\\TagNotFoundException") , regex : "^Tag \\(\"(.*)\", (.*), (.*)\\) does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/SystemTag/SystemTagManager.php" , line : 194usize , placeholders : & ["$truncatedTagName" , "$userVisible" , "$userAssignable"] , exception : Some ("OCP\\SystemTag\\TagAlreadyExistsException") , regex : "^Tag \\(\"(.*)\", (.*), (.*)\\) already exists$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/SystemTag/SystemTagManager.php" , line : 229usize , placeholders : & [] , exception : Some ("OCP\\SystemTag\\TagNotFoundException") , regex : "^Tag does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/SystemTag/SystemTagManager.php" , line : 257usize , placeholders : & [] , exception : Some ("OCP\\SystemTag\\TagNotFoundException") , regex : "^Tag does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/SystemTag/SystemTagManager.php" , line : 262usize , placeholders : & ["$newName" , "$userVisible" , "$userAssignable"] , exception : Some ("OCP\\SystemTag\\TagAlreadyExistsException") , regex : "^Tag \\(\"(.*)\", (.*), (.*)\\) already exists$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/SystemTag/SystemTagManager.php" , line : 320usize , placeholders : & [] , exception : Some ("OCP\\SystemTag\\TagNotFoundException") , regex : "^Tag id\\(s\\) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/LDAP/NullLDAPProviderFactory.php" , line : 36usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No LDAP provider is available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Repair.php" , line : 127usize , placeholders : & ["$step->getName()"] , exception : None , regex : "^Exception while executing repair step (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Repair.php" , line : 150usize , placeholders : & ["$repairStep" , "$e->getMessage()"] , exception : Some ("Exception") , regex : "^Repair step '(.*)' can't be instantiated: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Repair.php" , line : 153usize , placeholders : & ["$repairStep"] , exception : Some ("Exception") , regex : "^Repair step '(.*)' is unknown$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Repair.php" , line : 160usize , placeholders : & ["$repairStep"] , exception : Some ("Exception") , regex : "^Repair step '(.*)' is not of type \\\\OCP\\\\Migration\\\\IRepairStep$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Support/Subscription/Registry.php" , line : 99usize , placeholders : & [] , exception : Some ("OCP\\Support\\Subscription\\Exception\\AlreadyRegisteredException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Support/Subscription/Registry.php" , line : 106usize , placeholders : & [] , exception : Some ("OCP\\Support\\Subscription\\Exception\\AlreadyRegisteredException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Support/Subscription/Registry.php" , line : 201usize , placeholders : & ["get_class($backend)"] , exception : None , regex : "^Can not determine user count for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Support/Subscription/Registry.php" , line : 214usize , placeholders : & ["$userCount" , "$disabledUsersCount"] , exception : None , regex : "^Total user count was negative \\(users: (.*), disabled: (.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Support/Subscription/Registry.php" , line : 242usize , placeholders : & [] , exception : None , regex : "^The account limit was reached and the new account was not created$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Support/Subscription/Assertion.php" , line : 52usize , placeholders : & ["$l->t('The user was not created because the user limit has been reached. Check your notifications to learn more.')"] , exception : Some ("OCP\\HintException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/lib/private/Support/CrashReport/Registry.php" , line : 128usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Could not load lazy crash reporter: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/lib/private/Support/CrashReport/Registry.php" , line : 143usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Could not register lazy crash reporter: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/lib/private/Log/ErrorHandler.php" , line : 58usize , placeholders : & ["self::removePassword($msg)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/lib/private/Log/ErrorHandler.php" , line : 69usize , placeholders : & ["self::removePassword($msg)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/lib/private/Log/ErrorHandler.php" , line : 81usize , placeholders : & ["self::errnoToLogLevel($number)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/lib/private/Log/ErrorHandler.php" , line : 91usize , placeholders : & ["self::errnoToLogLevel($number)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Log/Systemdlog.php" , line : 65usize , placeholders : & [] , exception : Some ("OCP\\HintException") , regex : "^PHP extension php\\-systemd is not available\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Emergency , path : "/lib/private/Log/PsrLoggerAdapter.php" , line : 67usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Alert , path : "/lib/private/Log/PsrLoggerAdapter.php" , line : 89usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/lib/private/Log/PsrLoggerAdapter.php" , line : 110usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Log/PsrLoggerAdapter.php" , line : 130usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Log/PsrLoggerAdapter.php" , line : 152usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/lib/private/Log/PsrLoggerAdapter.php" , line : 171usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Log/PsrLoggerAdapter.php" , line : 192usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Log/PsrLoggerAdapter.php" , line : 211usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Log/PsrLoggerAdapter.php" , line : 225usize , placeholders : & [] , exception : Some ("Psr\\Log\\InvalidArgumentException") , regex : "^Nextcloud allows only integer log levels$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/lib/private/Log/PsrLoggerAdapter.php" , line : 236usize , placeholders : & ["$level"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Log/Rotate.php" , line : 48usize , placeholders : & ["$msg"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/SetupCheck/SetupCheckManager.php" , line : 49usize , placeholders : & ["get_class($setupCheckObject)"] , exception : None , regex : "^Running check (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/SetupCheck/SetupCheckManager.php" , line : 54usize , placeholders : & ["get_class($setupCheckObject)" , "$t->getMessage()"] , exception : None , regex : "^Exception running check (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Federation/CloudFederationProviderManager.php" , line : 111usize , placeholders : & ["$resourceType"] , exception : Some ("OCP\\Federation\\Exceptions\\ProviderDoesNotExistsException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Federation/CloudFederationProviderManager.php" , line : 141usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Federation/CloudFederationProviderManager.php" , line : 173usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error while sending share to federation server: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Federation/CloudFederationProviderManager.php" , line : 177usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\OCM\\Exceptions\\OCMProviderException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Federation/CloudFederationProviderManager.php" , line : 210usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^error while sending notification for federated share: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Federation/CloudFederationProviderManager.php" , line : 235usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error while sending notification to federation server: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Federation/CloudFederationProviderManager.php" , line : 239usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\OCM\\Exceptions\\OCMProviderException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Federation/CloudIdManager.php" , line : 105usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid cloud id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Federation/CloudIdManager.php" , line : 135usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid cloud id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AllConfig.php" , line : 259usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^Only integers, floats and strings are allowed as value$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AllConfig.php" , line : 275usize , placeholders : & [] , exception : Some ("OCP\\PreConditionNotMetException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Remote/Api/ApiBase.php" , line : 93usize , placeholders : & ["$method"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid method (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Remote/Api/OCS.php" , line : 51usize , placeholders : & [] , exception : Some ("OC\\Remote\\Api\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Remote/Api/OCS.php" , line : 53usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Remote/Api/OCS.php" , line : 59usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid ocs response$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Remote/Api/OCS.php" , line : 62usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Remote/Api/OCS.php" , line : 65usize , placeholders : & [] , exception : Some ("OC\\Remote\\Api\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Remote/Api/OCS.php" , line : 68usize , placeholders : & ["$response['ocs']['meta']['message']"] , exception : Some ("Exception") , regex : "^Unknown ocs error (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Remote/Api/OCS.php" , line : 83usize , placeholders : & ["$type" , "$key"] , exception : Some ("Exception") , regex : "^Invalid (.*) response, expected field (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Remote/Instance.php" , line : 115usize , placeholders : & ["$this->url"] , exception : Some ("Exception") , regex : "^refusing to connect to remote instance\\((.*)\\) over http that was previously accessible over https$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Remote/Instance.php" , line : 130usize , placeholders : & ["$this->url"] , exception : Some ("OC\\Remote\\Api\\NotFoundException") , regex : "^Remote server not found at address (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/L10N/Factory.php" , line : 421usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Failed to get an IUser instance$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/L10N/Factory.php" , line : 512usize , placeholders : & [] , exception : Some ("OC\\L10N\\LanguageNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/L10N/L10N.php" , line : 238usize , placeholders : & ["$translationFile" , "$jsonError"] , exception : None , regex : "^Failed to load (.*) \\- json error code: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Group/Manager.php" , line : 288usize , placeholders : & ["self::MAX_GROUP_LENGTH"] , exception : Some ("Exception") , regex : "^Group name is limited to (.*) characters$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Group/Manager.php" , line : 358usize , placeholders : & ["$uid" , "$groupId"] , exception : None , regex : "^User \"(.*)\" belongs to deleted group: \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Cache/File.php" , line : 63usize , placeholders : & [] , exception : None , regex : "^Can't get cache storage, user not logged in$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Cache/File.php" , line : 64usize , placeholders : & [] , exception : Some ("OC\\ForbiddenException") , regex : "^Can\\\\t get cache storage, user not logged in$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Cache/File.php" , line : 195usize , placeholders : & ["$file"] , exception : None , regex : "^Could not cleanup locked chunk \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Cache/File.php" , line : 197usize , placeholders : & ["$file"] , exception : None , regex : "^Could not cleanup forbidden chunk \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Cache/File.php" , line : 199usize , placeholders : & ["$file"] , exception : None , regex : "^Could not cleanup locked chunk \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/LargeFileHelper.php" , line : 59usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^This class assumes floats to be double precision or \"better\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/LargeFileHelper.php" , line : 86usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^Expected int, float or base\\-10 string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Settings/Manager.php" , line : 130usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Settings/Manager.php" , line : 138usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Settings/Manager.php" , line : 204usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Settings/Manager.php" , line : 210usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Settings/DeclarativeManager.php" , line : 76usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid schema\\. Please check the logs for more details\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Settings/DeclarativeManager.php" , line : 81usize , placeholders : & ["$schema['id']"] , exception : Some ("Exception") , regex : "^Duplicate form IDs detected: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Settings/DeclarativeManager.php" , line : 89usize , placeholders : & ["join(', ', $intersectionFieldIDs)"] , exception : Some ("Exception") , regex : "^Non unique field IDs detected: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Settings/DeclarativeManager.php" , line : 221usize , placeholders : & ["$fieldId"] , exception : Some ("Exception") , regex : "^Unknown fieldId \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Settings/DeclarativeManager.php" , line : 230usize , placeholders : & [] , exception : Some ("OC\\AppFramework\\Middleware\\Security\\Exceptions\\NotAdminException") , regex : "^Logged in user does not have permission to access these settings\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Settings/DeclarativeManager.php" , line : 252usize , placeholders : & ["$storageType"] , exception : Some ("Exception") , regex : "^Unknown storage type \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Settings/DeclarativeManager.php" , line : 272usize , placeholders : & ["$storageType"] , exception : Some ("Exception") , regex : "^Unknown storage type \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Settings/DeclarativeManager.php" , line : 285usize , placeholders : & ["$sectionType"] , exception : Some ("Exception") , regex : "^Unknown section type \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Settings/DeclarativeManager.php" , line : 299usize , placeholders : & ["$sectionType"] , exception : Some ("Exception") , regex : "^Unknown section type \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Settings/DeclarativeManager.php" , line : 323usize , placeholders : & [] , exception : None , regex : "^Attempt to register a declarative settings schema with no id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Settings/DeclarativeManager.php" , line : 328usize , placeholders : & [] , exception : None , regex : "^Declarative settings: missing section_type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Settings/DeclarativeManager.php" , line : 332usize , placeholders : & [] , exception : None , regex : "^Declarative settings: invalid section_type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Settings/DeclarativeManager.php" , line : 336usize , placeholders : & [] , exception : None , regex : "^Declarative settings: missing section_id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Settings/DeclarativeManager.php" , line : 340usize , placeholders : & [] , exception : None , regex : "^Declarative settings: missing storage_type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Settings/DeclarativeManager.php" , line : 344usize , placeholders : & [] , exception : None , regex : "^Declarative settings: invalid storage_type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Settings/DeclarativeManager.php" , line : 348usize , placeholders : & [] , exception : None , regex : "^Declarative settings: missing title$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Settings/DeclarativeManager.php" , line : 352usize , placeholders : & [] , exception : None , regex : "^Declarative settings: missing or invalid fields$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Settings/DeclarativeManager.php" , line : 357usize , placeholders : & [] , exception : None , regex : "^Declarative settings: missing field id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Settings/DeclarativeManager.php" , line : 362usize , placeholders : & [] , exception : None , regex : "^Declarative settings: missing field title$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Settings/DeclarativeManager.php" , line : 366usize , placeholders : & [] , exception : None , regex : "^Declarative settings: missing field type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Settings/DeclarativeManager.php" , line : 375usize , placeholders : & [] , exception : None , regex : "^Declarative settings: invalid field type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Settings/DeclarativeManager.php" , line : 395usize , placeholders : & [] , exception : None , regex : "^Declarative settings: missing field options$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Settings/DeclarativeManager.php" , line : 399usize , placeholders : & [] , exception : None , regex : "^Declarative settings: field options should be an array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Diagnostics/EventLogger.php" , line : 133usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/OCM/Model/OCMProvider.php" , line : 162usize , placeholders : & [] , exception : Some ("OCP\\OCM\\Exceptions\\OCMArgumentException") , regex : "^protocol not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/OCM/Model/OCMProvider.php" , line : 169usize , placeholders : & [] , exception : Some ("OCP\\OCM\\Exceptions\\OCMArgumentException") , regex : "^resource not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/OCM/Model/OCMProvider.php" , line : 194usize , placeholders : & [] , exception : Some ("OCP\\OCM\\Exceptions\\OCMProviderException") , regex : "^remote provider does not look valid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/OCM/OCMDiscoveryService.php" , line : 102usize , placeholders : & ["($body ?? '')"] , exception : Some ("OCP\\OCM\\Exceptions\\OCMProviderException") , regex : "^data returned by remote seems invalid \\- (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/OCM/OCMDiscoveryService.php" , line : 104usize , placeholders : & [] , exception : None , regex : "^error while discovering ocm provider$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/OCM/OCMDiscoveryService.php" , line : 108usize , placeholders : & [] , exception : Some ("OCP\\OCM\\Exceptions\\OCMProviderException") , regex : "^error while requesting remote ocm provider$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/OCM/OCMDiscoveryService.php" , line : 112usize , placeholders : & [] , exception : Some ("OCP\\OCM\\Exceptions\\OCMProviderException") , regex : "^API version not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TemplateLayout.php" , line : 416usize , placeholders : & [] , exception : Some ("Exception") , regex : "^\\$filePath is not under the \\\\OC::\\$SERVERROOT$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Calendar/Manager.php" , line : 185usize , placeholders : & ["$registration->getService()" , "$e->getMessage()"] , exception : None , regex : "^Could not load calendar provider (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Calendar/Manager.php" , line : 250usize , placeholders : & [] , exception : None , regex : "^Wrong method provided for processing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Calendar/Manager.php" , line : 258usize , placeholders : & [] , exception : None , regex : "^Recipient and ORGANIZER must be identical$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Calendar/Manager.php" , line : 266usize , placeholders : & [] , exception : None , regex : "^Only events in the future are processed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Calendar/Manager.php" , line : 272usize , placeholders : & ["$principalUri"] , exception : None , regex : "^Could not find any calendars for principal (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Calendar/Manager.php" , line : 294usize , placeholders : & ["$principalUri" , "$vEvent->{'UID'}->getValue()"] , exception : None , regex : "^Event not found in any calendar for principal (.*)and UID(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Calendar/Manager.php" , line : 301usize , placeholders : & [] , exception : None , regex : "^Could not update calendar for iMIP processing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Calendar/Manager.php" , line : 334usize , placeholders : & [] , exception : None , regex : "^Wrong method provided for processing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Calendar/Manager.php" , line : 340usize , placeholders : & [] , exception : None , regex : "^Recipient must be an ATTENDEE of this event$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Calendar/Manager.php" , line : 351usize , placeholders : & [] , exception : None , regex : "^Sender must be the ORGANIZER of this event$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Calendar/Manager.php" , line : 359usize , placeholders : & [] , exception : None , regex : "^Only events in the future are processed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Calendar/Manager.php" , line : 366usize , placeholders : & ["$principalUri"] , exception : None , regex : "^Could not find any calendars for principal (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Calendar/Manager.php" , line : 388usize , placeholders : & ["$principalUri" , "$vEvent->{'UID'}->getValue()"] , exception : None , regex : "^Event not found in any calendar for principal (.*)and UID(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Calendar/Manager.php" , line : 398usize , placeholders : & [] , exception : None , regex : "^Could not update calendar for iMIP processing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppConfig.php" , line : 175usize , placeholders : & [] , exception : Some ("OCP\\Exceptions\\AppConfigUnknownKeyException") , regex : "^unknown config key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppConfig.php" , line : 203usize , placeholders : & [] , exception : Some ("OCP\\Exceptions\\AppConfigUnknownKeyException") , regex : "^unknown config key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/AppConfig.php" , line : 472usize , placeholders : & [] , exception : None , regex : "^conflict with value type from database$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppConfig.php" , line : 473usize , placeholders : & [] , exception : Some ("OCP\\Exceptions\\AppConfigTypeConflictException") , regex : "^conflict with value type from database$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppConfig.php" , line : 520usize , placeholders : & [] , exception : Some ("OCP\\Exceptions\\AppConfigUnknownKeyException") , regex : "^unknown config key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/AppConfig.php" , line : 620usize , placeholders : & [] , exception : None , regex : "^You are trying to store an integer value around/above 2,147,483,647\\. This is a reminder that reaching this theoretical limit on 32 bits system will throw an exception\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/AppConfig.php" , line : 721usize , placeholders : & [] , exception : None , regex : "^could not setValueArray$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/AppConfig.php" , line : 807usize , placeholders : & [] , exception : None , regex : "^Value type is set to zero \\(0\\) in database\\. This is fine only during the upgrade process from 28 to 29\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppConfig.php" , line : 823usize , placeholders : & ["$type" , "$currType"] , exception : Some ("OCP\\Exceptions\\AppConfigTypeConflictException") , regex : "^conflict between new type \\((.*)\\) and old type \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppConfig.php" , line : 885usize , placeholders : & [] , exception : Some ("OCP\\Exceptions\\AppConfigIncorrectTypeException") , regex : "^Unknown value type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppConfig.php" , line : 940usize , placeholders : & [] , exception : Some ("OCP\\Exceptions\\AppConfigUnknownKeyException") , regex : "^unknown config key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/AppConfig.php" , line : 1029usize , placeholders : & [] , exception : None , regex : "^type stored in database is not correct$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppConfig.php" , line : 1034usize , placeholders : & [] , exception : Some ("OCP\\Exceptions\\AppConfigUnknownKeyException") , regex : "^unknown config key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppConfig.php" , line : 1069usize , placeholders : & ["$type"] , exception : Some ("OCP\\Exceptions\\AppConfigIncorrectTypeException") , regex : "^Unknown type (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppConfig.php" , line : 1090usize , placeholders : & ["$type"] , exception : Some ("OCP\\Exceptions\\AppConfigIncorrectTypeException") , regex : "^Unknown numeric type (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppConfig.php" , line : 1189usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^app cannot be an empty string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppConfig.php" , line : 1192usize , placeholders : & ["$app" , "self::APP_MAX_LENGTH"] , exception : Some ("InvalidArgumentException") , regex : "^Value \\((.*)\\) for app is too long \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppConfig.php" , line : 1197usize , placeholders : & ["$configKey" , "self::KEY_MAX_LENGTH"] , exception : Some ("InvalidArgumentException") , regex : "^Value \\((.*)\\) for key is too long \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppConfig.php" , line : 1202usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unknown value type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/AppConfig.php" , line : 1222usize , placeholders : & [] , exception : None , regex : "^The loading of lazy AppConfig values have been requested$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lock/DBLockingProvider.php" , line : 160usize , placeholders : & ["$path"] , exception : Some ("OCP\\Lock\\LockedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lock/DBLockingProvider.php" , line : 202usize , placeholders : & ["$path"] , exception : Some ("OCP\\Lock\\LockedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lock/DBLockingProvider.php" , line : 214usize , placeholders : & ["$path"] , exception : Some ("OCP\\Lock\\LockedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lock/MemcacheLockingProvider.php" , line : 88usize , placeholders : & ["$path"] , exception : Some ("OCP\\Lock\\LockedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lock/MemcacheLockingProvider.php" , line : 95usize , placeholders : & ["$path"] , exception : Some ("OCP\\Lock\\LockedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lock/MemcacheLockingProvider.php" , line : 139usize , placeholders : & ["$path"] , exception : Some ("OCP\\Lock\\LockedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Lock/MemcacheLockingProvider.php" , line : 145usize , placeholders : & ["$path"] , exception : Some ("OCP\\Lock\\LockedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/lib/private/Session/CryptoSessionData.php" , line : 97usize , placeholders : & [] , exception : None , regex : "^Could not decrypt or decode encrypted session data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Session/Internal.php" , line : 62usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Failed to start session$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Session/Internal.php" , line : 172usize , placeholders : & [] , exception : Some ("OCP\\Session\\Exceptions\\SessionNotAvailableException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Session/Internal.php" , line : 197usize , placeholders : & ["$errorString"] , exception : Some ("ErrorException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Session/Memory.php" , line : 104usize , placeholders : & [] , exception : Some ("OCP\\Session\\Exceptions\\SessionNotAvailableException") , regex : "^Memory session does not have an ID$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Command/CronBus.php" , line : 55usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid command$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Command/CronBus.php" , line : 69usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid command$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Command/QueueBus.php" , line : 60usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Trying to push a command which serialized form can not be stored in the database \\(>4000 character\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Command/CallableJob.php" , line : 32usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid serialized callable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Command/ClosureJob.php" , line : 35usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid serialized callable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Command/CommandJob.php" , line : 37usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid serialized command$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Updater/ChangesCheck.php" , line : 61usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\Db\\DoesNotExistException") , regex : "^Unable to decode changes info$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Updater/ChangesCheck.php" , line : 106usize , placeholders : & ["{code}"] , exception : None , regex : "^Unexpected return code (.*)Unexpected return code \\{code\\} from changelog server$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater/VersionCheck.php" , line : 93usize , placeholders : & ["$url"] , exception : None , regex : "^Version could not be fetched from updater server: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Updater/ChangesMapper.php" , line : 58usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\Db\\DoesNotExistException") , regex : "^Changes info is not present$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Profiler/FileProfilerStorage.php" , line : 49usize , placeholders : & ["sprintf('Unable to create the storage directory (%s).', $this->folder)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Profiler/FileProfilerStorage.php" , line : 134usize , placeholders : & ["sprintf('Unable to create the storage directory (%s).', $dir)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Avatar/PlaceholderAvatar.php" , line : 116usize , placeholders : & ["$this->user->getUID()"] , exception : None , regex : "^Failed to save avatar placeholder for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Avatar/PlaceholderAvatar.php" , line : 117usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Avatar/UserAvatar.php" , line : 155usize , placeholders : & ["$this->l->t('Unknown filetype')"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Avatar/UserAvatar.php" , line : 159usize , placeholders : & ["$this->l->t('Invalid image')"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Avatar/UserAvatar.php" , line : 163usize , placeholders : & ["$this->l->t('Avatar image is not square')"] , exception : Some ("OC\\NotSquareException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Avatar/UserAvatar.php" , line : 271usize , placeholders : & ["$this->user->getUID()"] , exception : None , regex : "^Failed to save avatar for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Avatar/UserAvatar.php" , line : 272usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Avatar/AvatarManager.php" , line : 83usize , placeholders : & [] , exception : Some ("Exception") , regex : "^user does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Avatar/AvatarManager.php" , line : 144usize , placeholders : & ["$userId"] , exception : None , regex : "^No cache for the user (.*)\\. Ignoring avatar deletion$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Avatar/AvatarManager.php" , line : 146usize , placeholders : & ["$userId"] , exception : None , regex : "^Unable to delete user avatars for (.*)\\. gnoring avatar deletion$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Avatar/AvatarManager.php" , line : 148usize , placeholders : & ["$userId"] , exception : None , regex : "^Account (.*) not found\\. Ignoring avatar deletion$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/InitialStateService.php" , line : 70usize , placeholders : & ["$key" , "$appName"] , exception : None , regex : "^Invalid (.*) data provided to provideInitialState by (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/InitialStateService.php" , line : 75usize , placeholders : & ["$key" , "$appName"] , exception : None , regex : "^Invalid (.*) data provided to provideInitialState by (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/InitialStateService.php" , line : 96usize , placeholders : & ["{key}" , "{duration}"] , exception : None , regex : "^Lazy initial state provider for (.*) took (.*)Lazy initial state provider for \\{key\\} took \\{duration\\} seconds\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/InitialStateService.php" , line : 124usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Could not load initial state provider dynamically: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/InitialStateService.php" , line : 133usize , placeholders : & ["$initialState->getService()"] , exception : None , regex : "^Initial state provider is not an InitialStateProvider instance: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Security/CertificateManager.php" , line : 83usize , placeholders : & ["$path"] , exception : None , regex : "^Failed to read certificate from (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Security/CertificateManager.php" , line : 86usize , placeholders : & ["$path"] , exception : None , regex : "^Failed to read certificate from (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Security/CertificateManager.php" , line : 132usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Security/CertificateManager.php" , line : 141usize , placeholders : & ["$tmpPath"] , exception : Some ("RuntimeException") , regex : "^Unable to open file handler to create certificate bundle \"(.*)\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Security/CertificateManager.php" , line : 178usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Filename is not valid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Security/CertificateManager.php" , line : 241usize , placeholders : & ["$certificateBundle"] , exception : Some ("RuntimeException") , regex : "^Unable to get certificate bundle \"(.*)\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Security/CertificateManager.php" , line : 246usize , placeholders : & [] , exception : None , regex : "^Failed to get absolute bundle path\\. Fallback to default ca\\-bundle\\.crt$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/lib/private/Security/Bruteforce/Throttler.php" , line : 87usize , placeholders : & ["sprintf(\n\t\t\t\t'Bruteforce attempt from \"%s\" detected for action \"%s\".',\n\t\t\t\t$ip,\n\t\t\t\t$action\n\t\t\t)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Security/Bruteforce/Throttler.php" , line : 191usize , placeholders : & [] , exception : None , regex : "^Bruteforce has to use less than 48 hours$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Security/Bruteforce/Throttler.php" , line : 292usize , placeholders : & ["{action}" , "{ip}"] , exception : None , regex : "^IP address blocked because it reached the maximum failed attempts in the last 30 minutes \\[action: (.*), ip: (.*)IP address blocked because it reached the maximum failed attempts in the last 30 minutes \\[action: \\{action\\}, ip: \\{ip\\}\\]$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Security/Bruteforce/Throttler.php" , line : 297usize , placeholders : & [] , exception : Some ("OCP\\Security\\Bruteforce\\MaxDelayReached") , regex : "^Reached maximum delay$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Security/Bruteforce/Throttler.php" , line : 300usize , placeholders : & ["{action}" , "{delay}" , "{ip}"] , exception : None , regex : "^IP address throttled because it reached the attempts limit in the last 30 minutes \\[action: (.*), delay: (.*), ip: (.*)IP address throttled because it reached the attempts limit in the last 30 minutes \\[action: \\{action\\}, delay: \\{delay\\}, ip: \\{ip\\}\\]$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Security/VerificationToken/VerificationToken.php" , line : 55usize , placeholders : & ["$code"] , exception : Some ("OCP\\Security\\VerificationToken\\InvalidTokenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Security/CSRF/TokenStorage/SessionStorage.php" , line : 55usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Session does not contain a requesttoken$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Security/RateLimiting/Limiter.php" , line : 53usize , placeholders : & [] , exception : Some ("OC\\Security\\RateLimiting\\Exception\\RateLimitExceededException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Security/IdentityProof/Manager.php" , line : 69usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^OpenSSL reported a problem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Security/IdentityProof/Manager.php" , line : 74usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^OpenSSL reported a problem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Security/IdentityProof/Manager.php" , line : 144usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^no instance id!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/lib/private/Security/IdentityProof/Manager.php" , line : 154usize , placeholders : & ["implode(', ', $errors)"] , exception : None , regex : "^Something is wrong with your openssl setup: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Security/Crypto.php" , line : 97usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Encrypting failed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Security/Crypto.php" , line : 135usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Authenticated ciphertext could not be decoded\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Security/Crypto.php" , line : 158usize , placeholders : & [] , exception : Some ("Exception") , regex : "^HMAC does not match\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Security/Crypto.php" , line : 163usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Decryption failed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Security/Crypto.php" , line : 171usize , placeholders : & ["$hex"] , exception : Some ("RuntimeException") , regex : "^String contains non hex chars: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Security/Crypto.php" , line : 174usize , placeholders : & ["$hex"] , exception : Some ("RuntimeException") , regex : "^Hex string is not of even length: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Security/Crypto.php" , line : 179usize , placeholders : & ["$hex"] , exception : Some ("RuntimeException") , regex : "^Hex to bin conversion failed: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Security/Certificate.php" , line : 59usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Certificate could not get parsed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Security/Certificate.php" , line : 64usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Certificate could not get parsed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Security/SecureRandom.php" , line : 54usize , placeholders : & ["$length"] , exception : Some ("LengthException") , regex : "^Invalid length specified: (.*) must be bigger than 0$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Security/RemoteHostValidator.php" , line : 66usize , placeholders : & ["$host"] , exception : None , regex : "^Host (.*) was not connected to because it violates local access rules$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/AppScriptSort.php" , line : 55usize , placeholders : & ["$app->getId()"] , exception : None , regex : "^Circular dependency in app scripts at app (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Mail/Mailer.php" , line : 162usize , placeholders : & ["Message::class"] , exception : Some ("InvalidArgumentException") , regex : "^Object not of type (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Mail/Mailer.php" , line : 181usize , placeholders : & ["$logMessage"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Mail/Mailer.php" , line : 200usize , placeholders : & ["$logMessage"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Mail/Mailer.php" , line : 202usize , placeholders : & ["$e->getDebug()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Mail/Mailer.php" , line : 220usize , placeholders : & ["$logMessage"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/URLGenerator.php" , line : 220usize , placeholders : & ["$file" , "\\OC::$WEBROOT" , "\\OC::$SERVERROOT"] , exception : Some ("RuntimeException") , regex : "^image not found: image: (.*) webroot: (.*) serverroot: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/URLGenerator.php" , line : 274usize , placeholders : & ["$file" , "\\OC::$WEBROOT" , "\\OC::$SERVERROOT"] , exception : Some ("RuntimeException") , regex : "^image not found: image:(.*) webroot:(.*) serverroot:(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Contacts/ContactsMenu/ActionProviderStore.php" , line : 67usize , placeholders : & [] , exception : None , regex : "^Ignoring invalid contacts menu provider$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Contacts/ContactsMenu/ActionProviderStore.php" , line : 72usize , placeholders : & ["$class"] , exception : None , regex : "^Could not load contacts menu action provider (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Contacts/ContactsMenu/ActionProviderStore.php" , line : 79usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not load contacts menu action provider$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Talk/Broker.php" , line : 66usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not all apps have been registered yet$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Talk/Broker.php" , line : 82usize , placeholders : & ["{class}" , "$e->getMessage()"] , exception : None , regex : "^Talk backend (.*)Talk backend \\{class\\} could not be loaded: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Talk/Broker.php" , line : 100usize , placeholders : & [] , exception : Some ("OCP\\Talk\\Exceptions\\NoBackendException") , regex : "^The Talk broker has no registered backend$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Talk/Broker.php" , line : 112usize , placeholders : & [] , exception : Some ("OCP\\Talk\\Exceptions\\NoBackendException") , regex : "^The Talk broker has no registered backend$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/RedisFactory.php" , line : 59usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Redis Cluster support is not available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/RedisFactory.php" , line : 81usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Redis cluster config is missing the \"seeds\" attribute$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/RedisFactory.php" , line : 143usize , placeholders : & ["\\sprintf(\n\t\t\t\t\t'php-redis extension must be version %s or higher to support ssl context',\n\t\t\t\t\tself::REDIS_EXTRA_PARAMETERS_MINIMAL_VERSION\n\t\t\t\t)"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/RedisFactory.php" , line : 155usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Redis support is not available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/TempManager.php" , line : 106usize , placeholders : & ["{dir}"] , exception : None , regex : "^Can not create a temporary file in directory (.*)Can not create a temporary file in directory \\{dir\\}\\. Check it exists and has correct permissions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/TempManager.php" , line : 138usize , placeholders : & ["{dir}"] , exception : None , regex : "^Can not create a temporary folder in directory (.*)Can not create a temporary folder in directory \\{dir\\}\\. Check it exists and has correct permissions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/TempManager.php" , line : 164usize , placeholders : & ["{file}" , "{error}"] , exception : None , regex : "^Error deleting temporary file/folder: (.*) \\- Reason: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TempManager.php" , line : 248usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^Unable to detect system temporary directory$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/TempManager.php" , line : 266usize , placeholders : & ["{dir}"] , exception : None , regex : "^Temporary directory (.*)Temporary directory \\{dir\\} is not present or writable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/EventDispatcher/ServiceEventListener.php" , line : 72usize , placeholders : & ["sprintf(\n\t\t\t\t\t\t'Could not load event listener service %s: %s. Make sure the class is auto-loadable by the Nextcloud server container',\n\t\t\t\t\t\t$this->class,\n\t\t\t\t\t\t$e->getMessage()\n\t\t\t\t\t)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/StreamImage.php" , line : 78usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/StreamImage.php" , line : 82usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/StreamImage.php" , line : 86usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/StreamImage.php" , line : 90usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/StreamImage.php" , line : 106usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/StreamImage.php" , line : 110usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/StreamImage.php" , line : 114usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/StreamImage.php" , line : 118usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/StreamImage.php" , line : 122usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/StreamImage.php" , line : 126usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/StreamImage.php" , line : 130usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/StreamImage.php" , line : 134usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/StreamImage.php" , line : 138usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/StreamImage.php" , line : 142usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/StreamImage.php" , line : 146usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/StreamImage.php" , line : 150usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/BackgroundJob/JobList.php" , line : 74usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Background job arguments can't exceed 4000 characters \\(json encoded\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/BackgroundJob/JobList.php" , line : 238usize , placeholders : & ["get_class($job)" , "$job->getId()"] , exception : None , regex : "^Skipping (.*) job with ID (.*) because another job with the same class is already running$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/BackgroundJob/JobList.php" , line : 431usize , placeholders : & [] , exception : None , regex : "^Querying reserved jobs failed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Setup.php" , line : 162usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Supported databases are not properly configured\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Setup.php" , line : 475usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^overwrite\\.cli\\.url is empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Setup.php" , line : 478usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^invalid value for overwrite\\.cli\\.url$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Setup.php" , line : 551usize , placeholders : & ["\\OC::$SERVERROOT"] , exception : Some ("Exception") , regex : "^(.*) does not have enough space for writing the htaccess file! Not writing it back!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Setup.php" , line : 612usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Routing/RouteConfig.php" , line : 132usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^Invalid route name: use the format foo\\#bar to reference FooController::bar$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Routing/RouteParser.php" , line : 96usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^Invalid route name: use the format foo\\#bar to reference FooController::bar$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Utility/SimpleContainer.php" , line : 114usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\QueryException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Utility/SimpleContainer.php" , line : 130usize , placeholders : & ["$baseMsg"] , exception : Some ("OCP\\AppFramework\\QueryException") , regex : "^(.*) Class can not be instantiated$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Utility/SimpleContainer.php" , line : 135usize , placeholders : & ["$baseMsg" , "$e->getMessage()"] , exception : Some ("OC\\AppFramework\\Utility\\QueryNotFoundException") , regex : "^(.*) (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Utility/SimpleContainer.php" , line : 153usize , placeholders : & ["$name"] , exception : Some ("OC\\AppFramework\\Utility\\QueryNotFoundException") , regex : "^Could not resolve (.*)!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/DependencyInjection/DIContainer.php" , line : 474usize , placeholders : & ["$name"] , exception : Some ("OCP\\AppFramework\\QueryException") , regex : "^Could not resolve (.*)! Class can not be instantiated$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/App.php" , line : 154usize , placeholders : & ["strtolower($app)"] , exception : Some ("OCP\\HintException") , regex : "^App (.*) is not enabled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Emergency , path : "/lib/private/AppFramework/Logger.php" , line : 61usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Alert , path : "/lib/private/AppFramework/Logger.php" , line : 68usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/lib/private/AppFramework/Logger.php" , line : 75usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Emergency , path : "/lib/private/AppFramework/Logger.php" , line : 82usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/AppFramework/Logger.php" , line : 89usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/lib/private/AppFramework/Logger.php" , line : 96usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/AppFramework/Logger.php" , line : 103usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/AppFramework/Logger.php" , line : 110usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/lib/private/AppFramework/Logger.php" , line : 117usize , placeholders : & ["$level"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Middleware/Security/SecurityMiddleware.php" , line : 161usize , placeholders : & [] , exception : Some ("OC\\AppFramework\\Middleware\\Security\\Exceptions\\NotLoggedInException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Middleware/Security/SecurityMiddleware.php" , line : 183usize , placeholders : & ["$this->l10n->t('Logged in account must be an admin, a sub admin or gotten special right to access this setting')"] , exception : Some ("OC\\AppFramework\\Middleware\\Security\\Exceptions\\NotAdminException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Middleware/Security/SecurityMiddleware.php" , line : 190usize , placeholders : & ["$this->l10n->t('Logged in account must be an admin or sub admin')"] , exception : Some ("OC\\AppFramework\\Middleware\\Security\\Exceptions\\NotAdminException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Middleware/Security/SecurityMiddleware.php" , line : 196usize , placeholders : & ["$this->l10n->t('Logged in account must be an admin')"] , exception : Some ("OC\\AppFramework\\Middleware\\Security\\Exceptions\\NotAdminException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Middleware/Security/SecurityMiddleware.php" , line : 204usize , placeholders : & [] , exception : Some ("OC\\AppFramework\\Middleware\\Security\\Exceptions\\StrictCookieMissingException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Middleware/Security/SecurityMiddleware.php" , line : 219usize , placeholders : & [] , exception : Some ("OC\\AppFramework\\Middleware\\Security\\Exceptions\\CrossSiteRequestForgeryException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Middleware/Security/SecurityMiddleware.php" , line : 236usize , placeholders : & [] , exception : Some ("OC\\AppFramework\\Middleware\\Security\\Exceptions\\AppNotEnabledException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/AppFramework/Middleware/Security/SecurityMiddleware.php" , line : 337usize , placeholders : & ["$exception->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Middleware/Security/SameSiteCookieMiddleware.php" , line : 61usize , placeholders : & [] , exception : Some ("OC\\AppFramework\\Middleware\\Security\\Exceptions\\LaxSameSiteCookieFailedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Middleware/Security/CORSMiddleware.php" , line : 102usize , placeholders : & [] , exception : Some ("OC\\AppFramework\\Middleware\\Security\\Exceptions\\SecurityException") , regex : "^CORS requires basic auth$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Middleware/Security/CORSMiddleware.php" , line : 105usize , placeholders : & [] , exception : Some ("OC\\AppFramework\\Middleware\\Security\\Exceptions\\SecurityException") , regex : "^Password login forbidden, use token instead$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Middleware/Security/CORSMiddleware.php" , line : 155usize , placeholders : & ["$msg"] , exception : Some ("OC\\AppFramework\\Middleware\\Security\\Exceptions\\SecurityException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Middleware/Security/PasswordConfirmationMiddleware.php" , line : 114usize , placeholders : & [] , exception : Some ("OC\\AppFramework\\Middleware\\Security\\Exceptions\\NotConfirmedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/AppFramework/Middleware/Security/BruteForceMiddleware.php" , line : 120usize , placeholders : & ["get_class($controller)" , "$methodName"] , exception : None , regex : "^Response for (.*)::(.*) got bruteforce throttled but has no annotation nor attribute defined\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Middleware/Security/BruteForceMiddleware.php" , line : 125usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Middleware/Security/BruteForceMiddleware.php" , line : 149usize , placeholders : & ["$exception->getMessage()"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Middleware/Security/ReloadExecutionMiddleware.php" , line : 51usize , placeholders : & [] , exception : Some ("OC\\AppFramework\\Middleware\\Security\\Exceptions\\ReloadExecutionException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Middleware/PublicShare/PublicShareMiddleware.php" , line : 68usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Link sharing is disabled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Middleware/PublicShare/PublicShareMiddleware.php" , line : 74usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Middleware/PublicShare/PublicShareMiddleware.php" , line : 84usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Middleware/PublicShare/PublicShareMiddleware.php" , line : 100usize , placeholders : & [] , exception : Some ("OC\\AppFramework\\Middleware\\PublicShare\\Exceptions\\NeedAuthenticationException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Middleware/PublicShare/PublicShareMiddleware.php" , line : 104usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Emergency , path : "/lib/private/AppFramework/ScopedPsrLogger.php" , line : 46usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Alert , path : "/lib/private/AppFramework/ScopedPsrLogger.php" , line : 58usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/lib/private/AppFramework/ScopedPsrLogger.php" , line : 70usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/AppFramework/ScopedPsrLogger.php" , line : 82usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/AppFramework/ScopedPsrLogger.php" , line : 94usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/lib/private/AppFramework/ScopedPsrLogger.php" , line : 106usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/AppFramework/ScopedPsrLogger.php" , line : 118usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/AppFramework/ScopedPsrLogger.php" , line : 130usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/lib/private/AppFramework/ScopedPsrLogger.php" , line : 142usize , placeholders : & ["$level"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Emergency , path : "/lib/private/AppFramework/Bootstrap/Coordinator.php" , line : 146usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error during app service registration: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/AppFramework/Bootstrap/Coordinator.php" , line : 203usize , placeholders : & ["$appId" , "$e->getMessage()"] , exception : None , regex : "^Could not boot (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Emergency , path : "/lib/private/AppFramework/Bootstrap/Coordinator.php" , line : 207usize , placeholders : & ["$appId" , "$e->getMessage()"] , exception : None , regex : "^Could not boot (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Bootstrap/RegistrationContext.php" , line : 530usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Only the Talk app is allowed to register a Talk backend$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Bootstrap/RegistrationContext.php" , line : 533usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^There can only be one Talk backend$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/AppFramework/Bootstrap/RegistrationContext.php" , line : 602usize , placeholders : & ["$appId"] , exception : None , regex : "^App (.*) not loaded for the capability registration$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/AppFramework/Bootstrap/RegistrationContext.php" , line : 612usize , placeholders : & ["$appId" , "$e->getMessage()"] , exception : None , regex : "^Error during capability registration of (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/AppFramework/Bootstrap/RegistrationContext.php" , line : 628usize , placeholders : & ["$appId" , "$e->getMessage()"] , exception : None , regex : "^Error during crash reporter registration of (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/AppFramework/Bootstrap/RegistrationContext.php" , line : 641usize , placeholders : & ["$appId" , "$e->getMessage()"] , exception : None , regex : "^Error during dashboard registration of (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/AppFramework/Bootstrap/RegistrationContext.php" , line : 658usize , placeholders : & ["$appId" , "$e->getMessage()"] , exception : None , regex : "^Error during event listener registration of (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/AppFramework/Bootstrap/RegistrationContext.php" , line : 674usize , placeholders : & ["$appId"] , exception : None , regex : "^App (.*) not loaded for the container service registration$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/AppFramework/Bootstrap/RegistrationContext.php" , line : 691usize , placeholders : & ["$appId" , "$e->getMessage()"] , exception : None , regex : "^Error during service registration of (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/AppFramework/Bootstrap/RegistrationContext.php" , line : 702usize , placeholders : & ["$appId"] , exception : None , regex : "^App (.*) not loaded for the container alias registration$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/AppFramework/Bootstrap/RegistrationContext.php" , line : 715usize , placeholders : & ["$appId" , "$e->getMessage()"] , exception : None , regex : "^Error during service alias registration of (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/AppFramework/Bootstrap/RegistrationContext.php" , line : 726usize , placeholders : & ["$appId"] , exception : None , regex : "^App (.*) not loaded for the container parameter registration$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/AppFramework/Bootstrap/RegistrationContext.php" , line : 739usize , placeholders : & ["$appId" , "$e->getMessage()"] , exception : None , regex : "^Error during service parameter registration of (.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/AppFramework/Http/Dispatcher.php" , line : 146usize , placeholders : & ["{class}" , "{method}" , "{count}"] , exception : None , regex : "^Controller (.*)::(.*) created (.*)Controller \\{class\\}::\\{method\\} created \\{count\\} QueryBuilder objects, please check if they are created inside a loop by accident\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/AppFramework/Http/Dispatcher.php" , line : 154usize , placeholders : & ["{class}" , "{method}" , "{count}"] , exception : None , regex : "^Controller (.*)::(.*) executed (.*)Controller \\{class\\}::\\{method\\} executed \\{count\\} queries\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Http/Dispatcher.php" , line : 264usize , placeholders : & ["$param"] , exception : Some ("OCP\\AppFramework\\Http\\ParameterOutOfRangeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Http/Request.php" , line : 206usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^You cannot change the contents of the request object$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Http/Request.php" , line : 214usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^You cannot change the contents of the request object$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Http/Request.php" , line : 223usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^You cannot change the contents of the request object$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Http/Request.php" , line : 248usize , placeholders : & ["sprintf('%s cannot be accessed in a %s request.', $name, $this->method)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Http/Request.php" , line : 286usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^You cannot change the contents of the request object$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Http/Request.php" , line : 396usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^\"put\" can only be accessed once if not application/x\\-www\\-form\\-urlencoded or application/json\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/AppFramework/Http/Request.php" , line : 743usize , placeholders : & ["$requestUri" , "$scriptName"] , exception : Some ("Exception") , regex : "^The requested uri\\((.*)\\) cannot be processed by the script '(.*)'\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/TagManager.php" , line : 119usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/TagManager.php" , line : 150usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/TextProcessing/Manager.php" , line : 81usize , placeholders : & ["$class"] , exception : None , regex : "^Failed to load Text processing provider (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextProcessing/Manager.php" , line : 118usize , placeholders : & [] , exception : Some ("OCP\\PreConditionNotMetException") , regex : "^No text processing provider is installed that can handle this task$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/TextProcessing/Manager.php" , line : 142usize , placeholders : & ["$provider->getName()"] , exception : None , regex : "^LanguageModel call using provider (.*) failed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextProcessing/Manager.php" , line : 145usize , placeholders : & ["$provider->getName()" , "$e->getMessage()"] , exception : Some ("OCP\\TextProcessing\\Exception\\TaskFailureException") , regex : "^LanguageModel call using provider (.*) failed: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextProcessing/Manager.php" , line : 151usize , placeholders : & [] , exception : Some ("OCP\\TextProcessing\\Exception\\TaskFailureException") , regex : "^Could not run task$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextProcessing/Manager.php" , line : 159usize , placeholders : & [] , exception : Some ("OCP\\PreConditionNotMetException") , regex : "^No LanguageModel provider is installed that can handle this task$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextProcessing/Manager.php" , line : 164usize , placeholders : & [] , exception : Some ("OCP\\PreConditionNotMetException") , regex : "^No LanguageModel provider is installed that can handle this task$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextProcessing/Manager.php" , line : 185usize , placeholders : & [] , exception : Some ("OCP\\PreConditionNotMetException") , regex : "^No LanguageModel provider is installed that can handle this task$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextProcessing/Manager.php" , line : 223usize , placeholders : & [] , exception : Some ("OCP\\Common\\Exception\\NotFoundException") , regex : "^Could not find task with the provided id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextProcessing/Manager.php" , line : 225usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Could not uniquely identify task with given id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextProcessing/Manager.php" , line : 227usize , placeholders : & ["$e->getMessage()"] , exception : Some ("RuntimeException") , regex : "^Failure while trying to find task by id: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextProcessing/Manager.php" , line : 246usize , placeholders : & [] , exception : Some ("OCP\\Common\\Exception\\NotFoundException") , regex : "^Could not find task with the provided id and user id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextProcessing/Manager.php" , line : 248usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Could not uniquely identify task with given id and user id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextProcessing/Manager.php" , line : 250usize , placeholders : & ["$e->getMessage()"] , exception : Some ("RuntimeException") , regex : "^Failure while trying to find task by id and user id: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/TextProcessing/Manager.php" , line : 271usize , placeholders : & ["$e->getMessage()"] , exception : Some ("RuntimeException") , regex : "^Failure while trying to find tasks by appId and identifier: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/TextProcessing/RemoveOldTasksBackgroundJob.php" , line : 56usize , placeholders : & [] , exception : None , regex : "^Failed to delete stale language model tasks$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Memcache/Memcached.php" , line : 84usize , placeholders : & ["$options"] , exception : Some ("OCP\\HintException") , regex : "^Expected 'memcached_options' config to be an array, got (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Memcache/Factory.php" , line : 92usize , placeholders : & ["strtr($missingCacheMessage, [\n\t\t\t\t'{class}' => $localCacheClass, '{use}' => 'local'\n\t\t\t])"] , exception : Some ("OCP\\HintException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Memcache/Factory.php" , line : 97usize , placeholders : & ["strtr($missingCacheMessage, [\n\t\t\t\t'{class}' => $distributedCacheClass, '{use}' => 'distributed'\n\t\t\t])"] , exception : Some ("OCP\\HintException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Http/WellKnown/RequestManager.php" , line : 94usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Well known handlers requested before the apps had been fully registered$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Http/WellKnown/RequestManager.php" , line : 98usize , placeholders : & ["count($registrations)"] , exception : None , regex : "^(.*) well known handlers registered$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Http/WellKnown/RequestManager.php" , line : 109usize , placeholders : & ["$class"] , exception : None , regex : "^Well known handler (.*) is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Http/WellKnown/RequestManager.php" , line : 116usize , placeholders : & ["$class"] , exception : None , regex : "^Could not load well known handler (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Http/Client/DnsPinMiddleware.php" , line : 141usize , placeholders : & ["$hostName"] , exception : Some ("OCP\\Http\\Client\\LocalServerException") , regex : "^No DNS record found for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Http/Client/DnsPinMiddleware.php" , line : 152usize , placeholders : & ["$ip" , "$hostName" , "$port"] , exception : Some ("OCP\\Http\\Client\\LocalServerException") , regex : "^Host \"(.*)\" \\((.*):(.*)\\) violates local access rules$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Http/Client/GuzzlePromiseAdapter.php" , line : 104usize , placeholders : & ["{state}"] , exception : None , regex : "^Unexpected promise state \"(.*)Unexpected promise state \"\\{state\\}\" returned by Guzzle$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Http/Client/Client.php" , line : 192usize , placeholders : & [] , exception : Some ("OCP\\Http\\Client\\LocalServerException") , regex : "^Could not detect any host$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Http/Client/Client.php" , line : 195usize , placeholders : & ["$host"] , exception : Some ("OCP\\Http\\Client\\LocalServerException") , regex : "^Host \"(.*)\" violates local access rules$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Streamer.php" , line : 134usize , placeholders : & ["print_r($file, true)"] , exception : None , regex : "^Unable to open file for stream: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Updater.php" , line : 118usize , placeholders : & [] , exception : None , regex : "^Could not cleanup CAN_INSTALL from your config folder\\. Please remove this file manually\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Updater.php" , line : 129usize , placeholders : & ["$installedVersion" , "$currentVersion"] , exception : None , regex : "^starting upgrade from (.*) to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Updater.php" , line : 135usize , placeholders : & ["$exception->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Updater.php" , line : 141usize , placeholders : & ["$exception->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Updater.php" , line : 234usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Updates between multiple major versions and downgrades are unsupported\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Updater.php" , line : 242usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Updater.php" , line : 261usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Updater.php" , line : 285usize , placeholders : & ["$exception->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Updater.php" , line : 386usize , placeholders : & ["$app"] , exception : Some ("UnexpectedValueException") , regex : "^The files of the app \"(.*)\" were not correctly replaced before running the update$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Updater.php" , line : 430usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 445usize , placeholders : & ["get_class($event)" , "$event->getSql()" , "$event->getCurrentStep()" , "$event->getMaxStep()"] , exception : None , regex : "^(.*): (.*) \\((.*) of (.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 451usize , placeholders : & ["get_class($event)" , "$event->getMaxStep()" , "$event->getCurrentStepName()"] , exception : None , regex : "^(.*): Starting \\.\\.\\. (.*) \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 457usize , placeholders : & ["get_class($event)" , "$desc" , "$event->getIncrement()"] , exception : None , regex : "^(.*): (.*) \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 459usize , placeholders : & ["get_class($event)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 461usize , placeholders : & ["get_class($event)" , "$event->getStepName()"] , exception : None , regex : "^(.*): Repair step: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 463usize , placeholders : & ["get_class($event)" , "$event->getMessage()"] , exception : None , regex : "^(.*): Repair info: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Updater.php" , line : 465usize , placeholders : & ["get_class($event)" , "$event->getMessage()"] , exception : None , regex : "^(.*): Repair warning: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Updater.php" , line : 467usize , placeholders : & ["get_class($event)" , "$event->getMessage()"] , exception : None , regex : "^(.*): Repair error: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 481usize , placeholders : & [] , exception : None , regex : "^\\\\OC\\\\Updater::maintenanceEnabled: Turned on maintenance mode$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 484usize , placeholders : & [] , exception : None , regex : "^\\\\OC\\\\Updater::maintenanceDisabled: Turned off maintenance mode$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 487usize , placeholders : & [] , exception : None , regex : "^\\\\OC\\\\Updater::maintenanceActive: Maintenance mode is kept active$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 491usize , placeholders : & [] , exception : None , regex : "^\\\\OC\\\\Updater::updateEnd: Update successful$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Updater.php" , line : 493usize , placeholders : & [] , exception : None , regex : "^\\\\OC\\\\Updater::updateEnd: Update failed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 497usize , placeholders : & [] , exception : None , regex : "^\\\\OC\\\\Updater::dbUpgradeBefore: Updating database schema$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 500usize , placeholders : & [] , exception : None , regex : "^\\\\OC\\\\Updater::dbUpgrade: Updated database$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 503usize , placeholders : & ["$app"] , exception : None , regex : "^\\\\OC\\\\Updater::incompatibleAppDisabled: Disabled incompatible app: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Updater.php" , line : 506usize , placeholders : & ["$app"] , exception : None , regex : "^\\\\OC\\\\Updater::checkAppStoreAppBefore: Checking for update of app \"(.*)\" in appstore$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 509usize , placeholders : & ["$app"] , exception : None , regex : "^\\\\OC\\\\Updater::upgradeAppStoreApp: Update app \"(.*)\" from appstore$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Updater.php" , line : 512usize , placeholders : & ["$app"] , exception : None , regex : "^\\\\OC\\\\Updater::checkAppStoreApp: Checked for update of app \"(.*)\" in appstore$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 515usize , placeholders : & ["$app"] , exception : None , regex : "^\\\\OC\\\\Updater::appSimulateUpdate: Checking whether the database schema for <(.*)> can be updated \\(this can take a long time depending on the database size\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 518usize , placeholders : & ["$app"] , exception : None , regex : "^\\\\OC\\\\Updater::appUpgradeStarted: Updating <(.*)> \\.\\.\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 521usize , placeholders : & ["$app" , "$version"] , exception : None , regex : "^\\\\OC\\\\Updater::appUpgrade: Updated <(.*)> to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Updater.php" , line : 524usize , placeholders : & ["$message"] , exception : None , regex : "^\\\\OC\\\\Updater::failure: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 527usize , placeholders : & [] , exception : None , regex : "^\\\\OC\\\\Updater::setDebugLogLevel: Set log level to debug$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 530usize , placeholders : & ["$logLevelName" , "$logLevel"] , exception : None , regex : "^\\\\OC\\\\Updater::resetLogLevel: Reset log level to (.*)\\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 533usize , placeholders : & [] , exception : None , regex : "^\\\\OC\\\\Updater::startCheckCodeIntegrity: Starting code integrity check\\.\\.\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Updater.php" , line : 536usize , placeholders : & [] , exception : None , regex : "^\\\\OC\\\\Updater::finishedCheckCodeIntegrity: Finished code integrity check$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Alert , path : "/lib/private/Authentication/TwoFactorAuth/Manager.php" , line : 205usize , placeholders : & ["$providerId"] , exception : None , regex : "^two\\-factor auth provider '(.*)' failed to load$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Alert , path : "/lib/private/Authentication/TwoFactorAuth/Manager.php" , line : 214usize , placeholders : & ["count($missing)"] , exception : None , regex : "^(.*) two\\-factor auth providers failed to load$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Authentication/TwoFactorAuth/Manager.php" , line : 306usize , placeholders : & [] , exception : None , regex : "^could not publish activity$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/TwoFactorAuth/ProviderManager.php" , line : 51usize , placeholders : & ["$providerId"] , exception : Some ("OC\\Authentication\\Exceptions\\InvalidProviderException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/TwoFactorAuth/ProviderLoader.php" , line : 73usize , placeholders : & ["$class"] , exception : Some ("Exception") , regex : "^Could not load two\\-factor auth provider (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/TwoFactorAuth/ProviderLoader.php" , line : 87usize , placeholders : & ["$provider->getService()"] , exception : Some ("Exception") , regex : "^Could not load two\\-factor auth provider (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Authentication/Login/UserDisabledCheckCommand.php" , line : 52usize , placeholders : & ["$username" , "$ip"] , exception : None , regex : "^Login failed: (.*) disabled \\(Remote IP: (.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Authentication/Login/LoggedInCheckCommand.php" , line : 53usize , placeholders : & ["$loginName" , "$ip"] , exception : None , regex : "^Login failed: (.*) \\(Remote IP: (.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Listeners/UserDeletedFilesCleanupListener.php" , line : 59usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Account has no home storage$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Listeners/UserDeletedFilesCleanupListener.php" , line : 72usize , placeholders : & [] , exception : Some ("Exception") , regex : "^UserDeletedEvent fired without matching BeforeUserDeletedEvent$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Listeners/UserDeletedFilesCleanupListener.php" , line : 80usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Home storage has invalid cache$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Authentication/Listeners/RemoteWipeEmailListener.php" , line : 77usize , placeholders : & ["$uid"] , exception : None , regex : "^not sending a wipe started email because user <(.*)> does not exist \\(anymore\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Authentication/Listeners/RemoteWipeEmailListener.php" , line : 81usize , placeholders : & ["$uid"] , exception : None , regex : "^not sending a wipe started email because user <(.*)> has no email set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Authentication/Listeners/RemoteWipeEmailListener.php" , line : 90usize , placeholders : & ["$uid"] , exception : None , regex : "^Could not send remote wipe started email to <(.*)>$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Authentication/Listeners/RemoteWipeEmailListener.php" , line : 98usize , placeholders : & ["$uid"] , exception : None , regex : "^not sending a wipe finished email because user <(.*)> does not exist \\(anymore\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Authentication/Listeners/RemoteWipeEmailListener.php" , line : 102usize , placeholders : & ["$uid"] , exception : None , regex : "^not sending a wipe finished email because user <(.*)> has no email set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Authentication/Listeners/RemoteWipeEmailListener.php" , line : 111usize , placeholders : & ["$uid"] , exception : None , regex : "^Could not send remote wipe finished email to <(.*)>$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Authentication/Listeners/UserDeletedTokenCleanupListener.php" , line : 69usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Could not clean up auth tokens after user deletion: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Authentication/Listeners/RemoteWipeActivityListener.php" , line : 74usize , placeholders : & [] , exception : None , regex : "^could not publish activity$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Notifications/Notifier.php" , line : 48usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Notifications/Notifier.php" , line : 73usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/LoginCredentials/Store.php" , line : 86usize , placeholders : & [] , exception : Some ("OCP\\Authentication\\Exceptions\\CredentialsUnavailableException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Authentication/LoginCredentials/Store.php" , line : 100usize , placeholders : & [] , exception : None , regex : "^could not get login credentials because session is unavailable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Authentication/LoginCredentials/Store.php" , line : 102usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^could not get login credentials because the token is invalid: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Authentication/LoginCredentials/Store.php" , line : 105usize , placeholders : & [] , exception : None , regex : "^could not get login credentials because the token has no password$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/LoginCredentials/Store.php" , line : 120usize , placeholders : & [] , exception : Some ("OCP\\Authentication\\Exceptions\\CredentialsUnavailableException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/WebAuthn/Manager.php" , line : 156usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not an authenticator attestation response$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Authentication/WebAuthn/Manager.php" , line : 221usize , placeholders : & ["$data"] , exception : None , regex : "^Loading publickey credentials from: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/WebAuthn/Manager.php" , line : 229usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not an authenticator attestation response$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Authentication/WebAuthn/Manager.php" , line : 255usize , placeholders : & ["$id"] , exception : None , regex : "^WebAuthn device (.*) does not exist, can't delete it$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenMapper.php" , line : 97usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\Db\\DoesNotExistException") , regex : "^token does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenMapper.php" , line : 119usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\Db\\DoesNotExistException") , regex : "^token does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/Manager.php" , line : 89usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Token conflict handled, but UIDs do not match\\. This should not happen$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/Manager.php" , line : 227usize , placeholders : & [] , exception : Some ("OC\\Authentication\\Exceptions\\InvalidTokenException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/Manager.php" , line : 240usize , placeholders : & [] , exception : Some ("OC\\Authentication\\Exceptions\\InvalidTokenException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 113usize , placeholders : & [] , exception : None , regex : "^Invalid token provided when generating new token$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 163usize , placeholders : & [] , exception : Some ("OC\\Authentication\\Exceptions\\InvalidTokenException") , regex : "^Token is too short for a generated token, should be the password during basic auth$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 181usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OC\\Authentication\\Exceptions\\InvalidTokenException") , regex : "^Token does not exist: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 196usize , placeholders : & ["$tokenHash"] , exception : Some ("OC\\Authentication\\Exceptions\\InvalidTokenException") , regex : "^Token does not exist: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 223usize , placeholders : & ["$tokenId" , "$ex->getMessage()"] , exception : Some ("OC\\Authentication\\Exceptions\\InvalidTokenException") , regex : "^Token with ID (.*) does not exist: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 233usize , placeholders : & ["$token"] , exception : Some ("OC\\Authentication\\Exceptions\\ExpiredTokenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 237usize , placeholders : & ["$token"] , exception : Some ("OC\\Authentication\\Exceptions\\WipeTokenException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 242usize , placeholders : & ["$token"] , exception : Some ("OC\\Authentication\\Exceptions\\TokenPasswordExpiredException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 251usize , placeholders : & [] , exception : Some ("OC\\Authentication\\Exceptions\\InvalidTokenException") , regex : "^Invalid token type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 297usize , placeholders : & ["date('c', $olderThan)"] , exception : None , regex : "^Invalidating session tokens older than (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 300usize , placeholders : & ["date('c', $rememberThreshold)"] , exception : None , regex : "^Invalidating remembered session tokens older than (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 310usize , placeholders : & [] , exception : Some ("OC\\Authentication\\Exceptions\\InvalidTokenException") , regex : "^Invalid token type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 318usize , placeholders : & [] , exception : Some ("OC\\Authentication\\Exceptions\\InvalidTokenException") , regex : "^Invalid token type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 339usize , placeholders : & [] , exception : Some ("OC\\Authentication\\Exceptions\\InvalidTokenException") , regex : "^Invalid token type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 343usize , placeholders : & [] , exception : Some ("OC\\Authentication\\Exceptions\\PasswordlessTokenException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 355usize , placeholders : & [] , exception : Some ("OC\\Authentication\\Exceptions\\InvalidTokenException") , regex : "^Invalid token type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 380usize , placeholders : & [] , exception : Some ("OC\\Authentication\\Exceptions\\InvalidTokenException") , regex : "^Invalid token type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 413usize , placeholders : & ["$ex->getMessage()"] , exception : Some ("OC\\Authentication\\Exceptions\\InvalidTokenException") , regex : "^Could not decrypt token password: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 467usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^OpenSSL reported a problem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 472usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^OpenSSL reported a problem$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 484usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Trying to save a password with more than 469 characters is not supported\\. If you want to use big passwords, disable the auth\\.storeCryptedPassword option in config\\.php$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 503usize , placeholders : & [] , exception : Some ("OC\\Authentication\\Exceptions\\InvalidTokenException") , regex : "^Invalid token type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/lib/private/Authentication/Token/PublicKeyTokenProvider.php" , line : 569usize , placeholders : & ["implode(', ', $errors)"] , exception : None , regex : "^Something is wrong with your openssl setup: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Authentication/Token/RemoteWipe.php" , line : 120usize , placeholders : & ["$dbToken->getUID()"] , exception : None , regex : "^user (.*) started a remote wipe$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Authentication/Token/RemoteWipe.php" , line : 148usize , placeholders : & ["$dbToken->getUID()"] , exception : None , regex : "^user (.*) finished a remote wipe$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Tags.php" , line : 204usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Tags.php" , line : 230usize , placeholders : & ["__METHOD__"] , exception : None , regex : "^(.*) Cannot use empty tag names$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/Tags.php" , line : 238usize , placeholders : & ["$l10n->t('Could not find category \"%s\"', [$tag])"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Tags.php" , line : 251usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Tags.php" , line : 297usize , placeholders : & ["__METHOD__"] , exception : None , regex : "^(.*) Cannot add an empty tag$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Tags.php" , line : 302usize , placeholders : & ["__METHOD__"] , exception : None , regex : "^(.*) Tag with name already exists$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Tags.php" , line : 310usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Tags.php" , line : 316usize , placeholders : & ["__METHOD__" , "$tag->getId()"] , exception : None , regex : "^(.*) Added an tag with (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Tags.php" , line : 332usize , placeholders : & ["__METHOD__"] , exception : None , regex : "^(.*)Cannot use an empty tag names$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Tags.php" , line : 342usize , placeholders : & ["__METHOD__" , "$from"] , exception : None , regex : "^(.*)Tag (.*)does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Tags.php" , line : 348usize , placeholders : & ["__METHOD__" , "$to" , "$tag->getOwner()"] , exception : None , regex : "^(.*)A tag named(.*)already exists for user(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Tags.php" , line : 356usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Tags.php" , line : 409usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Tags.php" , line : 418usize , placeholders : & ["__METHOD__" , "print_r($this->tags, true)"] , exception : None , regex : "^(.*)tags(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Tags.php" , line : 426usize , placeholders : & ["__METHOD__" , "$relation['tag']" , "$tagId"] , exception : None , regex : "^(.*)catid (.*) (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Tags.php" , line : 438usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Tags.php" , line : 466usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Tags.php" , line : 488usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Tags.php" , line : 533usize , placeholders : & ["__METHOD__"] , exception : None , regex : "^(.*), Cannot add an empty tag$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Tags.php" , line : 553usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Tags.php" , line : 573usize , placeholders : & ["__METHOD__"] , exception : None , regex : "^(.*), Tag name is empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Tags.php" , line : 590usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Tags.php" , line : 613usize , placeholders : & ["__METHOD__" , "print_r($this->tags, true)"] , exception : None , regex : "^(.*), before: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Tags.php" , line : 628usize , placeholders : & ["__METHOD__" , "$name"] , exception : None , regex : "^(.*)Cannot delete tag (.*): not found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Tags.php" , line : 637usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/Migration/SimpleOutput.php" , line : 43usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/private/Migration/SimpleOutput.php" , line : 51usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/Migration/SimpleOutput.php" , line : 59usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/Migration/BackgroundRepair.php" , line : 79usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/ConnectionFactory.php" , line : 106usize , placeholders : & ["$type"] , exception : Some ("InvalidArgumentException") , regex : "^Unsupported type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/ConnectionAdapter.php" , line : 261usize , placeholders : & ["$platform::class"] , exception : Some ("Exception") , regex : "^Database (.*) not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/MigrationService.php" , line : 247usize , placeholders : & ["$version"] , exception : Some ("InvalidArgumentException") , regex : "^Cannot load a migrations with the name '(.*)' because it is a reserved number$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/MigrationService.php" , line : 384usize , placeholders : & ["$version"] , exception : Some ("InvalidArgumentException") , regex : "^Version (.*) is unknown\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/DB/MigrationService.php" , line : 400usize , placeholders : & [] , exception : None , regex : "^Migrating schema only$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/MigrationService.php" , line : 413usize , placeholders : & ["$version" , "$this->getApp()" , "PHP_EOL" , "$e->getMessage()"] , exception : Some ("Exception") , regex : "^Database error when running migration (.*) for app (.*)(.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/DB/MigrationService.php" , line : 432usize , placeholders : & ["$version"] , exception : None , regex : "^\\- Reading (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/DB/MigrationService.php" , line : 441usize , placeholders : & [] , exception : None , regex : "^\\- Checking target database schema$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/DB/MigrationService.php" , line : 449usize , placeholders : & [] , exception : None , regex : "^\\- Migrate database schema$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/DB/MigrationService.php" , line : 454usize , placeholders : & [] , exception : None , regex : "^\\- Mark migrations as executed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/MigrationService.php" , line : 489usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Not a valid migration$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/MigrationService.php" , line : 495usize , placeholders : & ["$class"] , exception : Some ("InvalidArgumentException") , regex : "^Migration step '(.*)' is unknown$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/MigrationService.php" , line : 572usize , placeholders : & ["$table->getName()"] , exception : Some ("InvalidArgumentException") , regex : "^Table name \"(.*)\" is too long\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/MigrationService.php" , line : 581usize , placeholders : & ["$table->getName()" , "$thing->getName()"] , exception : Some ("InvalidArgumentException") , regex : "^Column name \"(.*)\"\\.\"(.*)\" is too long\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/MigrationService.php" , line : 586usize , placeholders : & ["$table->getName()" , "$thing->getName()"] , exception : Some ("InvalidArgumentException") , regex : "^Column \"(.*)\"\\.\"(.*)\" is NotNull, but has empty string or null as default\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/MigrationService.php" , line : 590usize , placeholders : & ["$table->getName()" , "$thing->getName()"] , exception : Some ("InvalidArgumentException") , regex : "^Column \"(.*)\"\\.\"(.*)\" is type Bool and also NotNull, so it can not store \"false\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/MigrationService.php" , line : 602usize , placeholders : & ["$table->getName()" , "$thing->getName()"] , exception : Some ("InvalidArgumentException") , regex : "^Column \"(.*)\"\\.\"(.*)\" is type String, but exceeding the 4\\.000 length limit\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/MigrationService.php" , line : 608usize , placeholders : & ["$table->getName()" , "$thing->getName()"] , exception : Some ("InvalidArgumentException") , regex : "^Index name \"(.*)\"\\.\"(.*)\" is too long\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/MigrationService.php" , line : 614usize , placeholders : & ["$table->getName()" , "$thing->getName()"] , exception : Some ("InvalidArgumentException") , regex : "^Foreign key name \"(.*)\"\\.\"(.*)\" is too long\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/MigrationService.php" , line : 639usize , placeholders : & ["$table->getName()"] , exception : Some ("InvalidArgumentException") , regex : "^Primary index name on \"(.*)\" is too long\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/MigrationService.php" , line : 642usize , placeholders : & ["$table->getName()"] , exception : Some ("InvalidArgumentException") , regex : "^Primary index name on \"(.*)\" is too long\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/DB/MigrationService.php" , line : 647usize , placeholders : & ["$table->getName()"] , exception : None , regex : "^Table \"(.*)\" has no primary key and therefor will not behave sane in clustered setups\\. This will throw an exception and not be installable in a future version of Nextcloud\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/MigrationService.php" , line : 654usize , placeholders : & ["$sequence->getName()"] , exception : Some ("InvalidArgumentException") , regex : "^Sequence name \"(.*)\" is too long\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/MigrationService.php" , line : 691usize , placeholders : & ["$thing->getName()" , "$table->getName()" , "$constraintNames[$thing->getName()]"] , exception : Some ("InvalidArgumentException") , regex : "^Index name \"(.*)\" for table \"(.*)\" collides with the constraint on table \"(.*)\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/MigrationService.php" , line : 701usize , placeholders : & ["$thing->getName()" , "$table->getName()" , "$constraintNames[$thing->getName()]"] , exception : Some ("InvalidArgumentException") , regex : "^Foreign key name \"(.*)\" for table \"(.*)\" collides with the constraint on table \"(.*)\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/MigrationService.php" , line : 717usize , placeholders : & ["$indexName" , "$table->getName()" , "$constraintNames[$thing->getName()]"] , exception : Some ("InvalidArgumentException") , regex : "^Primary index name \"(.*)\" for table \"(.*)\" collides with the constraint on table \"(.*)\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/MigrationService.php" , line : 728usize , placeholders : & ["$sequence->getName()" , "$table->getName()" , "$constraintNames[$thing->getName()]"] , exception : Some ("InvalidArgumentException") , regex : "^Sequence name \"(.*)\" for table \"(.*)\" collides with the constraint on table \"(.*)\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/DB/MigrationService.php" , line : 738usize , placeholders : & ["$log"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/DB/MigrationService.php" , line : 740usize , placeholders : & ["$log"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/AdapterOCI8.php" , line : 30usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Oracle requires a table name to be passed into lastInsertId\\(\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/PreparedStatement.php" , line : 98usize , placeholders : & [] , exception : Some ("Doctrine\\DBAL\\Exception") , regex : "^You have to execute the prepared statement before accessing the results$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/QueryBuilder/QuoteHelper.php" , line : 61usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Only strings, Literals and Parameters are allowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/DB/QueryBuilder/QueryBuilder.php" , line : 216usize , placeholders : & [] , exception : None , regex : "^DB QueryBuilder: ''$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/DB/QueryBuilder/QueryBuilder.php" , line : 221usize , placeholders : & ["{params}"] , exception : None , regex : "^DB QueryBuilder: '' with parameters: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/DB/QueryBuilder/QueryBuilder.php" , line : 229usize , placeholders : & [] , exception : None , regex : "^DB QueryBuilder: error trying to log SQL query$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/DB/QueryBuilder/QueryBuilder.php" , line : 244usize , placeholders : & ["$exception->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/DB/QueryBuilder/QueryBuilder.php" , line : 264usize , placeholders : & ["$exception->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/private/DB/QueryBuilder/QueryBuilder.php" , line : 273usize , placeholders : & ["$exception->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/QueryBuilder/QueryBuilder.php" , line : 289usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Invalid query type, expected SELECT query$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/QueryBuilder/QueryBuilder.php" , line : 302usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Invalid return type for query$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/QueryBuilder/QueryBuilder.php" , line : 322usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Invalid query type, expected INSERT, DELETE or UPDATE statement$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/QueryBuilder/QueryBuilder.php" , line : 332usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Invalid return type for statement$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/DB/QueryBuilder/QueryBuilder.php" , line : 870usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/QueryBuilder/QueryBuilder.php" , line : 1295usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Invalid call to getLastInsertId without using insert\\(\\) before\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/Connection.php" , line : 110usize , placeholders : & [] , exception : Some ("Exception") , regex : "^adapter not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/Connection.php" , line : 113usize , placeholders : & [] , exception : Some ("Exception") , regex : "^tablePrefix not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/Connection.php" , line : 163usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Doctrine\\DBAL\\Exception") , regex : "^Failed to connect to the database: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/DB/Connection.php" , line : 203usize , placeholders : & ["{backtrace}"] , exception : None , regex : "^Doctrine QueryBuilder retrieved in (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/DB/Connection.php" , line : 216usize , placeholders : & ["{backtrace}"] , exception : None , regex : "^Doctrine ExpressionBuilder retrieved in (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/lib/private/DB/Connection.php" , line : 310usize , placeholders : & ["(int) ($this->systemConfig->getValue('loglevel_dirty_database_queries', null) ?? 0)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/Connection.php" , line : 512usize , placeholders : & [] , exception : Some ("OCP\\PreConditionNotMetException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/Connection.php" , line : 530usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Can not lock a new table until the previous lock is released\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/DB/Connection.php" , line : 714usize , placeholders : & ["$timeTook"] , exception : None , regex : "^Transaction took (.*)s$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/private/DB/Connection.php" , line : 726usize , placeholders : & ["$timeTook"] , exception : None , regex : "^Transaction rollback took longer than 1s: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/private/DB/Connection.php" , line : 745usize , placeholders : & [] , exception : None , regex : "^Exception during connectivity check, closing and reconnecting$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/private/DB/ResultAdapter.php" , line : 55usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Fetch mode needs to be assoc, num or column\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/composer/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/composer/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/composer/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/composer/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/composer/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/composer/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/composer/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/autoloader.php" , line : 108usize , placeholders : & ["$class"] , exception : None , regex : "^include path for class \"(.*)\" starts with \"apps/\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/autoloader.php" , line : 141usize , placeholders : & ["$fullPath"] , exception : Some ("OCP\\AutoloadNotAllowedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/WorkflowEngine/GenericEntityEvent.php" , line : 49usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^DisplayName must not be empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/WorkflowEngine/GenericEntityEvent.php" , line : 52usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^EventName must not be empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/Settings/Events/DeclarativeSettingsGetValueEvent.php" , line : 100usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Value not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/Search/FilterDefinition.php" , line : 97usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid filter name\\. Allowed characters are \\[\\-0\\-9a\\-z\\]$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/AppFramework/Db/QBMapper.php" , line : 192usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Entity which should be updated has no id$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/AppFramework/Db/QBMapper.php" , line : 283usize , placeholders : & ["$msg"] , exception : Some ("OCP\\AppFramework\\Db\\DoesNotExistException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/AppFramework/Db/QBMapper.php" , line : 292usize , placeholders : & ["$msg"] , exception : Some ("OCP\\AppFramework\\Db\\MultipleObjectsReturnedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/AppFramework/Db/Entity.php" , line : 138usize , placeholders : & ["$name"] , exception : Some ("BadFunctionCallException") , regex : "^(.*) is not a valid attribute$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/AppFramework/Db/Entity.php" , line : 152usize , placeholders : & ["$name"] , exception : Some ("BadFunctionCallException") , regex : "^(.*) is not a valid attribute$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/AppFramework/Db/Entity.php" , line : 173usize , placeholders : & ["$methodName"] , exception : Some ("BadFunctionCallException") , regex : "^(.*) does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/AppFramework/Db/Entity.php" , line : 284usize , placeholders : & ["$attributeName"] , exception : Some ("BadFunctionCallException") , regex : "^(.*) is not a valid attribute$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/public/AppFramework/Db/TTransactional.php" , line : 102usize , placeholders : & [] , exception : None , regex : "^Retrying operation after retryable exception\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/AppFramework/Controller.php" , line : 159usize , placeholders : & ["$format"] , exception : Some ("DomainException") , regex : "^No responder registered for format (.*)!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/AppFramework/Http/Template/PublicTemplateResponse.php" , line : 101usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Actions must be of type IMenuAction$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/AppFramework/Http/Template/PublicTemplateResponse.php" , line : 119usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No header actions have been set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/public/AppFramework/Http/Response.php" , line : 214usize , placeholders : & ["{header}"] , exception : None , regex : "^Setting custom header on a 304 is not supported \\(Header: (.*)Setting custom header on a 304 is not supported \\(Header: \\{header\\}\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/AppFramework/Http/ZipResponse.php" , line : 68usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^No resource provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/public/AppFramework/App.php" , line : 102usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/AppFramework/App.php" , line : 146usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Can only setup routes with real router$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/EventDispatcher/GenericEvent.php" , line : 86usize , placeholders : & ["sprintf('Argument \"%s\" not found.', $key)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/SystemTag/SystemTagsEntityEvent.php" , line : 67usize , placeholders : & ["$name"] , exception : Some ("OutOfBoundsException") , regex : "^Duplicate entity name \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/SystemTag/ManagerEvent.php" , line : 101usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^getTagBefore is only available on the update Event$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/public/Collaboration/Reference/LinkReferenceProvider.php" , line : 129usize , placeholders : & [] , exception : None , regex : "^Failed to perform HEAD request to get target metadata$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/public/Collaboration/Reference/LinkReferenceProvider.php" , line : 135usize , placeholders : & [] , exception : None , regex : "^Skip resolving links pointing to content length > 5 MiB$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/public/Collaboration/Reference/LinkReferenceProvider.php" , line : 144usize , placeholders : & [] , exception : None , regex : "^Skip resolving links pointing to content type that is not \"text/html\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/public/Collaboration/Reference/LinkReferenceProvider.php" , line : 151usize , placeholders : & [] , exception : None , regex : "^Failed to fetch link for obtaining open graph data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/public/Collaboration/Reference/LinkReferenceProvider.php" , line : 176usize , placeholders : & ["$reference->getId()"] , exception : None , regex : "^Could not detect host of open graph image URI for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/public/Collaboration/Reference/LinkReferenceProvider.php" , line : 199usize , placeholders : & ["$reference->getId()"] , exception : None , regex : "^Failed to fetch and store the open graph image for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/public/Collaboration/Reference/LinkReferenceProvider.php" , line : 201usize , placeholders : & ["$reference->getId()"] , exception : None , regex : "^Failed to fetch and store the open graph image for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/Collaboration/Collaborators/SearchResultType.php" , line : 64usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Type must not be empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/Collaboration/Collaborators/SearchResultType.php" , line : 68usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Provided type is a reserved word$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/Files/Events/Node/BeforeNodeDeletedEvent.php" , line : 39usize , placeholders : & [] , exception : Some ("OCP\\Exceptions\\AbortedEventException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/Files/Events/Node/BeforeNodeRenamedEvent.php" , line : 39usize , placeholders : & [] , exception : Some ("OCP\\Exceptions\\AbortedEventException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/Files/SimpleFS/InMemoryFile.php" , line : 140usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^Stream reading is unsupported for in memory files$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/Files/SimpleFS/InMemoryFile.php" , line : 152usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotPermittedException") , regex : "^Stream writing is unsupported for in memory files$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/Group/Backend/ABackend.php" , line : 85usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Should not have been called$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/public/Util.php" , line : 539usize , placeholders : & [] , exception : None , regex : "^Invalid system config value for \"forbidden_chars\" is ignored\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/BackgroundJob/TimedJob.php" , line : 76usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid sensitivity$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/public/BackgroundJob/Job.php" , line : 79usize , placeholders : & ["$jobDetails"] , exception : None , regex : "^Starting job (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/public/BackgroundJob/Job.php" , line : 83usize , placeholders : & ["$jobDetails" , "$timeTaken"] , exception : None , regex : "^Finished job (.*) in (.*) seconds$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/public/BackgroundJob/Job.php" , line : 87usize , placeholders : & ["$jobDetails"] , exception : None , regex : "^Error while running background job (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/Comments/CommentsEntityEvent.php" , line : 65usize , placeholders : & ["$name"] , exception : Some ("OutOfBoundsException") , regex : "^Duplicate entity name \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/RichObjectStrings/Definitions.php" , line : 677usize , placeholders : & [] , exception : Some ("OCP\\RichObjectStrings\\InvalidObjectExeption") , regex : "^Object type is undefined$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/public/TextProcessing/Task.php" , line : 105usize , placeholders : & ["$this->getType()" , "$provider->getTaskType()"] , exception : Some ("RuntimeException") , regex : "^Task of type (.*) cannot visit provider with task type (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/base.php" , line : 225usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^apps directory not found! Please put the Nextcloud apps folder in the Nextcloud folder\\. You can also configure the location in the config\\.php file\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/base.php" , line : 232usize , placeholders : & ["sprintf('App directory \"%s\" not found! Please put the Nextcloud apps folder in the'\n\t\t\t\t\t. ' Nextcloud folder. You can also configure the location in the config.php file.', $path['path'])"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/base.php" , line : 284usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/base.php" , line : 407usize , placeholders : & ["implode(', ', $incompatibleShippedApps)"] , exception : Some ("OCP\\HintException") , regex : "^Application (.*) is not present or has a non\\-compatible version with this server\\. Please check the apps directory\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/base.php" , line : 460usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/base.php" , line : 578usize , placeholders : & [] , exception : None , regex : "^Request does not pass strict cookie check$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/base.php" , line : 626usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Composer autoloader not found, unable to continue\\. Check the folder \"3rdparty\"\\. Running \"git submodule update \\-\\-init\" will initialize the git submodule that handles the subfolder \"3rdparty\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/lib/base.php" , line : 644usize , placeholders : & [] , exception : None , regex : "^autoloader$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/base.php" , line : 657usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Could not set timezone to UTC$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/base.php" , line : 840usize , placeholders : & ["{remoteAddress}" , "{host}"] , exception : None , regex : "^Trusted domain error\\. \"(.*)\" tried to access using \"(.*)Trusted domain error\\. \"\\{remoteAddress\\}\" tried to access using \"\\{host\\}\" as host\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/lib/base.php" , line : 857usize , placeholders : & [] , exception : None , regex : "^init$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/base.php" , line : 893usize , placeholders : & [] , exception : None , regex : "^Exception when running cache gc\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Emergency , path : "/lib/base.php" , line : 1101usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/remote.php" , line : 68usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/remote.php" , line : 70usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/remote.php" , line : 75usize , placeholders : & ["$class" , "$msg"] , exception : Some ("Sabre\\DAV\\Exception\\ServiceUnavailable") , regex : "^(.*): (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/remote.php" , line : 87usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/remote.php" , line : 129usize , placeholders : & [] , exception : Some ("RemoteException") , regex : "^Service unavailable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/remote.php" , line : 135usize , placeholders : & [] , exception : Some ("RemoteException") , regex : "^Path not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/remote.php" , line : 145usize , placeholders : & [] , exception : Some ("RemoteException") , regex : "^Path not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/remote.php" , line : 165usize , placeholders : & ["$app"] , exception : Some ("RemoteException") , regex : "^App not installed: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/status.php" , line : 67usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/ocs/v1.php" , line : 85usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 87usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not find config\\.php\\. Is this file in the \"updater\" subfolder of Nextcloud\\?$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 102usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not read data directory from config\\.php\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 233usize , placeholders : & ["$key"] , exception : Some ("Exception") , regex : "^Config key (.*) is missing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 306usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Configuration key apps_paths should be an array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 311usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid configuration in apps_paths configuration key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 353usize , placeholders : & ["$unexpectedElements"] , exception : Some ("UpdateException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 376usize , placeholders : & ["$notWritablePaths"] , exception : Some ("UpdateException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 399usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not find config\\.php\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 410usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not write to config\\.php$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 435usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not create backup folder location$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 464usize , placeholders : & ["$backupFolderLocation" , "dirname($fileName)"] , exception : Some ("Exception") , regex : "^Could not create folder: (.*)/(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 494usize , placeholders : & ["$message"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 547usize , placeholders : & ["curl_error($curl)"] , exception : Some ("Exception") , regex : "^Could not do request to updater server: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 558usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not parse updater server XML response$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 582usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not mkdir storage location$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 586usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Response from update server is missing url$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 605usize , placeholders : & ["curl_error($ch)"] , exception : Some ("Exception") , regex : "^Curl error: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 634usize , placeholders : & ["$message"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 655usize , placeholders : & [] , exception : Some ("Exception") , regex : "^There are more files than the downloaded archive in the downloads/ folder\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 675usize , placeholders : & [] , exception : Some ("Exception") , regex : "^No signature specified for defined update$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 678usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Signature specified for defined update should be a string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 719usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Signature of update is not valid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 740usize , placeholders : & ["$versionFile"] , exception : Some ("Exception") , regex : "^OC_Version not found in (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 757usize , placeholders : & ["($zip->getStatusString())"] , exception : Some ("Exception") , regex : "^Error during unpacking zipfile: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 762usize , placeholders : & ["$downloadedFilePath"] , exception : Some ("Exception") , regex : "^Can't unlink (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 765usize , placeholders : & ["print_r($zipState, true)"] , exception : Some ("Exception") , regex : "^Can't handle ZIP file\\. Error code is: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 772usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Downloaded version is lower than installed version$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 802usize , placeholders : & ["$file"] , exception : Some ("Exception") , regex : "^Can't create parent directory for entry point: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 807usize , placeholders : & ["$file"] , exception : Some ("Exception") , regex : "^Can't replace entry point: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 852usize , placeholders : & ["$folder"] , exception : Some ("Exception") , regex : "^Could not rmdir (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 867usize , placeholders : & [] , exception : Some ("Exception") , regex : "^core/shipped\\.json is not available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 872usize , placeholders : & [] , exception : Some ("Exception") , regex : "^core/shipped\\.json content is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 878usize , placeholders : & [] , exception : Some ("Exception") , regex : "^core/shipped\\.json is not available in the new release$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 883usize , placeholders : & [] , exception : Some ("Exception") , regex : "^core/shipped\\.json content is invalid in the new release$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 900usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not unlink sample config$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 911usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not delete themes README$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 953usize , placeholders : & ["$path"] , exception : Some ("Exception") , regex : "^Could not unlink: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 958usize , placeholders : & ["$path"] , exception : Some ("Exception") , regex : "^Could not rmdir: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 995usize , placeholders : & ["$this->baseDir" , "dirname($fileName)"] , exception : Some ("Exception") , regex : "^Could not mkdir (.*)/\\.\\./(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 1000usize , placeholders : & ["sprintf(\n\t\t\t\t\t\t\t'Could not rename %s to %s',\n\t\t\t\t\t\t\t$path,\n\t\t\t\t\t\t\t$this->baseDir . '/../' . $fileName\n\t\t\t\t\t\t)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 1012usize , placeholders : & ["$path"] , exception : Some ("Exception") , regex : "^Could not rmdir (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 1057usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not rmdir \\$storagelocation$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 1062usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not rmdir \\.step$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 1082usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not create \\$updaterDir$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 1087usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not create \\.step$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 1093usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not write to \\.step$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 1126usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not read from \\.step$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 1131usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Can't decode \\.step JSON data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 1155usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Could not delete \\.step$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/updater/index.php" , line : 1183usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 1196usize , placeholders : & [] , exception : Some ("LogException") , regex : "^Could not open updater\\.log$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 1213usize , placeholders : & [] , exception : Some ("LogException") , regex : "^Could not write to updater\\.log$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/updater/index.php" , line : 1225usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/updater/index.php" , line : 1282usize , placeholders : & [] , exception : None , regex : "^\\[info\\] request to updater$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/updater/index.php" , line : 1307usize , placeholders : & ["$stepNumber" , "$stepState"] , exception : None , regex : "^\\[info\\] Step (.*) is in state \"(.*)\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/updater/index.php" , line : 1321usize , placeholders : & ["$_POST['step']"] , exception : None , regex : "^\\[info\\] POST request for step \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 1325usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Not authenticated$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/updater/index.php" , line : 1330usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid step$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/updater/index.php" , line : 1378usize , placeholders : & [] , exception : None , regex : "^\\[error\\] POST request failed with UpdateException$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/updater/index.php" , line : 1393usize , placeholders : & [] , exception : None , regex : "^\\[error\\] POST request failed with other exception$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/updater/index.php" , line : 1409usize , placeholders : & [] , exception : None , regex : "^\\[info\\] show HTML page$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/psr/log/Psr/Log/LoggerTrait.php" , line : 25usize , placeholders : & ["LogLevel::EMERGENCY"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/psr/log/Psr/Log/LoggerTrait.php" , line : 41usize , placeholders : & ["LogLevel::ALERT"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/psr/log/Psr/Log/LoggerTrait.php" , line : 56usize , placeholders : & ["LogLevel::CRITICAL"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/psr/log/Psr/Log/LoggerTrait.php" , line : 70usize , placeholders : & ["LogLevel::ERROR"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/psr/log/Psr/Log/LoggerTrait.php" , line : 86usize , placeholders : & ["LogLevel::WARNING"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/psr/log/Psr/Log/LoggerTrait.php" , line : 99usize , placeholders : & ["LogLevel::NOTICE"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/psr/log/Psr/Log/LoggerTrait.php" , line : 114usize , placeholders : & ["LogLevel::INFO"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/psr/log/Psr/Log/LoggerTrait.php" , line : 127usize , placeholders : & ["LogLevel::DEBUG"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/psr/log/Psr/Log/AbstractLogger.php" , line : 24usize , placeholders : & ["LogLevel::EMERGENCY"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/psr/log/Psr/Log/AbstractLogger.php" , line : 40usize , placeholders : & ["LogLevel::ALERT"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/psr/log/Psr/Log/AbstractLogger.php" , line : 55usize , placeholders : & ["LogLevel::CRITICAL"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/psr/log/Psr/Log/AbstractLogger.php" , line : 69usize , placeholders : & ["LogLevel::ERROR"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/psr/log/Psr/Log/AbstractLogger.php" , line : 85usize , placeholders : & ["LogLevel::WARNING"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/psr/log/Psr/Log/AbstractLogger.php" , line : 98usize , placeholders : & ["LogLevel::NOTICE"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/psr/log/Psr/Log/AbstractLogger.php" , line : 113usize , placeholders : & ["LogLevel::INFO"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/psr/log/Psr/Log/AbstractLogger.php" , line : 126usize , placeholders : & ["LogLevel::DEBUG"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/Queue.php" , line : 75usize , placeholders : & ["$this->getType()" , "$this->toolValueToString($value)"] , exception : Some ("Ramsey\\Collection\\Exception\\InvalidArgumentException") , regex : "^Value must be of type (.*); value is (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/Queue.php" , line : 102usize , placeholders : & [] , exception : Some ("Ramsey\\Collection\\Exception\\NoSuchElementException") , regex : "^Can't return element from Queue\\. Queue is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/Queue.php" , line : 159usize , placeholders : & [] , exception : Some ("Ramsey\\Collection\\Exception\\NoSuchElementException") , regex : "^Can't return element from Queue\\. Queue is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/DoubleEndedQueue.php" , line : 43usize , placeholders : & ["$this->getType()" , "$this->toolValueToString($value)"] , exception : Some ("Ramsey\\Collection\\Exception\\InvalidArgumentException") , regex : "^Value must be of type (.*); value is (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/DoubleEndedQueue.php" , line : 60usize , placeholders : & ["$this->getType()" , "$this->toolValueToString($element)"] , exception : Some ("Ramsey\\Collection\\Exception\\InvalidArgumentException") , regex : "^Value must be of type (.*); value is (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/DoubleEndedQueue.php" , line : 117usize , placeholders : & [] , exception : Some ("Ramsey\\Collection\\Exception\\NoSuchElementException") , regex : "^Can't return element from Queue\\. Queue is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/DoubleEndedQueue.php" , line : 162usize , placeholders : & [] , exception : Some ("Ramsey\\Collection\\Exception\\NoSuchElementException") , regex : "^Can't return element from Queue\\. Queue is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/AbstractCollection.php" , line : 78usize , placeholders : & ["$this->getType()" , "$this->toolValueToString($value)"] , exception : Some ("Ramsey\\Collection\\Exception\\InvalidArgumentException") , regex : "^Value must be of type (.*); value is (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/AbstractCollection.php" , line : 129usize , placeholders : & [] , exception : Some ("Ramsey\\Collection\\Exception\\OutOfBoundsException") , regex : "^Can't determine first item\\. Collection is empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/AbstractCollection.php" , line : 146usize , placeholders : & [] , exception : Some ("Ramsey\\Collection\\Exception\\OutOfBoundsException") , regex : "^Can't determine last item\\. Collection is empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/AbstractCollection.php" , line : 159usize , placeholders : & ["$order"] , exception : Some ("Ramsey\\Collection\\Exception\\InvalidSortOrderException") , regex : "^Invalid sort order given: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/AbstractCollection.php" , line : 245usize , placeholders : & ["sprintf('Collection with index %d must be of type %s', $index, static::class)"] , exception : Some ("Ramsey\\Collection\\Exception\\CollectionMismatchException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/AbstractCollection.php" , line : 253usize , placeholders : & ["sprintf('Collection items in collection with index %d must be of type %s', $index, $this->getType())"] , exception : Some ("Ramsey\\Collection\\Exception\\CollectionMismatchException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/AbstractCollection.php" , line : 287usize , placeholders : & ["static::class"] , exception : Some ("Ramsey\\Collection\\Exception\\CollectionMismatchException") , regex : "^Collection must be of type (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/AbstractCollection.php" , line : 293usize , placeholders : & ["$this->getType()"] , exception : Some ("Ramsey\\Collection\\Exception\\CollectionMismatchException") , regex : "^Collection items must be of type (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/Tool/ValueExtractorTrait.php" , line : 43usize , placeholders : & [] , exception : Some ("Ramsey\\Collection\\Exception\\ValueExtractionException") , regex : "^Unable to extract a value from a non\\-object$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/Tool/ValueExtractorTrait.php" , line : 54usize , placeholders : & ["sprintf('Method or property \"%s\" not defined in %s', $propertyOrMethod, get_class($object))"] , exception : Some ("Ramsey\\Collection\\Exception\\ValueExtractionException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/Map/NamedParameterMap.php" , line : 71usize , placeholders : & ["var_export($value, true)"] , exception : Some ("Ramsey\\Collection\\Exception\\InvalidArgumentException") , regex : "^Map elements are key/value pairs; a key must be provided for value (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/Map/NamedParameterMap.php" , line : 78usize , placeholders : & ["$offset"] , exception : Some ("Ramsey\\Collection\\Exception\\InvalidArgumentException") , regex : "^Attempting to set value for unconfigured parameter '(.*)'$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/Map/NamedParameterMap.php" , line : 85usize , placeholders : & ["$offset" , "$this->namedParameters[$offset]" , "$this->toolValueToString($value)"] , exception : Some ("Ramsey\\Collection\\Exception\\InvalidArgumentException") , regex : "^Value for '(.*)' must be of type (.*); value is (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/Map/AbstractTypedMap.php" , line : 47usize , placeholders : & ["var_export($value, true)"] , exception : Some ("Ramsey\\Collection\\Exception\\InvalidArgumentException") , regex : "^Map elements are key/value pairs; a key must be provided for value (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/Map/AbstractTypedMap.php" , line : 54usize , placeholders : & ["$this->getKeyType()" , "$this->toolValueToString($offset)"] , exception : Some ("Ramsey\\Collection\\Exception\\InvalidArgumentException") , regex : "^Key must be of type (.*); key is (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/Map/AbstractTypedMap.php" , line : 61usize , placeholders : & ["$this->getValueType()" , "$this->toolValueToString($value)"] , exception : Some ("Ramsey\\Collection\\Exception\\InvalidArgumentException") , regex : "^Value must be of type (.*); value is (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/collection/src/Map/AbstractMap.php" , line : 40usize , placeholders : & ["var_export($value, true)"] , exception : Some ("Ramsey\\Collection\\Exception\\InvalidArgumentException") , regex : "^Map elements are key/value pairs; a key must be provided for value (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Generator/DceSecurityGenerator.php" , line : 87usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\DceSecurityException") , regex : "^Local domain must be a valid DCE Security domain$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Generator/DceSecurityGenerator.php" , line : 93usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\DceSecurityException") , regex : "^Local identifier out of bounds; it must be a value between 0 and 4294967295$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Generator/DceSecurityGenerator.php" , line : 99usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\DceSecurityException") , regex : "^Clock sequence out of bounds; it must be a value between 0 and 63$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Generator/DceSecurityGenerator.php" , line : 107usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\DceSecurityException") , regex : "^A local identifier must be provided for the org domain$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Generator/DceSecurityGenerator.php" , line : 135usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\DceSecurityException") , regex : "^Local identifier out of bounds; it must be a value between 0 and 4294967295$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Generator/DefaultNameGenerator.php" , line : 35usize , placeholders : & ["sprintf(\n                'Unable to hash namespace and name with algorithm \\'%s\\'',\n                $hashAlgorithm\n            )"] , exception : Some ("Ramsey\\Uuid\\Exception\\NameException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Generator/DefaultTimeGenerator.php" , line : 87usize , placeholders : & ["$exception->getMessage()"] , exception : Some ("Ramsey\\Uuid\\Exception\\RandomSourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Generator/DefaultTimeGenerator.php" , line : 105usize , placeholders : & ["sprintf(\n                'The generated time of \\'%s\\' is larger than expected',\n                $timeHex\n            )"] , exception : Some ("Ramsey\\Uuid\\Exception\\TimeSourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Generator/DefaultTimeGenerator.php" , line : 142usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^Invalid node value$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Generator/CombGenerator.php" , line : 91usize , placeholders : & ["self::TIMESTAMP_BYTES"] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^Length must be a positive integer greater than or equal to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Generator/PeclUuidNameGenerator.php" , line : 46usize , placeholders : & ["sprintf(\n                    'Unable to hash namespace and name with algorithm \\'%s\\'',\n                    $hashAlgorithm\n                )"] , exception : Some ("Ramsey\\Uuid\\Exception\\NameException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Generator/RandomBytesGenerator.php" , line : 37usize , placeholders : & ["$exception->getMessage()"] , exception : Some ("Ramsey\\Uuid\\Exception\\RandomSourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/DeprecatedUuidMethodsTrait.php" , line : 141usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\UnsupportedOperationException") , regex : "^Not a time\\-based UUID$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/DeprecatedUuidMethodsTrait.php" , line : 154usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Ramsey\\Uuid\\Exception\\DateTimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/DeprecatedUuidMethodsTrait.php" , line : 318usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\UnsupportedOperationException") , regex : "^Not a time\\-based UUID$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/DeprecatedUuidMethodsTrait.php" , line : 332usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\UnsupportedOperationException") , regex : "^Not a time\\-based UUID$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Math/BrickMathCalculator.php" , line : 106usize , placeholders : & ["$exception->getMessage()"] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Math/BrickMathCalculator.php" , line : 119usize , placeholders : & ["$exception->getMessage()"] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Nonstandard/UuidV6.php" , line : 66usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^Fields used to create a UuidV6 must represent a version 6 \\(ordered\\-time\\) UUID$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Nonstandard/UuidV6.php" , line : 94usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Ramsey\\Uuid\\Exception\\DateTimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Nonstandard/Fields.php" , line : 63usize , placeholders : & ["strlen($bytes)"] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^The byte string must be 16 bytes long; received (.*) bytes$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Nonstandard/UuidBuilder.php" , line : 77usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Ramsey\\Uuid\\Exception\\UnableToBuildUuidException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Guid/Fields.php" , line : 67usize , placeholders : & ["strlen($bytes)"] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^The byte string must be 16 bytes long; received (.*) bytes$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Guid/Fields.php" , line : 76usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^The byte string received does not conform to the RFC 4122 or Microsoft Corporation variants$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Guid/Fields.php" , line : 83usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^The byte string received does not contain a valid version$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Guid/GuidBuilder.php" , line : 78usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Ramsey\\Uuid\\Exception\\UnableToBuildUuidException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Type/Hexadecimal.php" , line : 52usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^Value must be a hexadecimal number$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Type/Decimal.php" , line : 53usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^Value must be a signed decimal or a string containing only digits 0\\-9 and, optionally, a decimal point or sign \\(\\+ or \\-\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Type/Time.php" , line : 104usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\UnsupportedOperationException") , regex : "^Attempted to unserialize an invalid value$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Type/Integer.php" , line : 63usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^Value must be a signed integer or a string containing only digits 0\\-9 and, optionally, a sign \\(\\+ or \\-\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Rfc4122/Fields.php" , line : 63usize , placeholders : & ["strlen($bytes)"] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^The byte string must be 16 bytes long; received (.*) bytes$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Rfc4122/Fields.php" , line : 72usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^The byte string received does not conform to the RFC 4122 variant$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Rfc4122/Fields.php" , line : 78usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^The byte string received does not contain a valid RFC 4122 version$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Rfc4122/UuidV1.php" , line : 58usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^Fields used to create a UuidV1 must represent a version 1 \\(time\\-based\\) UUID$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Rfc4122/UuidV1.php" , line : 89usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Ramsey\\Uuid\\Exception\\DateTimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Rfc4122/UuidV5.php" , line : 50usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^Fields used to create a UuidV5 must represent a version 5 \\(named\\-based, SHA1\\-hashed\\) UUID$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Rfc4122/UuidV2.php" , line : 68usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^Fields used to create a UuidV2 must represent a version 2 \\(DCE Security\\) UUID$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Rfc4122/UuidV2.php" , line : 108usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Ramsey\\Uuid\\Exception\\DateTimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Rfc4122/UuidV3.php" , line : 50usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^Fields used to create a UuidV3 must represent a version 3 \\(name\\-based, MD5\\-hashed\\) UUID$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Rfc4122/UuidV4.php" , line : 50usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^Fields used to create a UuidV4 must represent a version 4 \\(random\\) UUID$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Rfc4122/VariantTrait.php" , line : 58usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidBytesException") , regex : "^Invalid number of bytes$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Rfc4122/UuidBuilder.php" , line : 95usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\UnsupportedOperationException") , regex : "^The UUID version in the given fields is not supported by this UUID builder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Rfc4122/UuidBuilder.php" , line : 100usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Ramsey\\Uuid\\Exception\\UnableToBuildUuidException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Builder/FallbackBuilder.php" , line : 69usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\BuilderNotFoundException") , regex : "^Could not find a suitable builder for the provided codec and fields$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Provider/Node/RandomNodeProvider.php" , line : 42usize , placeholders : & ["$exception->getMessage()"] , exception : Some ("Ramsey\\Uuid\\Exception\\RandomSourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Provider/Node/FallbackNodeProvider.php" , line : 55usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\NodeException") , regex : "^Unable to find a suitable node provider$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Provider/Node/StaticNodeProvider.php" , line : 46usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^Static node value cannot be greater than 12 hexadecimal characters$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Provider/Node/SystemNodeProvider.php" , line : 62usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\NodeException") , regex : "^Unable to fetch a node for this system$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Provider/Dce/SystemDceSecurityProvider.php" , line : 56usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\DceSecurityException") , regex : "^Unable to get a user identifier using the system DCE Security provider; please provide a custom identifier or use a different provider$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Provider/Dce/SystemDceSecurityProvider.php" , line : 86usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\DceSecurityException") , regex : "^Unable to get a group identifier using the system DCE Security provider; please provide a custom identifier or use a different provider$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Codec/StringCodec.php" , line : 94usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^\\$bytes string should contain 16 characters\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Codec/StringCodec.php" , line : 130usize , placeholders : & ["$encodedUuid"] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidUuidStringException") , regex : "^Invalid UUID string: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Codec/OrderedTimeCodec.php" , line : 63usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^Expected RFC 4122 version 1 \\(time\\-based\\) UUID$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Codec/OrderedTimeCodec.php" , line : 87usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\InvalidArgumentException") , regex : "^\\$bytes string should contain 16 characters\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Codec/OrderedTimeCodec.php" , line : 104usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\UnsupportedOperationException") , regex : "^Attempting to decode a non\\-time\\-based UUID using OrderedTimeCodec$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/ramsey/uuid/src/Lazy/LazyUuidFromString.php" , line : 503usize , placeholders : & [] , exception : Some ("Ramsey\\Uuid\\Exception\\UnsupportedOperationException") , regex : "^Not a time\\-based UUID$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/base64url/src/Base64Url.php" , line : 51usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid data provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/MapObject.php" , line : 45usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The list must contain only MapItem objects\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/SignedIntegerObject.php" , line : 81usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value must be a negative integer\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/SignedIntegerObject.php" , line : 105usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Out of range\\. Please use NegativeBigIntegerTag tag with ByteStringObject object instead\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/SignedIntegerObject.php" , line : 115usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unable to convert the data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/OtherObject/OtherObjectManager.php" , line : 31usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid additional information\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/OtherObject/HalfPrecisionFloatObject.php" , line : 39usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value is not a valid half precision floating point$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/OtherObject/DoublePrecisionFloatObject.php" , line : 39usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value is not a valid double precision floating point$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/OtherObject/SinglePrecisionFloatObject.php" , line : 39usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value is not a valid single precision floating point$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/OtherObject/SimpleObject.php" , line : 53usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value is not a valid simple value$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Tag/NegativeBigIntegerTag.php" , line : 37usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^This tag only accepts a Byte String object\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Tag/Base64UrlEncodingTag.php" , line : 40usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^This tag only accepts Byte String, Infinite Byte String, Text String or Infinite Text String objects\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Tag/BigFloatTag.php" , line : 31usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^The extension \"bcmath\" is required to use this tag$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Tag/BigFloatTag.php" , line : 49usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^This tag only accepts a ListObject object that contains an exponent and a mantissa\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Tag/BigFloatTag.php" , line : 53usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The exponent must be a Signed Integer or an Unsigned Integer object\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Tag/BigFloatTag.php" , line : 57usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The mantissa must be a Positive or Negative Signed Integer or an Unsigned Integer object\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Tag/Base16EncodingTag.php" , line : 39usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^This tag only accepts Byte String, Infinite Byte String, Text String or Infinite Text String objects\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Tag/PositiveBigIntegerTag.php" , line : 37usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^This tag only accepts a Byte String object\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Tag/TimestampTag.php" , line : 41usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^This tag only accepts a Byte String object\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Tag/Base64EncodingTag.php" , line : 39usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^This tag only accepts Byte String, Infinite Byte String, Text String or Infinite Text String objects\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Tag/Base64EncodingTag.php" , line : 57usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unable to decode the data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Tag/DecimalFractionTag.php" , line : 31usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^The extension \"bcmath\" is required to use this tag$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Tag/DecimalFractionTag.php" , line : 34usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^This tag only accepts a ListObject object that contains an exponent and a mantissa\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Tag/DecimalFractionTag.php" , line : 38usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The exponent must be a Signed Integer or an Unsigned Integer object\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Tag/DecimalFractionTag.php" , line : 42usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The mantissa must be a Positive or Negative Signed Integer or an Unsigned Integer object\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Tag/TagObjectManager.php" , line : 32usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid tag ID\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Utils.php" , line : 59usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid data provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Utils.php" , line : 68usize , placeholders : & ["$message"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/ListObject.php" , line : 46usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The list must contain only CBORObject objects\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/ListObject.php" , line : 77usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Index not found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/InfiniteListObject.php" , line : 46usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unable to convert the data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/ByteStringWithChunkObject.php" , line : 41usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unable to convert the data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/UnsignedIntegerObject.php" , line : 97usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value must be a positive integer\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/UnsignedIntegerObject.php" , line : 118usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Out of range\\. Please use PositiveBigIntegerTag tag with ByteStringObject object instead\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/UnsignedIntegerObject.php" , line : 128usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unable to convert the data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/StringStream.php" , line : 30usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Unable to open the memory$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/StringStream.php" , line : 34usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Unable to write the memory$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/StringStream.php" , line : 38usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Unable to rewind the memory$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/StringStream.php" , line : 50usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Unable to read the memory$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/StringStream.php" , line : 53usize , placeholders : & ["sprintf('Out of range. Expected: %d, read: %d.', $length, mb_strlen($data, '8bit'))"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Decoder.php" , line : 62usize , placeholders : & ["sprintf('Cannot parse the data. Found invalid Additional Information \"%s\" (%d).', str_pad(decbin($ai), 5, '0', STR_PAD_LEFT), $ai)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Decoder.php" , line : 106usize , placeholders : & ["sprintf('Unsupported major type \"%s\" (%d).', str_pad(decbin($mt), 5, '0', STR_PAD_LEFT), $mt)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Decoder.php" , line : 117usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Unable to parse the data\\. Infinite Byte String object can only get Byte String objects\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Decoder.php" , line : 127usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Unable to parse the data\\. Infinite Text String object can only get Text String objects\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Decoder.php" , line : 149usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Cannot parse the data\\. No enclosing indefinite\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/Decoder.php" , line : 157usize , placeholders : & ["sprintf('Cannot parse the data. Found infinite length for Major Type \"%s\" (%d).', str_pad(decbin($mt), 5, '0', STR_PAD_LEFT), $mt)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/InfiniteMapObject.php" , line : 47usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unable to convert the data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/LengthCalculator.php" , line : 59usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unable to convert the data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/spomky-labs/cbor-php/src/TextStringWithChunkObject.php" , line : 41usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unable to convert the data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/deepdiver/zipstreamer/src/Lib/Count64_64.php" , line : 46usize , placeholders : & ["self::EXCEPTION_32BIT_OVERFLOW"] , exception : Some ("OverFlowException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/deepdiver/zipstreamer/src/Lib/Count64_64.php" , line : 51usize , placeholders : & ["self::EXCEPTION_32BIT_OVERFLOW"] , exception : Some ("OverFlowException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/deepdiver/zipstreamer/src/Lib/Count64_64.php" , line : 59usize , placeholders : & ["self::EXCEPTION_32BIT_OVERFLOW"] , exception : Some ("OverFlowException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/deepdiver/zipstreamer/src/Lib/Count64_64.php" , line : 64usize , placeholders : & ["self::EXCEPTION_SET_INVALID_ARGUMENT"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/deepdiver/zipstreamer/src/Lib/Count64_64.php" , line : 75usize , placeholders : & ["self::EXCEPTION_ADD_INVALID_ARGUMENT"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/deepdiver/zipstreamer/src/Lib/Count64_64.php" , line : 78usize , placeholders : & ["self::EXCEPTION_32BIT_OVERFLOW"] , exception : Some ("OverFlowException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/deepdiver/zipstreamer/src/Lib/Count64_32.php" , line : 48usize , placeholders : & ["self::EXCEPTION_32BIT_OVERFLOW"] , exception : Some ("OverflowException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/deepdiver/zipstreamer/src/Lib/Count64_32.php" , line : 54usize , placeholders : & ["self::EXCEPTION_32BIT_OVERFLOW"] , exception : Some ("OverflowException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/deepdiver/zipstreamer/src/Lib/Count64_32.php" , line : 59usize , placeholders : & ["self::EXCEPTION_SET_INVALID_ARGUMENT"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/deepdiver/zipstreamer/src/Lib/Count64_32.php" , line : 71usize , placeholders : & ["self::EXCEPTION_32BIT_OVERFLOW"] , exception : Some ("OverflowException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/deepdiver/zipstreamer/src/Lib/Count64_32.php" , line : 82usize , placeholders : & ["self::EXCEPTION_32BIT_OVERFLOW"] , exception : Some ("OverflowException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/deepdiver/zipstreamer/src/Lib/Count64_32.php" , line : 88usize , placeholders : & ["self::EXCEPTION_32BIT_OVERFLOW"] , exception : Some ("OverflowException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/deepdiver/zipstreamer/src/Lib/Count64_32.php" , line : 92usize , placeholders : & ["self::EXCEPTION_ADD_INVALID_ARGUMENT"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/deepdiver/zipstreamer/src/ZipStreamer.php" , line : 310usize , placeholders : & [] , exception : Some ("Exception") , regex : "^unable to use compression method DEFLATE with level other than NONE \\(requires pecl_http >= 0\\.10\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/deepdiver/zipstreamer/src/ZipStreamer.php" , line : 313usize , placeholders : & ["$compress"] , exception : Some ("Exception") , regex : "^invalid option (.*) \\(compression method\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/deepdiver/zipstreamer/src/ZipStreamer.php" , line : 320usize , placeholders : & ["$level"] , exception : Some ("Exception") , regex : "^invalid option (.*) \\(compression level$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/wapmorgan/mp3info/src/Mp3Info.php" , line : 223usize , placeholders : & ["$filename"] , exception : Some ("Exception") , regex : "^File (.*) is not present!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/wapmorgan/mp3info/src/Mp3Info.php" , line : 229usize , placeholders : & ["$filename"] , exception : Some ("Exception") , regex : "^File (.*) is not mpeg/audio!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/wapmorgan/mp3info/src/Mp3Info.php" , line : 370usize , placeholders : & ["$pos" , "dechex($pos)"] , exception : Some ("Exception") , regex : "^At (.*)\\(0x(.*)\\) should be a frame header!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/wapmorgan/mp3info/src/Mp3Info.php" , line : 444usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Unexpected end of file!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/wapmorgan/mp3info/src/Mp3Info.php" , line : 536usize , placeholders : & [] , exception : Some ("Exception") , regex : "^NEED TO PARSE EXTENDED HEADER!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/wapmorgan/mp3info/src/Mp3Info.php" , line : 545usize , placeholders : & [] , exception : Some ("Exception") , regex : "^NEED TO PARSE EXTENDED HEADER!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/wapmorgan/mp3info/src/Mp3Info.php" , line : 547usize , placeholders : & [] , exception : Some ("Exception") , regex : "^NEED TO PARSE id3v2\\.4 FOOTER!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/wapmorgan/mp3info/src/Mp3Info.php" , line : 992usize , placeholders : & ["$data['encoding']"] , exception : Some ("RuntimeException") , regex : "^Unknown text encoding type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/wapmorgan/mp3info/src/Mp3Info.php" , line : 1049usize , placeholders : & ["$filename"] , exception : Some ("Exception") , regex : "^File (.*) is not present!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mexitek/phpcolors/src/Mexitek/PHPColors/Color.php" , line : 128usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Param was not an HSL array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mexitek/phpcolors/src/Mexitek/PHPColors/Color.php" , line : 199usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Param was not an RGB array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mexitek/phpcolors/src/Mexitek/PHPColors/Color.php" , line : 226usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Param was not an RGB array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mexitek/phpcolors/src/Mexitek/PHPColors/Color.php" , line : 697usize , placeholders : & [] , exception : Some ("Exception") , regex : "^HEX color does not match format$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mexitek/phpcolors/src/Mexitek/PHPColors/Color.php" , line : 704usize , placeholders : & [] , exception : Some ("Exception") , regex : "^HEX color needs to be 6 or 3 digits long$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/cose-lib/src/Key/RsaKey.php" , line : 193usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unable to convert to an integer$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/cose-lib/src/Algorithm/Signature/ECDSA/ECSignature.php" , line : 43usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid signature length\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/cose-lib/src/Algorithm/Signature/ECDSA/ECSignature.php" , line : 62usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unable to convert into ASN\\.1$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/cose-lib/src/Algorithm/Signature/ECDSA/ECSignature.php" , line : 74usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid data\\. Should start with a sequence\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/cose-lib/src/Algorithm/Signature/ECDSA/ECSignature.php" , line : 87usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unable to convert from ASN\\.1$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/cose-lib/src/Algorithm/Signature/ECDSA/ECSignature.php" , line : 125usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid data\\. Should contain an integer\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/cose-lib/src/Algorithm/Signature/RSA/RSA.php" , line : 30usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unable to sign the data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/cose-lib/src/Algorithm/Signature/RSA/PSSRSA.php" , line : 56usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid modulus length$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/cose-lib/src/Algorithm/Signature/RSA/PSSRSA.php" , line : 73usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/cose-lib/src/Algorithm/Signature/RSA/PSSRSA.php" , line : 103usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Unable to convert the integer$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/cose-lib/src/Algorithm/Signature/RSA/PSSRSA.php" , line : 133usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/cose-lib/src/Algorithm/Signature/RSA/PSSRSA.php" , line : 156usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/cose-lib/src/Algorithm/Signature/RSA/PSSRSA.php" , line : 159usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/cose-lib/src/Algorithm/Signature/RSA/PSSRSA.php" , line : 165usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/cose-lib/src/Algorithm/Signature/RSA/PSSRSA.php" , line : 172usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/cose-lib/src/Algorithm/Signature/RSA/PSSRSA.php" , line : 175usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/cose-lib/src/Algorithm/Signature/EdDSA/EdDSA.php" , line : 40usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unsupported curve$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/cose-lib/src/Algorithm/Signature/EdDSA/EdDSA.php" , line : 52usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unsupported curve$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/metadata-service/src/MetadataStatement.php" , line : 445usize , placeholders : & ["sprintf('The parameter \"%s\" is missing', $key)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/metadata-service/src/MetadataService.php" , line : 138usize , placeholders : & ["sprintf('The Metadata Statement with AAGUID \"%s\" is missing', $aaguid)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/web-auth/metadata-service/src/MetadataService.php" , line : 151usize , placeholders : & [] , exception : None , regex : "^Trying to get the metadata statement for a given entry$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/metadata-service/src/MetadataService.php" , line : 156usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^The Metadata Statement has not been published$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/web-auth/metadata-service/src/MetadataService.php" , line : 160usize , placeholders : & [] , exception : None , regex : "^The metadata statement exists$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/web-auth/metadata-service/src/MetadataService.php" , line : 161usize , placeholders : & [] , exception : None , regex : "^Metadata Statement$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/web-auth/metadata-service/src/MetadataService.php" , line : 165usize , placeholders : & [] , exception : None , regex : "^An error occurred$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/web-auth/metadata-service/src/MetadataService.php" , line : 182usize , placeholders : & [] , exception : None , regex : "^Trying to get the metadata service TOC payload$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/web-auth/metadata-service/src/MetadataService.php" , line : 186usize , placeholders : & [] , exception : None , regex : "^The TOC payload has been received$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/web-auth/metadata-service/src/MetadataService.php" , line : 187usize , placeholders : & [] , exception : None , regex : "^TOC payload$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/web-auth/metadata-service/src/MetadataService.php" , line : 191usize , placeholders : & [] , exception : None , regex : "^An error occurred$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/metadata-service/src/MetadataTOCPayloadEntry.php" , line : 72usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Authenticators cannot support both AAID and AAGUID$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/metadata-service/src/MetadataTOCPayloadEntry.php" , line : 75usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^If neither AAID nor AAGUID are set, the attestation certificate identifier list shall not be empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/metadata-service/src/Version.php" , line : 37usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Invalid data\\. Must contain at least one item$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/AttestationObjectLoader.php" , line : 76usize , placeholders : & [] , exception : None , regex : "^Trying to load the data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/AttestationObjectLoader.php" , line : 81usize , placeholders : & [] , exception : None , regex : "^Loading the Attestation Statement$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/AttestationObjectLoader.php" , line : 93usize , placeholders : & [] , exception : None , regex : "^Attestation Statement loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/AttestationObjectLoader.php" , line : 94usize , placeholders : & [] , exception : None , regex : "^Attestation Statement loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/AttestationObjectLoader.php" , line : 101usize , placeholders : & ["sprintf('Signature counter: %d', $signCount)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/AttestationObjectLoader.php" , line : 105usize , placeholders : & [] , exception : None , regex : "^Attested Credential Data is present$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/AttestationObjectLoader.php" , line : 113usize , placeholders : & [] , exception : None , regex : "^Attested Credential Data loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/AttestationObjectLoader.php" , line : 114usize , placeholders : & [] , exception : None , regex : "^Attested Credential Data loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/AttestationObjectLoader.php" , line : 119usize , placeholders : & [] , exception : None , regex : "^Extension Data loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/AttestationObjectLoader.php" , line : 122usize , placeholders : & [] , exception : None , regex : "^Extension Data loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/AttestationObjectLoader.php" , line : 123usize , placeholders : & [] , exception : None , regex : "^Extension Data loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/AttestationObjectLoader.php" , line : 130usize , placeholders : & [] , exception : None , regex : "^Attestation Object loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/AttestationObjectLoader.php" , line : 131usize , placeholders : & [] , exception : None , regex : "^Attestation Object$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/AttestationObjectLoader.php" , line : 135usize , placeholders : & [] , exception : None , regex : "^An error occurred$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/TPMAttestationStatementSupport.php" , line : 98usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unsupported attestation statement$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/TPMAttestationStatementSupport.php" , line : 121usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid or unsupported key type\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/TPMAttestationStatementSupport.php" , line : 225usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unsupported type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/TPMAttestationStatementSupport.php" , line : 246usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unsupported hash algorithm$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/TPMAttestationStatementSupport.php" , line : 307usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^ECDAA not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/PackedAttestationStatementSupport.php" , line : 90usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unsupported attestation statement$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/PackedAttestationStatementSupport.php" , line : 167usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^ECDAA not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/PackedAttestationStatementSupport.php" , line : 188usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Invalid algorithm$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/FidoU2FAttestationStatementSupport.php" , line : 109usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid certificate or certificate chain$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/AndroidSafetyNetAttestationStatementSupport.php" , line : 76usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^The algorithm RS256 is missing\\. Did you forget to install the package web\\-token/jwt\\-signature\\-algorithm\\-rsa\\?$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/AndroidSafetyNetAttestationStatementSupport.php" , line : 79usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^The class Jose\\\\Component\\\\KeyManagement\\\\JWKFactory is missing\\. Did you forget to install the package web\\-token/jwt\\-key\\-mgmt\\?$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/AttestationStatement/AndroidSafetyNetAttestationStatementSupport.php" , line : 256usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unrecognized response$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/CollectedClientData.php" , line : 122usize , placeholders : & ["sprintf('The key \"%s\" is missing', $key)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/CollectedClientData.php" , line : 137usize , placeholders : & ["sprintf('The key \"%s\" is missing', $key)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/web-auth/webauthn-lib/src/AuthenticatorAttestationResponseValidator.php" , line : 123usize , placeholders : & [] , exception : None , regex : "^Checking the authenticator attestation response$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/web-auth/webauthn-lib/src/AuthenticatorAttestationResponseValidator.php" , line : 214usize , placeholders : & [] , exception : None , regex : "^The attestation is valid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/web-auth/webauthn-lib/src/AuthenticatorAttestationResponseValidator.php" , line : 215usize , placeholders : & [] , exception : None , regex : "^Public Key Credential Source$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/web-auth/webauthn-lib/src/AuthenticatorAttestationResponseValidator.php" , line : 219usize , placeholders : & [] , exception : None , regex : "^An error occurred$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/web-auth/webauthn-lib/src/AuthenticatorAttestationResponseValidator.php" , line : 262usize , placeholders : & [] , exception : None , regex : "^No attestation is asked\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/web-auth/webauthn-lib/src/AuthenticatorAttestationResponseValidator.php" , line : 267usize , placeholders : & [] , exception : None , regex : "^The Attestation Statement is anonymous\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/web-auth/webauthn-lib/src/AuthenticatorAttestationResponseValidator.php" , line : 272usize , placeholders : & [] , exception : None , regex : "^Anonymization required\\. AAGUID and Attestation Statement changed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/web-auth/webauthn-lib/src/AuthenticatorAttestationResponseValidator.php" , line : 284usize , placeholders : & [] , exception : None , regex : "^No attestation returned\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/web-auth/webauthn-lib/src/AuthenticatorAttestationResponseValidator.php" , line : 287usize , placeholders : & [] , exception : None , regex : "^Anonymization required\\. AAGUID and Attestation Statement changed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/AuthenticatorAttestationResponseValidator.php" , line : 335usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^The authenticator is compromised and cannot be used$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/AuthenticatorAttestationResponseValidator.php" , line : 367usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid attestation type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/PublicKeyCredentialSource.php" , line : 218usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unable to load the data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/web-auth/webauthn-lib/src/Counter/ThrowExceptionIfInvalid.php" , line : 39usize , placeholders : & [] , exception : None , regex : "^The counter is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/web-auth/webauthn-lib/src/AuthenticatorAssertionResponseValidator.php" , line : 97usize , placeholders : & [] , exception : None , regex : "^Checking the authenticator assertion response$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/web-auth/webauthn-lib/src/AuthenticatorAssertionResponseValidator.php" , line : 211usize , placeholders : & [] , exception : None , regex : "^The assertion is valid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/web-auth/webauthn-lib/src/AuthenticatorAssertionResponseValidator.php" , line : 212usize , placeholders : & [] , exception : None , regex : "^Public Key Credential Source$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/web-auth/webauthn-lib/src/AuthenticatorAssertionResponseValidator.php" , line : 216usize , placeholders : & [] , exception : None , regex : "^An error occurred$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/web-auth/webauthn-lib/src/PublicKeyCredentialLoader.php" , line : 82usize , placeholders : & [] , exception : None , regex : "^Trying to load data from an array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/web-auth/webauthn-lib/src/PublicKeyCredentialLoader.php" , line : 102usize , placeholders : & [] , exception : None , regex : "^The data has been loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/web-auth/webauthn-lib/src/PublicKeyCredentialLoader.php" , line : 103usize , placeholders : & [] , exception : None , regex : "^Public Key Credential$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/web-auth/webauthn-lib/src/PublicKeyCredentialLoader.php" , line : 107usize , placeholders : & [] , exception : None , regex : "^An error occurred$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/web-auth/webauthn-lib/src/PublicKeyCredentialLoader.php" , line : 116usize , placeholders : & [] , exception : None , regex : "^Trying to load data from a string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/web-auth/webauthn-lib/src/PublicKeyCredentialLoader.php" , line : 122usize , placeholders : & [] , exception : None , regex : "^An error occurred$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/PublicKeyCredentialLoader.php" , line : 178usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unable to create the response object$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/TrustPath/TrustPathLoader.php" , line : 43usize , placeholders : & ["sprintf('The trust path type \"%s\" is not supported', $data['type'])"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/CertificateChainChecker/OpenSSLCertificateChainChecker.php" , line : 98usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid certificate or certificate chain$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/CertificateChainChecker/OpenSSLCertificateChainChecker.php" , line : 148usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid certificate or certificate chain$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/CertificateChainChecker/OpenSSLCertificateChainChecker.php" , line : 193usize , placeholders : & ["sprintf('Directory \"%s\" was not created', $caDir)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/CertificateToolbox.php" , line : 64usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid certificate or certificate chain$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/CertificateToolbox.php" , line : 98usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid certificate or certificate chain$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/web-auth/webauthn-lib/src/CertificateToolbox.php" , line : 199usize , placeholders : & ["sprintf('Directory \"%s\" was not created', $caDir)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/X509/SAN/IPAddress.php" , line : 60usize , placeholders : & ["$contentLength"] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^A FG\\\\X509\\\\SAN\\\\IPAddress should have a content length of 4\\. Extracted length was (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/X509/SAN/SubjectAlternativeNames.php" , line : 68usize , placeholders : & ["OID::CERT_EXT_SUBJECT_ALT_NAME" , "$contentLength"] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Can not parse Subject Alternative Names: The Sequence within the octet string after the Object identifier (.*) is too short \\((.*) octets\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/X509/SAN/SubjectAlternativeNames.php" , line : 76usize , placeholders : & [] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Can not parse Subject Alternative Names: The Sequence length does not match the length of the surrounding octet string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/X509/SAN/SubjectAlternativeNames.php" , line : 89usize , placeholders : & [] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Could not parse Subject Alternative Name: Only DNSName and IP SANs are currently supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/X509/CertificateExtensions.php" , line : 68usize , placeholders : & ["$extension->getTypeName()"] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Could not parse Certificate Extensions: Expected ASN\\.1 Sequence but got (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/X509/CertificateExtensions.php" , line : 74usize , placeholders : & [] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Could not parse Certificate Extensions: Needs at least two child elements per extension sequence \\(object identifier and octet string\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/X509/CertificateExtensions.php" , line : 83usize , placeholders : & ["$extension->getTypeName()"] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Could not parse Certificate Extensions: Expected ASN\\.1 Object Identifier but got (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/Identifier.php" , line : 85usize , placeholders : & ["sprintf('Invalid class %d given', $class)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/Identifier.php" , line : 89usize , placeholders : & ["$isConstructed"] , exception : Some ("Exception") , regex : "^\\$isConstructed must be a boolean value \\((.*) given\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/Identifier.php" , line : 94usize , placeholders : & ["sprintf('Invalid $tagNumber %d given. You can only use positive integers.', $tagNumber)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/AbstractTime.php" , line : 31usize , placeholders : & ["sprintf(\"Could not create %s from date time string '%s': %s\", $className, $dateTime, $errorMessage)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/AbstractTime.php" , line : 35usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid first argument for some instance of AbstractTime constructor$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/Base128.php" , line : 47usize , placeholders : & ["sprintf('Malformed base-128 encoded value (0x%s).', strtoupper(bin2hex($octets)) ?: '0')"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/Composite/RelativeDistinguishedName.php" , line : 48usize , placeholders : & [] , exception : Some ("FG\\ASN1\\Exception\\NotImplementedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/TemplateParser.php" , line : 67usize , placeholders : & ["$expectedTypeId" , "$actualType"] , exception : Some ("Exception") , regex : "^Expected type \\((.*)\\) does not match actual type \\((.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/Construct.php" , line : 173usize , placeholders : & [] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Sequence length incorrect$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/AbstractString.php" , line : 106usize , placeholders : & ["$typeName" , "$this->value"] , exception : Some ("Exception") , regex : "^Could not create a (.*) from the character sequence '(.*)'\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/ASNObject.php" , line : 97usize , placeholders : & ["sprintf('Identifier of %s uses the long form and must therefor override \"ASNObject::getIdentifier()\".', get_class($this))"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/ASNObject.php" , line : 207usize , placeholders : & [] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Can not parse binary from data: Offset index larger than input size$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/ASNObject.php" , line : 286usize , placeholders : & ["$message"] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/ASNObject.php" , line : 293usize , placeholders : & [] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Can not parse identifier from data: Offset index larger than input size$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/ASNObject.php" , line : 304usize , placeholders : & [] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Can not parse identifier \\(long form\\) from data: Offset index larger than input size$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/ASNObject.php" , line : 321usize , placeholders : & [] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Can not parse content length from data: Offset index larger than input size$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/ASNObject.php" , line : 331usize , placeholders : & [] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Can not parse content length \\(long form\\) from data: Offset index larger than input size$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/ASNObject.php" , line : 337usize , placeholders : & [] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Can not parse content length from data: length > maximum integer$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/ASNObject.php" , line : 344usize , placeholders : & ["get_called_class()" , "$minimumLength" , "$contentLength"] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^A (.*) should have a content length of at least (.*)\\. Extracted length was (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/ASNObject.php" , line : 350usize , placeholders : & ["$contentLength" , "$lenDataRemaining"] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Content length (.*) exceeds remaining data length (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/ExplicitlyTaggedObject.php" , line : 124usize , placeholders : & ["$tag" , "$offsetIndexOfDecoratedObject" , "$totalContentLength" , "$remainingContentLength"] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Context\\-Specific explicitly tagged object \\[(.*)\\] starting at offset (.*) specifies a length of (.*) octets but (.*) remain after parsing the content$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/Universal/GeneralizedTime.php" , line : 124usize , placeholders : & [] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Invalid ISO 8601 Time String$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/Universal/ObjectIdentifier.php" , line : 36usize , placeholders : & ["$value" , "($i + 1)"] , exception : Some ("Exception") , regex : "^\\[(.*)\\] is no valid object identifier \\(sub identifier (.*) is not numeric\\)!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/Universal/ObjectIdentifier.php" , line : 124usize , placeholders : & [] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Malformed ASN\\.1 Object Identifier$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/Universal/Boolean.php" , line : 64usize , placeholders : & ["$contentLength"] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^An ASN\\.1 Boolean should not have a length other than one\\. Extracted length was (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/Universal/NullObject.php" , line : 46usize , placeholders : & ["$contentLength"] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^An ASN\\.1 Null should not have a length other than zero\\. Extracted length was (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/Universal/UTCTime.php" , line : 69usize , placeholders : & [] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Invalid UTC String$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/Universal/BitString.php" , line : 35usize , placeholders : & [] , exception : Some ("Exception") , regex : "^BitString: second parameter needs to be a positive number \\(or zero\\)!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/Universal/BitString.php" , line : 78usize , placeholders : & [] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Can not parse bit string with invalid padding$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/Universal/Integer.php" , line : 33usize , placeholders : & ["$value"] , exception : Some ("Exception") , regex : "^Invalid VALUE \\[(.*)\\] for ASN1_INTEGER$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/Universal/Integer.php" , line : 101usize , placeholders : & [] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Integer not minimally encoded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/Universal/RelativeObjectIdentifier.php" , line : 31usize , placeholders : & ["$subIdentifiers" , "($i + 1)"] , exception : Some ("Exception") , regex : "^\\[(.*)\\] is no valid object identifier \\(sub identifier (.*) is not numeric\\)!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/Universal/RelativeObjectIdentifier.php" , line : 49usize , placeholders : & [] , exception : Some ("FG\\ASN1\\Exception\\ParserException") , regex : "^Malformed ASN\\.1 Relative Object Identifier$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/ASN1/Universal/OctetString.php" , line : 32usize , placeholders : & [] , exception : Some ("Exception") , regex : "^OctetString: unrecognized input type!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/Utility/BigInteger.php" , line : 51usize , placeholders : & ["self::$_prefer"] , exception : Some ("UnexpectedValueException") , regex : "^Unknown number implementation: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/Utility/BigInteger.php" , line : 62usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Requires GMP or bcmath extension\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/Utility/BigInteger.php" , line : 75usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Expects a string representation of an integer\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/Utility/BigIntegerBcmath.php" , line : 44usize , placeholders : & ["sprintf('Can not represent %s as integer.', $this->_str)"] , exception : Some ("OverflowException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/Utility/BigIntegerGmp.php" , line : 48usize , placeholders : & ["sprintf('Can not represent %s as integer.', $this)"] , exception : Some ("OverflowException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fgrosse/phpasn1/lib/Utility/BigIntegerGmp.php" , line : 104usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^Unable to raise to power greater than PHP_INT_MAX\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/cweagans/composer-patches/src/Patches.php" , line : 267usize , placeholders : & ["$msg"] , exception : Some ("Exception") , regex : "^There was an error in the supplied patches file:(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/cweagans/composer-patches/src/Patches.php" , line : 274usize , placeholders : & [] , exception : Some ("Exception") , regex : "^There was an error in the supplied patch file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/cweagans/composer-patches/src/Patches.php" , line : 331usize , placeholders : & ["$description" , "$url"] , exception : Some ("Exception") , regex : "^Cannot apply patch (.*) \\((.*)\\)!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/cweagans/composer-patches/src/Patches.php" , line : 359usize , placeholders : & ["get_class($operation)"] , exception : Some ("Exception") , regex : "^Unknown operation: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/cweagans/composer-patches/src/Patches.php" , line : 428usize , placeholders : & ["$patch_url"] , exception : Some ("Exception") , regex : "^Cannot apply patch (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriResolver.php" , line : 102usize , placeholders : & ["sprintf('The uri must be a valid URI object received `%s`', gettype($uri))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 327usize , placeholders : & ["sprintf('The scheme `%s` is invalid.', $scheme)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 405usize , placeholders : & ["sprintf('the host `%s` could not be processed for IDN. Verify that ext/intl is installed for IDN support and that ICU is at least version 4.6.', $host)"] , exception : Some ("League\\Uri\\Exceptions\\IdnSupportMissing") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 417usize , placeholders : & ["sprintf('The host `%s` is invalid : %s', $host, $this->getIDNAErrors($arr['errors']))"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 422usize , placeholders : & ["sprintf('The Intl extension is misconfigured for %s, please correct this issue before proceeding.', PHP_OS)"] , exception : Some ("League\\Uri\\Exceptions\\IdnSupportMissing") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 430usize , placeholders : & ["sprintf('The host `%s` is invalid : a registered name can not contain URI delimiters or spaces', $host)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 435usize , placeholders : & ["sprintf('the host `%s` could not be processed for IDN. Verify that ext/intl is installed for IDN support and that ICU is at least version 4.6.', $host)"] , exception : Some ("League\\Uri\\Exceptions\\IdnSupportMissing") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 447usize , placeholders : & ["sprintf('Host `%s` is invalid', $host)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 451usize , placeholders : & ["sprintf('The host `%s` is invalid : %s', $host, $this->getIDNAErrors($arr['errors']))"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 456usize , placeholders : & ["sprintf('The Intl extension is misconfigured for %s, please correct this issue before proceeding.', PHP_OS)"] , exception : Some ("League\\Uri\\Exceptions\\IdnSupportMissing") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 517usize , placeholders : & ["sprintf('The host `%s` is invalid : the IP host is malformed', $host)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 521usize , placeholders : & ["sprintf('The host `%s` is invalid : the IP host is malformed', $host)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 526usize , placeholders : & ["sprintf('The host `%s` is invalid : the IP host is malformed', $host)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 535usize , placeholders : & ["sprintf('The host `%s` is invalid : the IP host is malformed', $host)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 552usize , placeholders : & ["sprintf('The port `%s` is invalid', $port)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 557usize , placeholders : & ["sprintf('The port `%s` is invalid', $port)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 607usize , placeholders : & ["sprintf('the URI `%s` must be absolute', (string) $uri)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 625usize , placeholders : & ["sprintf('the base URI `%s` must be absolute', (string) $base_uri)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 697usize , placeholders : & ["sprintf('Please install ext/fileinfo to use the %s() method.', __METHOD__)"] , exception : Some ("League\\Uri\\Exceptions\\FileinfoSupportMissing") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 710usize , placeholders : & ["sprintf('The file `%s` does not exist or is not readable', $path)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 790usize , placeholders : & ["sprintf('The object must implement the `%s` or the `%s`', Psr7UriInterface::class, UriInterface::class)"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 876usize , placeholders : & [] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^The user info could not be detected$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 916usize , placeholders : & [] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^The host could not be detected$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 1004usize , placeholders : & ["sprintf('The path `%s` is invalid according to RFC2937', $path)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 1035usize , placeholders : & ["sprintf('The path mimetype `%s` is invalid', $mimetype)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 1045usize , placeholders : & ["sprintf('The path paremeters `%s` is invalid', $parameters)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 1054usize , placeholders : & ["sprintf('The path data `%s` is invalid', $data)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 1118usize , placeholders : & [] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^If an authority is present the path must be empty or start with a `/`\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 1122usize , placeholders : & ["sprintf('If there is no authority the path `%s` can not start with a `//`.', $this->path)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 1131usize , placeholders : & [] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^In absence of a scheme and an authority the first path segment cannot contain a colon \\(\":\"\\) character\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 1141usize , placeholders : & ["sprintf('The uri `%s` is invalid for the `%s` scheme.', (string) $this, $this->scheme)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 1372usize , placeholders : & ["sprintf('The component must be a string, a scalar or a stringable object %s given.', gettype($str))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 1380usize , placeholders : & ["sprintf('The component `%s` contains invalid characters.', $str)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Uri.php" , line : 1453usize , placeholders : & [] , exception : Some ("TypeError") , regex : "^A path must be a string NULL given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriInfo.php" , line : 64usize , placeholders : & ["sprintf('The uri must be a valid URI object received `%s`', is_object($uri) ? get_class($uri) : gettype($uri))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriTemplate/Expression.php" , line : 140usize , placeholders : & ["$expression"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^The expression \"(.*)\" is invalid\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriTemplate/Expression.php" , line : 146usize , placeholders : & ["$expression"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^The operator used in the expression \"(.*)\" is reserved\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriTemplate/VarSpecifier.php" , line : 64usize , placeholders : & ["$specification"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^The variable specification \"(.*)\" is invalid\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriTemplate/VarSpecifier.php" , line : 78usize , placeholders : & ["$specification"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^The variable specification \"(.*)\" is invalid the position modifier must be lower than 10000\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriTemplate/Template.php" , line : 85usize , placeholders : & ["sprintf('The template must be a string or a stringable object %s given.', gettype($template))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriTemplate/Template.php" , line : 91usize , placeholders : & ["$template"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^The template \"(.*)\" contains invalid expressions\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriTemplate/VariableBag.php" , line : 91usize , placeholders : & ["sprintf('The variable '.$name.' must be NULL, a scalar or a stringable object `%s` given', gettype($value))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriString.php" , line : 284usize , placeholders : & ["sprintf('The uri must be a scalar or a stringable object `%s` given', gettype($uri))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriString.php" , line : 297usize , placeholders : & ["sprintf('The uri `%s` contains invalid characters', $uri)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriString.php" , line : 328usize , placeholders : & ["sprintf('The uri `%s` contains an invalid scheme', $uri)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriString.php" , line : 332usize , placeholders : & ["sprintf('The uri `%s` contains an invalid path.', $uri)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriString.php" , line : 397usize , placeholders : & ["sprintf('The port `%s` is invalid', $port)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriString.php" , line : 418usize , placeholders : & ["sprintf('Host `%s` is invalid : the IP host is malformed', $host)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriString.php" , line : 449usize , placeholders : & ["sprintf('the host `%s` could not be processed for IDN. Verify that ext/intl is installed for IDN support and that ICU is at least version 4.6.', $host)"] , exception : Some ("League\\Uri\\Exceptions\\IdnSupportMissing") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriString.php" , line : 455usize , placeholders : & ["sprintf('The host `%s` is invalid : %s', $host, self::getIDNAErrors($arr['errors']))"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriString.php" , line : 460usize , placeholders : & ["sprintf('The Intl extension is misconfigured for %s, please correct this issue before proceeding.', PHP_OS)"] , exception : Some ("League\\Uri\\Exceptions\\IdnSupportMissing") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriString.php" , line : 469usize , placeholders : & ["sprintf('Host `%s` is invalid : the host is not a valid registered name', $host)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriString.php" , line : 474usize , placeholders : & ["sprintf('the host `%s` could not be processed for IDN. Verify that ext/intl is installed for IDN support and that ICU is at least version 4.6.', $host)"] , exception : Some ("League\\Uri\\Exceptions\\IdnSupportMissing") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriString.php" , line : 481usize , placeholders : & ["sprintf('Host `%s` is not a valid IDN host', $host)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriString.php" , line : 485usize , placeholders : & ["sprintf('Host `%s` is not a valid IDN host : %s', $host, self::getIDNAErrors($arr['errors']))"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriString.php" , line : 490usize , placeholders : & ["sprintf('The Intl extension is misconfigured for %s, please correct this issue before proceeding.', PHP_OS)"] , exception : Some ("League\\Uri\\Exceptions\\IdnSupportMissing") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/UriString.php" , line : 495usize , placeholders : & ["sprintf('Host `%s` is invalid : the host is not a valid registered name', $host)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Http.php" , line : 49usize , placeholders : & ["sprintf('an URI without scheme can not contains a empty host string according to PSR-7: %s', (string) $uri)"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/league/uri/src/Http.php" , line : 54usize , placeholders : & ["sprintf('The URI port is outside the established TCP and UDP port ranges: %s', (string) $uri->getPort())"] , exception : Some ("League\\Uri\\Exceptions\\SyntaxError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/kornrunner/blurhash/src/Base83.php" , line : 21usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Specified length is too short to encode given value\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/kornrunner/blurhash/src/Blurhash.php" , line : 11usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^x and y component counts must be between 1 and 9 inclusive\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/kornrunner/blurhash/src/Blurhash.php" , line : 88usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Blurhash string must be at least 6 characters$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/kornrunner/blurhash/src/Blurhash.php" , line : 98usize , placeholders : & ["$length" , "$expected_length"] , exception : Some ("InvalidArgumentException") , regex : "^Blurhash length mismatch: length is (.*) but it should be (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/pear/pear-core-minimal/src/PEAR/ErrorStack.php" , line : 646usize , placeholders : & ["$err['message']"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/pear/pear_exception/PEAR/Exception.php" , line : 129usize , placeholders : & [] , exception : Some ("PEAR_Exception") , regex : "^exception cause must be Exception, array, or PEAR_Error$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/laravel/serializable-closure/src/SerializableClosure.php" , line : 29usize , placeholders : & [] , exception : Some ("Laravel\\SerializableClosure\\Exceptions\\PhpVersionNotSupportedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/laravel/serializable-closure/src/SerializableClosure.php" , line : 45usize , placeholders : & [] , exception : Some ("Laravel\\SerializableClosure\\Exceptions\\PhpVersionNotSupportedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/laravel/serializable-closure/src/SerializableClosure.php" , line : 59usize , placeholders : & [] , exception : Some ("Laravel\\SerializableClosure\\Exceptions\\PhpVersionNotSupportedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/laravel/serializable-closure/src/SerializableClosure.php" , line : 134usize , placeholders : & [] , exception : Some ("Laravel\\SerializableClosure\\Exceptions\\InvalidSignatureException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/laravel/serializable-closure/src/Serializers/Signed.php" , line : 64usize , placeholders : & [] , exception : Some ("Laravel\\SerializableClosure\\Exceptions\\MissingSecretKeyException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/laravel/serializable-closure/src/Serializers/Signed.php" , line : 83usize , placeholders : & [] , exception : Some ("Laravel\\SerializableClosure\\Exceptions\\InvalidSignatureException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/laravel/serializable-closure/src/UnsignedSerializableClosure.php" , line : 26usize , placeholders : & [] , exception : Some ("Laravel\\SerializableClosure\\Exceptions\\PhpVersionNotSupportedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/laravel/serializable-closure/src/UnsignedSerializableClosure.php" , line : 40usize , placeholders : & [] , exception : Some ("Laravel\\SerializableClosure\\Exceptions\\PhpVersionNotSupportedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/laravel/serializable-closure/src/UnsignedSerializableClosure.php" , line : 54usize , placeholders : & [] , exception : Some ("Laravel\\SerializableClosure\\Exceptions\\PhpVersionNotSupportedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/uri/lib/functions.php" , line : 206usize , placeholders : & [] , exception : Some ("Sabre\\Uri\\InvalidUriException") , regex : "^Invalid, or could not parse URI$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/uri/lib/functions.php" , line : 336usize , placeholders : & [] , exception : Some ("Sabre\\Uri\\InvalidUriException") , regex : "^Invalid, or could not parse URI$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/uri/lib/functions.php" , line : 373usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^The string cannot be false$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/uri/lib/functions.php" , line : 387usize , placeholders : & [] , exception : Some ("Sabre\\Uri\\InvalidUriException") , regex : "^Invalid, or could not parse URI$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/ITip/Broker.php" , line : 833usize , placeholders : & [] , exception : Some ("Sabre\\VObject\\ITip\\ITipException") , regex : "^If a calendar contained more than one event, they must have the same UID\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/ITip/Broker.php" , line : 838usize , placeholders : & [] , exception : Some ("Sabre\\VObject\\ITip\\ITipException") , regex : "^An event MUST have a DTSTART property\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/ITip/Broker.php" , line : 847usize , placeholders : & [] , exception : Some ("Sabre\\VObject\\ITip\\SameOrganizerForAllComponentsException") , regex : "^Every instance of the event must have the same organizer\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 121usize , placeholders : & ["$this->colorize('green', 'sabre/vobject ')" , "$this->colorize('yellow', Version::VERSION)"] , exception : None , regex : "^(.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 154usize , placeholders : & ["$value"] , exception : Some ("InvalidArgumentException") , regex : "^Unknown format: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 186usize , placeholders : & ["$value"] , exception : Some ("InvalidArgumentException") , regex : "^Unknown format: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 190usize , placeholders : & ["$name"] , exception : Some ("InvalidArgumentException") , regex : "^Unknown option: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 201usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Inputfile is a required argument$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 205usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Too many arguments$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 209usize , placeholders : & ["$positional[0]"] , exception : Some ("InvalidArgumentException") , regex : "^Unknown command: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 213usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 254usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Error: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 267usize , placeholders : & [] , exception : None , regex : "^Usage:$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 268usize , placeholders : & [] , exception : None , regex : "^  vobject \\[options\\] command \\[arguments\\]$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 269usize , placeholders : & [] , exception : None , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 270usize , placeholders : & [] , exception : None , regex : "^Options:$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 271usize , placeholders : & ["$this->colorize('green', '  -q            ')"] , exception : None , regex : "^(.*)Don't output anything\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 272usize , placeholders : & ["$this->colorize('green', '  -help -h      ')"] , exception : None , regex : "^(.*)Display this help message\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 273usize , placeholders : & ["$this->colorize('green', '  --format      ')"] , exception : None , regex : "^(.*)Convert to a specific format\\. Must be one of: vcard, vcard21,$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 274usize , placeholders : & ["$this->colorize('green', '  --forgiving   ')"] , exception : None , regex : "^(.*)Makes the parser less strict\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 275usize , placeholders : & [] , exception : None , regex : "^                vcard30, vcard40, icalendar20, jcal, jcard, json, mimedir\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 276usize , placeholders : & ["$this->colorize('green', '  --inputformat ')"] , exception : None , regex : "^(.*)If the input format cannot be guessed from the extension, it$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 277usize , placeholders : & [] , exception : None , regex : "^                must be specified here\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 280usize , placeholders : & ["$this->colorize('green', '  --pretty      ')"] , exception : None , regex : "^(.*)json pretty\\-print\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 282usize , placeholders : & [] , exception : None , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 283usize , placeholders : & [] , exception : None , regex : "^Commands:$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 284usize , placeholders : & ["$this->colorize('green', '  validate')"] , exception : None , regex : "^(.*) source_file              Validates a file for correctness\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 285usize , placeholders : & ["$this->colorize('green', '  repair')"] , exception : None , regex : "^(.*) source_file \\[output_file\\]  Repairs a file\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 286usize , placeholders : & ["$this->colorize('green', '  convert')"] , exception : None , regex : "^(.*) source_file \\[output_file\\] Converts a file\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 287usize , placeholders : & ["$this->colorize('green', '  color')"] , exception : None , regex : "^(.*) source_file                 Colorize a file, useful for debugging\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 288usize , placeholders : & ["<<<HELP\n\nIf source_file is set as '-', STDIN will be used.\nIf output_file is omitted, STDOUT will be used.\nAll other output is sent to STDERR.\n\nHELP"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 298usize , placeholders : & [] , exception : None , regex : "^Examples:$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 299usize , placeholders : & [] , exception : None , regex : "^   vobject convert contact\\.vcf contact\\.json$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 300usize , placeholders : & [] , exception : None , regex : "^   vobject convert \\-\\-format=vcard40 old\\.vcf new\\.vcf$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 301usize , placeholders : & [] , exception : None , regex : "^   vobject convert \\-\\-inputformat=json \\-\\-format=mimedir \\- \\-$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 302usize , placeholders : & [] , exception : None , regex : "^   vobject color calendar\\.ics$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 303usize , placeholders : & [] , exception : None , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 304usize , placeholders : & [] , exception : None , regex : "^https://github\\.com/fruux/sabre\\-vobject$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 318usize , placeholders : & ["(string) $vObj->VERSION"] , exception : None , regex : "^iCalendar: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 321usize , placeholders : & ["(string) $vObj->VERSION"] , exception : None , regex : "^vCard: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 327usize , placeholders : & [] , exception : None , regex : "^  No warnings!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 340usize , placeholders : & ["$levels[$warn['level']]" , "$warn['message']" , "$extra"] , exception : None , regex : "^  \\[(.*)\\] (.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 358usize , placeholders : & ["(string) $vObj->VERSION"] , exception : None , regex : "^iCalendar: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 361usize , placeholders : & ["(string) $vObj->VERSION"] , exception : None , regex : "^vCard: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 367usize , placeholders : & [] , exception : None , regex : "^  No warnings!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 380usize , placeholders : & ["$levels[$warn['level']]" , "$warn['message']" , "$extra"] , exception : None , regex : "^  \\[(.*)\\] (.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Cli.php" , line : 434usize , placeholders : & ["strtolower($vObj->name)" , "$this->format"] , exception : Some ("Exception") , regex : "^You cannot convert a (.*) to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/DateTimeParser.php" , line : 40usize , placeholders : & ["$dt"] , exception : Some ("Sabre\\VObject\\InvalidDataException") , regex : "^The supplied iCalendar datetime value is incorrect: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/DateTimeParser.php" , line : 50usize , placeholders : & ["$dt"] , exception : Some ("Sabre\\VObject\\InvalidDataException") , regex : "^The supplied iCalendar datetime value is incorrect: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/DateTimeParser.php" , line : 70usize , placeholders : & ["$date"] , exception : Some ("Sabre\\VObject\\InvalidDataException") , regex : "^The supplied iCalendar date value is incorrect: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/DateTimeParser.php" , line : 80usize , placeholders : & ["$date"] , exception : Some ("Sabre\\VObject\\InvalidDataException") , regex : "^The supplied iCalendar date value is incorrect: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/DateTimeParser.php" , line : 101usize , placeholders : & ["$duration"] , exception : Some ("Sabre\\VObject\\InvalidDataException") , regex : "^The supplied iCalendar duration value is incorrect: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/DateTimeParser.php" , line : 315usize , placeholders : & ["$date"] , exception : Some ("Sabre\\VObject\\InvalidDataException") , regex : "^Invalid vCard date\\-time string: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/DateTimeParser.php" , line : 415usize , placeholders : & ["$date"] , exception : Some ("Sabre\\VObject\\InvalidDataException") , regex : "^Invalid vCard time string: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/DateTimeParser.php" , line : 524usize , placeholders : & ["$date"] , exception : Some ("Sabre\\VObject\\InvalidDataException") , regex : "^Invalid vCard date\\-time string: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Splitter/ICalendar.php" , line : 51usize , placeholders : & [] , exception : Some ("Sabre\\VObject\\ParseException") , regex : "^Supplied input could not be parsed as VCALENDAR\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Splitter/VCard.php" , line : 66usize , placeholders : & [] , exception : Some ("Sabre\\VObject\\ParseException") , regex : "^The supplied input contained non\\-VCARD data\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Recur/EventIterator.php" , line : 112usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The UID argument is required when a VCALENDAR is passed to this constructor$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Recur/EventIterator.php" , line : 115usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^No events found in this calendar$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Recur/EventIterator.php" , line : 139usize , placeholders : & ["$uid"] , exception : Some ("InvalidArgumentException") , regex : "^This VCALENDAR did not have an event with UID: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Recur/EventIterator.php" , line : 192usize , placeholders : & [] , exception : Some ("Sabre\\VObject\\Recur\\NoInstancesException") , regex : "^This recurrence rule does not generate any valid instances$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Recur/EventIterator.php" , line : 306usize , placeholders : & ["Settings::$maxRecurrences"] , exception : Some ("Sabre\\VObject\\Recur\\MaxInstancesExceededException") , regex : "^Recurring events are only allowed to generate (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Recur/RRuleIterator.php" , line : 736usize , placeholders : & ["strtoupper($value)"] , exception : Some ("Sabre\\VObject\\InvalidDataException") , regex : "^Unknown value for FREQ=(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Recur/RRuleIterator.php" , line : 761usize , placeholders : & ["strtoupper($key)"] , exception : Some ("Sabre\\VObject\\InvalidDataException") , regex : "^(.*) in RRULE must be a positive integer!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Recur/RRuleIterator.php" , line : 783usize , placeholders : & ["$part"] , exception : Some ("Sabre\\VObject\\InvalidDataException") , regex : "^Invalid part in BYDAY clause: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Recur/RRuleIterator.php" , line : 797usize , placeholders : & [] , exception : Some ("Sabre\\VObject\\InvalidDataException") , regex : "^BYYEARDAY in RRULE must have value\\(s\\) from 1 to 366, or \\-366 to \\-1!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Recur/RRuleIterator.php" , line : 806usize , placeholders : & [] , exception : Some ("Sabre\\VObject\\InvalidDataException") , regex : "^BYWEEKNO in RRULE must have value\\(s\\) from 1 to 53, or \\-53 to \\-1!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Recur/RRuleIterator.php" , line : 815usize , placeholders : & [] , exception : Some ("Sabre\\VObject\\InvalidDataException") , regex : "^BYMONTH in RRULE must have value\\(s\\) between 1 and 12!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Recur/RRuleIterator.php" , line : 829usize , placeholders : & ["strtoupper($key)"] , exception : Some ("Sabre\\VObject\\InvalidDataException") , regex : "^Not supported: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Document.php" , line : 216usize , placeholders : & ["$name" , "$parameters['VALUE']"] , exception : Some ("Sabre\\VObject\\InvalidDataException") , regex : "^Unsupported VALUE parameter for (.*) property\\. You supplied \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/VCardConverter.php" , line : 39usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Only vCard 2\\.1, 3\\.0 and 4\\.0 are supported for the input data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/VCardConverter.php" , line : 42usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^You can only use vCard 3\\.0 or 4\\.0 for the target version$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Component.php" , line : 109usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The second argument must not be specified, when passing a VObject Node$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Component.php" , line : 116usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The first argument must either be a \\\\Sabre\\\\VObject\\\\Node or a string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Component.php" , line : 164usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The item you passed to remove\\(\\) was not a child of this component$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Component.php" , line : 440usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Starting sabre/vobject 4\\.0 the children property is now protected\\. You should use the children\\(\\) method instead$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/BirthdayCalendarGenerator.php" , line : 70usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^String could not be parsed as \\\\Sabre\\\\VObject\\\\Component\\\\VCard by setObjects$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/BirthdayCalendarGenerator.php" , line : 77usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^You can only pass strings or \\\\Sabre\\\\VObject\\\\Component\\\\VCard arguments to setObjects$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/TimeZoneUtil.php" , line : 106usize , placeholders : & ["$tzid"] , exception : Some ("InvalidArgumentException") , regex : "^We were unable to determine the correct PHP timezone for tzid: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/FreeBusyGenerator.php" , line : 148usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^You can only pass strings or \\\\Sabre\\\\VObject\\\\Component arguments to setObjects$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Component/VAlarm.php" , line : 51usize , placeholders : & [] , exception : Some ("Sabre\\VObject\\InvalidDataException") , regex : "^time\\-range filters on VALARM components are only supported when they are a child of VTODO or VEVENT$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Component/VCalendar.php" , line : 322usize , placeholders : & [] , exception : Some ("Sabre\\VObject\\InvalidDataException") , regex : "^Every VEVENT object must have a UID property$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Parser/Json.php" , line : 57usize , placeholders : & [] , exception : Some ("Sabre\\VObject\\EofException") , regex : "^End of input stream, or no input supplied$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Parser/Json.php" , line : 72usize , placeholders : & [] , exception : Some ("Sabre\\VObject\\ParseException") , regex : "^The root component must either be a vcalendar, or a vcard$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Parser/XML.php" , line : 85usize , placeholders : & [] , exception : Some ("Sabre\\VObject\\EofException") , regex : "^End of input stream, or no input supplied$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Parser/XML.php" , line : 107usize , placeholders : & [] , exception : Some ("Sabre\\VObject\\ParseException") , regex : "^Unsupported XML standard$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Parser/MimeDir.php" , line : 110usize , placeholders : & ["implode(', ', self::$SUPPORTED_CHARSETS)"] , exception : Some ("InvalidArgumentException") , regex : "^Unsupported encoding\\. \\(Supported encodings: (.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Parser/MimeDir.php" , line : 135usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^This parser can only read from strings or streams\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Parser/MimeDir.php" , line : 163usize , placeholders : & [] , exception : Some ("Sabre\\VObject\\ParseException") , regex : "^This parser only supports VCARD and VCALENDAR files$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Parser/MimeDir.php" , line : 186usize , placeholders : & ["$this->root->name" , "$name"] , exception : Some ("Sabre\\VObject\\ParseException") , regex : "^Invalid MimeDir file\\. expected: \"END:(.*)\" got: \"END:(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Parser/MimeDir.php" , line : 203usize , placeholders : & ["$line" , "$this->root->name"] , exception : Some ("Sabre\\VObject\\ParseException") , regex : "^Invalid MimeDir file\\. Unexpected component: \"(.*)\" in document type (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Parser/MimeDir.php" , line : 221usize , placeholders : & ["$component->name" , "$name"] , exception : Some ("Sabre\\VObject\\ParseException") , regex : "^Invalid MimeDir file\\. expected: \"END:(.*)\" got: \"END:(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Parser/MimeDir.php" , line : 288usize , placeholders : & [] , exception : Some ("Sabre\\VObject\\EofException") , regex : "^End of document reached prematurely$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Parser/MimeDir.php" , line : 291usize , placeholders : & [] , exception : Some ("Sabre\\VObject\\ParseException") , regex : "^Error reading from input stream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Parser/MimeDir.php" , line : 386usize , placeholders : & ["$this->startLine"] , exception : Some ("Sabre\\VObject\\ParseException") , regex : "^Invalid Mimedir file\\. Line starting at (.*) did not follow iCalendar/vCard conventions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Parser/MimeDir.php" , line : 420usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^This code should not be reachable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Parser/MimeDir.php" , line : 431usize , placeholders : & ["$this->startLine"] , exception : Some ("Sabre\\VObject\\ParseException") , regex : "^Invalid Mimedir file\\. Line starting at (.*) did not follow iCalendar/vCard conventions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Parser/MimeDir.php" , line : 472usize , placeholders : & ["$propObj['CHARSET']"] , exception : Some ("Sabre\\VObject\\ParseException") , regex : "^Unsupported CHARSET: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Property/VCard/DateAndOrTime.php" , line : 52usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Only one value allowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Property/ICalendar/Recur.php" , line : 64usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^You must either pass a string, or a key=>value array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/Property/Binary.php" , line : 44usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The argument must either be a string or an array with only one child$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/ElementList.php" , line : 31usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^You can not add new objects to an ElementList$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/vobject/lib/ElementList.php" , line : 44usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^You can not remove objects from an ElementList$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/xml/lib/Service.php" , line : 122usize , placeholders : & [] , exception : Some ("Sabre\\Xml\\ParseException") , regex : "^The input element to parse is empty\\. Do not attempt to parse$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/xml/lib/Service.php" , line : 166usize , placeholders : & [] , exception : Some ("Sabre\\Xml\\ParseException") , regex : "^The input element to parse is empty\\. Do not attempt to parse$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/xml/lib/Service.php" , line : 183usize , placeholders : & ["implode(' or ', $rootElementName)" , "$result['name']"] , exception : Some ("Sabre\\Xml\\ParseException") , regex : "^Expected (.*) but received (.*) as the root element$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/xml/lib/Service.php" , line : 272usize , placeholders : & ["get_class($object)"] , exception : Some ("InvalidArgumentException") , regex : "^\"(.*)\" is not a registered value object class\\. Register your class with mapValueObject\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/xml/lib/Service.php" , line : 296usize , placeholders : & ["$str"] , exception : Some ("InvalidArgumentException") , regex : "^'(.*)' is not a valid clark\\-notation formatted string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/xml/lib/Reader.php" , line : 71usize , placeholders : & ["$errors"] , exception : Some ("Sabre\\Xml\\LibXMLException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/xml/lib/Reader.php" , line : 81usize , placeholders : & ["$errors"] , exception : Some ("Sabre\\Xml\\LibXMLException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/xml/lib/Reader.php" , line : 151usize , placeholders : & ["$errors"] , exception : Some ("Sabre\\Xml\\LibXMLException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/xml/lib/Reader.php" , line : 153usize , placeholders : & [] , exception : Some ("Sabre\\Xml\\ParseException") , regex : "^This should never happen \\(famous last words\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/xml/lib/Reader.php" , line : 164usize , placeholders : & ["$errors"] , exception : Some ("Sabre\\Xml\\LibXMLException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/xml/lib/Reader.php" , line : 183usize , placeholders : & [] , exception : Some ("Sabre\\Xml\\ParseException") , regex : "^We hit the end of the document prematurely\\. This likely means that some parser \"eats\" too many elements\\. Do not attempt to continue parsing\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/xml/lib/Reader.php" , line : 305usize , placeholders : & ["$type" , "$name"] , exception : Some ("LogicException") , regex : "^Could not use this type as a deserializer: (.*) for element: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/xml/lib/Serializer/functions.php" , line : 200usize , placeholders : & ["gettype($name)"] , exception : Some ("InvalidArgumentException") , regex : "^The writer does not know how to serialize arrays with keys of type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/xml/lib/Serializer/functions.php" , line : 204usize , placeholders : & ["get_class($value)"] , exception : Some ("InvalidArgumentException") , regex : "^The writer cannot serialize objects of class: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/xml/lib/Serializer/functions.php" , line : 206usize , placeholders : & ["gettype($value)"] , exception : Some ("InvalidArgumentException") , regex : "^The writer cannot serialize values of type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/http/lib/Client.php" , line : 163usize , placeholders : & ["$response"] , exception : Some ("Sabre\\HTTP\\ClientHttpException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/http/lib/Client.php" , line : 327usize , placeholders : & ["$response['curl_errmsg']"] , exception : Some ("Sabre\\HTTP\\ClientException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/http/lib/Request.php" , line : 184usize , placeholders : & ["$this->getUrl()" , "$this->getBaseUrl()"] , exception : Some ("LogicException") , regex : "^Requested uri \\((.*)\\) is out of base uri \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/http/lib/Sapi.php" , line : 229usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The _SERVER array must have a REQUEST_URI key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/http/lib/Sapi.php" , line : 233usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The _SERVER array must have a REQUEST_METHOD key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/http/lib/Response.php" , line : 163usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The HTTP status code must be exactly 3 digits$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Node.php" , line : 37usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to delete node$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Node.php" , line : 49usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/PropPatch.php" , line : 270usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^A callback sent to handle\\(\\) did not return an int or a bool$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/PropPatch.php" , line : 314usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^A callback sent to handle\\(\\) did not return an array or a bool$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/PartialUpdate/Plugin.php" , line : 115usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^The target resource does not support the PATCH method\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/PartialUpdate/Plugin.php" , line : 121usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^No valid \"X\\-Update\\-Range\" found in the headers$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/PartialUpdate/Plugin.php" , line : 129usize , placeholders : & ["$contentType"] , exception : Some ("Sabre\\DAV\\Exception\\UnsupportedMediaType") , regex : "^Unknown Content\\-Type header \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/PartialUpdate/Plugin.php" , line : 134usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\LengthRequired") , regex : "^A Content\\-Length header is required$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/PartialUpdate/Plugin.php" , line : 143usize , placeholders : & ["$range[2]" , "$range[1]"] , exception : Some ("Sabre\\DAV\\Exception\\RequestedRangeNotSatisfiable") , regex : "^The end offset \\((.*)\\) is lower than the start offset \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/PartialUpdate/Plugin.php" , line : 146usize , placeholders : & ["$len" , "$range[1]" , "$range[2]"] , exception : Some ("Sabre\\DAV\\Exception\\RequestedRangeNotSatisfiable") , regex : "^Actual data length \\((.*)\\) is not consistent with begin \\((.*)\\) and end \\((.*)\\) offsets$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Sync/Plugin.php" , line : 105usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\ReportNotSupported") , regex : "^The \\{DAV:\\}sync\\-collection REPORT is not supported on this url\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Sync/Plugin.php" , line : 109usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\ReportNotSupported") , regex : "^No sync information is available at this node$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Sync/Plugin.php" , line : 116usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\InvalidSyncToken") , regex : "^Invalid or unknown sync token$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Sync/Plugin.php" , line : 124usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\InvalidSyncToken") , regex : "^Invalid or unknown sync token$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Locks/Plugin.php" , line : 170usize , placeholders : & ["$existingLock"] , exception : Some ("Sabre\\DAV\\Exception\\ConflictingLock") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Locks/Plugin.php" , line : 178usize , placeholders : & ["$existingLock"] , exception : Some ("Sabre\\DAV\\Exception\\ConflictingLock") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Locks/Plugin.php" , line : 200usize , placeholders : & ["reset($existingLocks)"] , exception : Some ("Sabre\\DAV\\Exception\\Locked") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Locks/Plugin.php" , line : 202usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^An xml body is required for lock requests$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Locks/Plugin.php" , line : 260usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^No lock token was supplied$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Locks/Plugin.php" , line : 284usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\LockTokenMatchesRequestUri") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Locks/Plugin.php" , line : 360usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Invalid HTTP timeout header$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Locks/Plugin.php" , line : 504usize , placeholders : & ["reset($mustLocks)"] , exception : Some ("Sabre\\DAV\\Exception\\Locked") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/FS/Node.php" , line : 75usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^This node cannot be renamed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/FS/Directory.php" , line : 79usize , placeholders : & ["$path"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^File with name (.*) could not be located$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Browser/Plugin.php" , line : 553usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Path does not exist, or escaping from the base path was detected$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Browser/Plugin.php" , line : 559usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Path does not exist, or escaping from the base path was detected$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/TemporaryFileFilterPlugin.php" , line : 220usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\PreconditionFailed") , regex : "^The resource already exists, and an If\\-None\\-Match header was supplied$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/StringUtil.php" , line : 50usize , placeholders : & ["$collation"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Collation type: (.*) is not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/StringUtil.php" , line : 63usize , placeholders : & ["$matchType"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Match\\-type: (.*) is not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 227usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Invalid argument passed to constructor\\. Argument must either be an instance of Sabre\\\\DAV\\\\Tree, Sabre\\\\DAV\\\\INode, an array or null$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 387usize , placeholders : & ["$uri" , "$pathInfo"] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^The REQUEST_URI \\((.*)\\) did not end with the contents of PATH_INFO \\((.*)\\)\\. This server might be misconfigured\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 479usize , placeholders : & ["$exMessage"] , exception : Some ("Sabre\\DAV\\Exception\\NotImplemented") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 487usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^No subsystem set a valid HTTP status code\\. Something must have interrupted the request without providing further detail\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 576usize , placeholders : & ["$uri" , "$this->getBaseUri()"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Requested uri \\((.*)\\) is out of base uri \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 725usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The destination header was not supplied$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 739usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The HTTP Overwrite header should be either T or F$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 746usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\UnsupportedMediaType") , regex : "^The destination node is not a collection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 750usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Conflict") , regex : "^The destination node is not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 759usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\PreconditionFailed") , regex : "^The destination node already exists, and the overwrite header is set to false$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 768usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Source and destination uri are identical\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 771usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Conflict") , regex : "^The destination may not be part of the same subtree as the source path\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 1081usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Conflict") , regex : "^Files cannot be created in non\\-existent collections$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 1085usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Conflict") , regex : "^Files can only be created as children of collections$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 1171usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Conflict") , regex : "^Parent node does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 1176usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Conflict") , regex : "^Parent node is not a collection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 1184usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^The resource you tried to create already exists$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 1207usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\InvalidResourceType") , regex : "^The \\{DAV:\\}resourcetype you specified is not supported here\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 1304usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\PreconditionFailed") , regex : "^An If\\-Match header was specified and the resource did not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 1331usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\PreconditionFailed") , regex : "^An If\\-Match header was specified, but none of the specified ETags matched\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 1377usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\PreconditionFailed") , regex : "^An If\\-None\\-Match header was specified, but the ETag matched \\(or \\* was specified\\)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 1423usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\PreconditionFailed") , regex : "^An If\\-Unmodified\\-Since header was specified, but the entity has been changed since the specified date\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Server.php" , line : 1483usize , placeholders : & ["$uri"] , exception : Some ("Sabre\\DAV\\Exception\\PreconditionFailed") , regex : "^Failed to find a valid token/etag combination for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/File.php" , line : 42usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to change data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/File.php" , line : 54usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to read this file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/SimpleCollection.php" , line : 53usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Children must be specified as strings, arrays or instances of Sabre\\\\DAV\\\\INode$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/SimpleCollection.php" , line : 97usize , placeholders : & ["$name" , "$this->getName()"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^File not found: (.*) in '(.*)'$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Xml/Element/Sharee.php" , line : 94usize , placeholders : & ["$k"] , exception : Some ("InvalidArgumentException") , regex : "^Unknown property: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Xml/Element/Sharee.php" , line : 172usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Every \\{DAV:\\}sharee must have a \\{DAV:\\}href child\\-element$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Xml/Element/Sharee.php" , line : 183usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Every \\{DAV:\\}sharee must have a \\{DAV:\\}share\\-access child element$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Xml/Element/Prop.php" , line : 99usize , placeholders : & ["$type"] , exception : Some ("LogicException") , regex : "^Could not use this type as a deserializer: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Xml/Request/SyncCollectionReport.php" , line : 91usize , placeholders : & ["$elem"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The (.*) element in the \\{DAV:\\}sync\\-collection report is required$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Xml/Property/ShareAccess.php" , line : 133usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Invalid value for \\{DAV:\\}share\\-access element$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Xml/Property/SupportedReportSet.php" , line : 66usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Reportname must be in clark\\-notation$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Client.php" , line : 119usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A baseUri must be provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Client.php" , line : 232usize , placeholders : & ["$response"] , exception : Some ("Sabre\\HTTP\\ClientHttpException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Client.php" , line : 280usize , placeholders : & ["$response"] , exception : Some ("Sabre\\HTTP\\ClientHttpException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Client.php" , line : 299usize , placeholders : & ["implode(', ', $errorProperties)"] , exception : Some ("Sabre\\HTTP\\ClientException") , regex : "^PROPPATCH failed\\. The following properties errored: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Sharing/Plugin.php" , line : 115usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Sharing is not allowed on this node$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Sharing/Plugin.php" , line : 192usize , placeholders : & ["$documentType"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Unexpected document type: (.*) for this Content\\-Type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Sharing/Plugin.php" , line : 285usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The \"href\" POST parameter is required$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Sharing/Plugin.php" , line : 288usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The \"access\" POST parameter is required$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Sharing/Plugin.php" , line : 298usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The \"access\" POST must be readwrite, read or no\\-access$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Collection.php" , line : 42usize , placeholders : & ["$name"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^File not found: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Collection.php" , line : 92usize , placeholders : & ["$name"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to create file \\(filename (.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Collection.php" , line : 104usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to create directory$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Tree.php" , line : 82usize , placeholders : & ["$path"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Could not find node at path: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/FSExt/Directory.php" , line : 48usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to \\. and \\.\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/FSExt/Directory.php" , line : 70usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to \\. and \\.\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/FSExt/Directory.php" , line : 94usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^File could not be located$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/FSExt/Directory.php" , line : 97usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to \\. and \\.\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/FSExt/Directory.php" , line : 116usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to \\. and \\.\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/CorePlugin.php" , line : 159usize , placeholders : & ["$range[0]" , "$nodeSize"] , exception : Some ("Sabre\\DAV\\Exception\\RequestedRangeNotSatisfiable") , regex : "^The start offset \\((.*)\\) exceeded the size of the entity \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/CorePlugin.php" , line : 162usize , placeholders : & ["$range[1]" , "$range[0]"] , exception : Some ("Sabre\\DAV\\Exception\\RequestedRangeNotSatisfiable") , regex : "^The end offset \\((.*)\\) is lower than the start offset \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/CorePlugin.php" , line : 183usize , placeholders : & ["$start" , "$consumed"] , exception : Some ("Sabre\\DAV\\Exception\\RequestedRangeNotSatisfiable") , regex : "^The start offset \\((.*)\\) exceeded the size of the entity \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/CorePlugin.php" , line : 313usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/CorePlugin.php" , line : 369usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/CorePlugin.php" , line : 442usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Content\\-Range on PUT requests are forbidden\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/CorePlugin.php" , line : 471usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^This server is not compatible with OS/X finder\\. Consider using a different WebDAV client or webserver\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/CorePlugin.php" , line : 490usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Conflict") , regex : "^PUT is not allowed on non\\-files\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/CorePlugin.php" , line : 537usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\UnsupportedMediaType") , regex : "^The request body for the MKCOL request must have an xml Content\\-Type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/CorePlugin.php" , line : 543usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/CorePlugin.php" , line : 549usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The mkcol request must include a \\{DAV:\\}resourcetype property$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/CorePlugin.php" , line : 692usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\ReportNotSupported") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/sabre/dav/lib/DAV/CorePlugin.php" , line : 879usize , placeholders : & ["$logLevel"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Auth/Plugin.php" , line : 152usize , placeholders : & ["implode(', ', $authResult[1])"] , exception : Some ("Sabre\\DAV\\Exception\\NotAuthenticated") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Auth/Plugin.php" , line : 175usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^No authentication backends were configured on this server\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Auth/Plugin.php" , line : 185usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^The authentication backend did not return a correct value from the check\\(\\) method\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Auth/Backend/AbstractDigest.php" , line : 116usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^The returned value from getDigestHash must be a string or null$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Auth/Backend/File.php" , line : 51usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Malformed htdigest file\\. Every line should contain 2 colons$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAV/Auth/Backend/File.php" , line : 56usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Malformed htdigest file\\. Invalid md5 hash$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/CalendarHome.php" , line : 73usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/CalendarHome.php" , line : 81usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/CalendarHome.php" , line : 104usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^Creating new files in this collection is not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/CalendarHome.php" , line : 116usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^Creating new collections in this collection is not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/CalendarHome.php" , line : 158usize , placeholders : & ["$name"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Node with name '(.*)' could not be found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/CalendarHome.php" , line : 238usize , placeholders : & ["$rt"] , exception : Some ("Sabre\\DAV\\Exception\\InvalidResourceType") , regex : "^Unknown resourceType: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/CalendarHome.php" , line : 247usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\InvalidResourceType") , regex : "^This backend does not support subscriptions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/CalendarHome.php" , line : 253usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\InvalidResourceType") , regex : "^You can only create calendars and subscriptions in this collection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/CalendarHome.php" , line : 327usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotImplemented") , regex : "^Sharing support is not implemented by this backend\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/CalendarObject.php" , line : 58usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The objectData argument must contain an 'uri' property$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Subscriptions/Subscription.php" , line : 58usize , placeholders : & ["$r"] , exception : Some ("InvalidArgumentException") , regex : "^The (.*) field is required when creating a subscription node$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Schedule/SchedulingObject.php" , line : 38usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The objectData argument must contain an 'uri' property$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Schedule/SchedulingObject.php" , line : 67usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^Updating scheduling objects is not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Schedule/Plugin.php" , line : 694usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The request body must be a valid iCalendar object\\. Parse error: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Schedule/Plugin.php" , line : 708usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^We expected at least one VTODO, VJOURNAL, VFREEBUSY or VEVENT component$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Schedule/Plugin.php" , line : 714usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^A METHOD property must be specified in iTIP messages$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Schedule/Plugin.php" , line : 731usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotImplemented") , regex : "^We only support VFREEBUSY \\(REQUEST\\) on this endpoint$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Schedule/Plugin.php" , line : 755usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^The organizer in the request did not match any of the addresses for the owner of this inbox$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Schedule/Plugin.php" , line : 759usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^You must at least specify 1 attendee$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Schedule/Plugin.php" , line : 768usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^DTSTART and DTEND must both be specified$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/ICSExportPlugin.php" , line : 114usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The start= parameter must contain a unix timestamp$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/ICSExportPlugin.php" , line : 120usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The end= parameter must contain a unix timestamp$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/ICSExportPlugin.php" , line : 126usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^If you'd like to expand recurrences, you must specify both a start= and end= parameter\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/ICSExportPlugin.php" , line : 133usize , placeholders : & ["$queryParams['componentType']"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^You are not allowed to search for components of type: (.*) here$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Calendar.php" , line : 108usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Calendar object not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Calendar.php" , line : 180usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^Creating collections in calendar objects is not allowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Calendar.php" , line : 218usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^Renaming calendars is not yet supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Backend/PDO.php" , line : 245usize , placeholders : & ["$sccs"] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^The (.*) property must be of type: \\\\Sabre\\\\CalDAV\\\\Xml\\\\Property\\\\SupportedCalendarComponentSet$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Backend/PDO.php" , line : 296usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value passed to \\$calendarId is expected to be an array with a calendarId and an instanceId$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Backend/PDO.php" , line : 340usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value passed to \\$calendarId is expected to be an array with a calendarId and an instanceId$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Backend/PDO.php" , line : 409usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value passed to \\$calendarId is expected to be an array with a calendarId and an instanceId$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Backend/PDO.php" , line : 451usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value passed to \\$calendarId is expected to be an array with a calendarId and an instanceId$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Backend/PDO.php" , line : 489usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value passed to \\$calendarId is expected to be an array with a calendarId and an instanceId$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Backend/PDO.php" , line : 541usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value passed to \\$calendarId is expected to be an array with a calendarId and an instanceId$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Backend/PDO.php" , line : 587usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value passed to \\$calendarId is expected to be an array with a calendarId and an instanceId$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Backend/PDO.php" , line : 633usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Calendar objects must have a VJOURNAL, VEVENT or VTODO component$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Backend/PDO.php" , line : 700usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value passed to \\$calendarId is expected to be an array with a calendarId and an instanceId$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Backend/PDO.php" , line : 765usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value passed to \\$calendarId is expected to be an array with a calendarId and an instanceId$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Backend/PDO.php" , line : 947usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value passed to \\$calendarId is expected to be an array with a calendarId and an instanceId$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Backend/PDO.php" , line : 1144usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^The \\{http://calendarserver\\.org/ns/\\}source property is required when creating subscriptions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Backend/PDO.php" , line : 1332usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value passed to \\$calendarId is expected to be an array with a calendarId and an instanceId$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Backend/PDO.php" , line : 1441usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value passed to getInvites\\(\\) is expected to be an array with a calendarId and an instanceId$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Backend/PDO.php" , line : 1485usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotImplemented") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Principal/User.php" , line : 33usize , placeholders : & ["$name"] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to create file \\(filename (.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Principal/User.php" , line : 45usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to create directory$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Principal/User.php" , line : 59usize , placeholders : & ["$name"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Node with name (.*) was not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Principal/User.php" , line : 69usize , placeholders : & ["$name"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Node with name (.*) was not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Principal/ProxyWrite.php" , line : 73usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to delete node$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Principal/ProxyWrite.php" , line : 85usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Principal/ProxyRead.php" , line : 73usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to delete node$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Principal/ProxyRead.php" , line : 85usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to rename file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Plugin.php" , line : 289usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Plugin.php" , line : 591usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^A calendar\\-query REPORT on a calendar with a Depth: 0 is undefined\\. Set Depth to 1$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Plugin.php" , line : 648usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotImplemented") , regex : "^The free\\-busy\\-query REPORT is only implemented on calendars$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Plugin.php" , line : 806usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception\\UnsupportedMediaType") , regex : "^This resource only supports valid iCalendar 2\\.0 data\\. Parse error: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Plugin.php" , line : 810usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\UnsupportedMediaType") , regex : "^This collection can only support iCalendar objects\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Plugin.php" , line : 840usize , placeholders : & ["implode(', ', $supportedComponents)"] , exception : Some ("Sabre\\CalDAV\\Exception\\InvalidComponentType") , regex : "^iCalendar objects must at least have a component of type (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Plugin.php" , line : 873usize , placeholders : & ["$message['message']"] , exception : Some ("Sabre\\DAV\\Exception\\UnsupportedMediaType") , regex : "^Validation error in iCalendar: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/CalendarQueryValidator.php" , line : 340usize , placeholders : & ["$component->name"] , exception : Some ("Sabre\\DAV\\Exception\\NotImplemented") , regex : "^time\\-range filters are currently not supported on (.*) components$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/CalendarQueryValidator.php" , line : 351usize , placeholders : & ["$component->name"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^You cannot create a time\\-range filter on a (.*) component$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/SharingPlugin.php" , line : 76usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^The generic \"sharing\" plugin must be loaded before the caldav sharing plugin\\. Call \\$server\\->addPlugin\\(new \\\\Sabre\\\\DAV\\\\Sharing\\\\Plugin\\(\\)\\); before this one\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Xml/Request/FreeBusyQueryReport.php" , line : 76usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The freebusy report must have a time\\-range element$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Xml/Request/InviteReply.php" , line : 140usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The \\{http://calendarserver\\.org/ns/\\}hosturl/\\{DAV:\\}href element must exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Xml/Request/CalendarQueryReport.php" , line : 117usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Only one top\\-level comp\\-filter may be defined$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Xml/Request/CalendarQueryReport.php" , line : 127usize , placeholders : & ["Plugin::NS_CALDAV"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The \\{(.*)\\}filter element is required for this request$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Xml/Filter/CompFilter.php" , line : 78usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^You cannot add time\\-range filters on the VCALENDAR component$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Xml/Filter/CompFilter.php" , line : 85usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The end\\-date must be larger than the start\\-date$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Xml/Filter/CalendarData.php" , line : 69usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The \"start\" and \"end\" attributes are required when expanding calendar\\-data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Xml/Filter/CalendarData.php" , line : 72usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The end\\-date must be larger than the start\\-date when expanding calendar\\-data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Xml/Filter/PropFilter.php" , line : 79usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The end\\-date must be larger than the start\\-date$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Xml/Notification/InviteReply.php" , line : 106usize , placeholders : & ["$item"] , exception : Some ("InvalidArgumentException") , regex : "^(.*) is a required constructor option$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Xml/Notification/InviteReply.php" , line : 112usize , placeholders : & ["$key"] , exception : Some ("InvalidArgumentException") , regex : "^Unknown option: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Xml/Notification/Invite.php" , line : 157usize , placeholders : & ["$item"] , exception : Some ("InvalidArgumentException") , regex : "^(.*) is a required constructor option$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Xml/Notification/Invite.php" , line : 163usize , placeholders : & ["$key"] , exception : Some ("InvalidArgumentException") , regex : "^Unknown option: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Xml/Property/ScheduleCalendarTransp.php" , line : 49usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The value must either be specified as \"transparent\" or \"opaque\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CalDAV/Xml/Property/SupportedCalendarComponentSet.php" , line : 113usize , placeholders : & [] , exception : Some ("Sabre\\Xml\\ParseException") , regex : "^supported\\-calendar\\-component\\-set must have at least one CALDAV:comp element$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Xml/Property/Principal.php" , line : 68usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^The href argument must be specified for the HREF principal type\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Xml/Property/Principal.php" , line : 183usize , placeholders : & ["$tree['name']"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Unknown or unsupported principal type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Xml/Property/Acl.php" , line : 178usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Each \\{DAV:\\}ace element must have one \\{DAV:\\}principal element$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Xml/Property/Acl.php" , line : 200usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotImplemented") , regex : "^Every \\{DAV:\\}ace element must have a \\{DAV:\\}grant element\\. \\{DAV:\\}deny is not yet supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Xml/Request/PrincipalSearchPropertySetReport.php" , line : 48usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The \\{DAV:\\}principal\\-search\\-property\\-set element must be empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Xml/Request/PrincipalPropertySearchReport.php" , line : 105usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The \\{DAV:\\}property\\-search element must contain one \\{DAV:\\}match and one \\{DAV:\\}prop element$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Xml/Request/PrincipalPropertySearchReport.php" , line : 117usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The \\{DAV:\\}principal\\-property\\-search report must contain at least 1 \\{DAV:\\}property\\-search element$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/PrincipalCollection.php" , line : 65usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\InvalidResourceType") , regex : "^Only resources of type \\{DAV:\\}principal may be created here$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Principal.php" , line : 49usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^The principal properties must at least contain the 'uri' key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Plugin.php" , line : 217usize , placeholders : & ["implode(', ', $reasons)" , "implode(', ', $failed)" , "$uri"] , exception : Some ("Sabre\\DAV\\Exception\\NotAuthenticated") , regex : "^(.*)\\. Login was needed for privilege: (.*) on (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Plugin.php" , line : 220usize , placeholders : & ["$uri"] , exception : Some ("Sabre\\DAVACL\\Exception\\NeedPrivileges") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/sabre/dav/lib/DAVACL/Plugin.php" , line : 658usize , placeholders : & ["$current['privilege']"] , exception : None , regex : "^A node has the \"(.*)\" in its ACL list, but this privilege was not reported in the supportedPrivilegeSet list\\. This will be ignored\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Plugin.php" , line : 770usize , placeholders : & [] , exception : Some ("Exception") , regex : "^The Auth plugin must be loaded before the ACL plugin if you want to allow unauthenticated access\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Plugin.php" , line : 1048usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^The group\\-member\\-set property MUST be an instance of Sabre\\\\DAV\\\\Property\\\\HrefList or null$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Plugin.php" , line : 1114usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^XML body expected in ACL request$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Plugin.php" , line : 1127usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^This node does not support the ACL method$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Plugin.php" , line : 1153usize , placeholders : & [] , exception : Some ("Sabre\\DAVACL\\Exception\\AceConflict") , regex : "^This resource contained a protected \\{DAV:\\}ace, but this privilege did not occur in the ACL request$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Plugin.php" , line : 1160usize , placeholders : & ["$newAce['privilege']"] , exception : Some ("Sabre\\DAVACL\\Exception\\NotSupportedPrivilege") , regex : "^The privilege you specified \\((.*)\\) is not recognized by this server$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Plugin.php" , line : 1164usize , placeholders : & ["$newAce['privilege']"] , exception : Some ("Sabre\\DAVACL\\Exception\\NoAbstract") , regex : "^The privilege you specified \\((.*)\\) is an abstract privilege$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Plugin.php" , line : 1171usize , placeholders : & ["$newAce['principal']"] , exception : Some ("Sabre\\DAVACL\\Exception\\NotRecognizedPrincipal") , regex : "^The specified principal \\((.*)\\) does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Plugin.php" , line : 1174usize , placeholders : & ["$newAce['principal']"] , exception : Some ("Sabre\\DAVACL\\Exception\\NotRecognizedPrincipal") , regex : "^The specified uri \\((.*)\\) is not a principal$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Plugin.php" , line : 1202usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The principal\\-match report is only defined on Depth: 0$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Plugin.php" , line : 1375usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^This report is only defined when Depth: 0$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Plugin.php" , line : 1426usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Depth must be 0$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Plugin.php" , line : 1461usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The \\{DAV:\\}acl\\-principal\\-prop\\-set REPORT only supports Depth 0$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/Plugin.php" , line : 1470usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Could not fetch ACL rules for this path$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/AbstractPrincipalCollection.php" , line : 93usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^Listing members of this collection is disabled$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/AbstractPrincipalCollection.php" , line : 116usize , placeholders : & ["$name"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Principal with name (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/FS/Collection.php" , line : 69usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^File could not be located$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/FS/Collection.php" , line : 72usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Permission denied to \\. and \\.\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/PrincipalBackend/PDO.php" , line : 355usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Principal not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/PrincipalBackend/PDO.php" , line : 379usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Principal not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/PrincipalBackend/PDO.php" , line : 416usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception") , regex : "^Principal not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/DAVACL/ACLTrait.php" , line : 75usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Setting ACL is not supported on this node$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CardDAV/AddressBookHome.php" , line : 69usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CardDAV/AddressBookHome.php" , line : 77usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CardDAV/AddressBookHome.php" , line : 100usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^Creating new files in this collection is not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CardDAV/AddressBookHome.php" , line : 112usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^Creating new collections in this collection is not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CardDAV/AddressBookHome.php" , line : 131usize , placeholders : & ["$name"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Addressbook with name '(.*)' could not be found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CardDAV/AddressBookHome.php" , line : 160usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\InvalidResourceType") , regex : "^Unknown resourceType for this collection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CardDAV/AddressBook.php" , line : 67usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Card not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CardDAV/AddressBook.php" , line : 121usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^Creating collections in addressbooks is not allowed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CardDAV/AddressBook.php" , line : 162usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\MethodNotAllowed") , regex : "^Renaming addressbooks is not yet supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CardDAV/Xml/Request/AddressBookQueryReport.php" , line : 150usize , placeholders : & ["Plugin::NS_CARDDAV"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^You can only include 1 \\{(.*)\\}filter element$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CardDAV/Xml/Request/AddressBookQueryReport.php" , line : 155usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^The \"test\" attribute must be one of \"allof\" or \"anyof\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CardDAV/Xml/Filter/PropFilter.php" , line : 80usize , placeholders : & ["$matchType"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Unknown match\\-type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CardDAV/Xml/Filter/ParamFilter.php" , line : 71usize , placeholders : & ["$matchType"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Unknown match\\-type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CardDAV/Plugin.php" , line : 331usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Sabre\\DAV\\Exception\\UnsupportedMediaType") , regex : "^This resource only supports valid vCard or jCard data\\. Parse error: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CardDAV/Plugin.php" , line : 335usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\UnsupportedMediaType") , regex : "^This collection can only support vcard objects\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CardDAV/Plugin.php" , line : 369usize , placeholders : & ["$message['message']"] , exception : Some ("Sabre\\DAV\\Exception\\UnsupportedMediaType") , regex : "^Validation error in vCard: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CardDAV/Plugin.php" , line : 407usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\ReportNotSupported") , regex : "^The addressbook\\-query report is not supported on this url with Depth: 0$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/dav/lib/CardDAV/Backend/PDO.php" , line : 165usize , placeholders : & ["$property"] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^Unknown property: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/event/lib/Promise.php" , line : 137usize , placeholders : & [] , exception : Some ("Sabre\\Event\\PromiseAlreadyResolvedException") , regex : "^This promise is already resolved, and you're not allowed to resolve a promise more than once$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/event/lib/Promise.php" , line : 152usize , placeholders : & [] , exception : Some ("Sabre\\Event\\PromiseAlreadyResolvedException") , regex : "^This promise is already resolved, and you're not allowed to resolve a promise more than once$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/event/lib/Promise.php" , line : 180usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^There were no more events in the loop\\. This promise will never be fulfilled\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/sabre/event/lib/coroutine.php" , line : 59usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^You must pass a generator function$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Uri/UriResolver.php" , line : 140usize , placeholders : & ["sprintf(\"Unable to resolve URI '%s' from base '%s'\", $relativePath, $basePath)"] , exception : Some ("JsonSchema\\Exception\\UriResolverException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Uri/Retrievers/PredefinedArray.php" , line : 48usize , placeholders : & ["sprintf(\n                'The JSON schema \"%s\" was not found.',\n                $uri\n            )"] , exception : Some ("JsonSchema\\Exception\\ResourceNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Uri/Retrievers/Curl.php" , line : 28usize , placeholders : & [] , exception : Some ("JsonSchema\\Exception\\RuntimeException") , regex : "^cURL not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Uri/Retrievers/Curl.php" , line : 48usize , placeholders : & [] , exception : Some ("JsonSchema\\Exception\\ResourceNotFoundException") , regex : "^JSON schema not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Uri/Retrievers/FileGetContents.php" , line : 38usize , placeholders : & ["$errorMessage"] , exception : Some ("JsonSchema\\Exception\\ResourceNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Uri/Retrievers/FileGetContents.php" , line : 42usize , placeholders : & ["$uri"] , exception : Some ("JsonSchema\\Exception\\ResourceNotFoundException") , regex : "^JSON schema not found at (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Uri/Retrievers/FileGetContents.php" , line : 48usize , placeholders : & ["$uri"] , exception : Some ("JsonSchema\\Exception\\ResourceNotFoundException") , regex : "^JSON schema not found at (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Uri/UriRetriever.php" , line : 92usize , placeholders : & ["sprintf('Media type %s expected', Validator::SCHEMA_MEDIA_TYPE)"] , exception : Some ("JsonSchema\\Exception\\InvalidSchemaMediaTypeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Uri/UriRetriever.php" , line : 143usize , placeholders : & ["$parsed['fragment']" , "$uri"] , exception : Some ("JsonSchema\\Exception\\ResourceNotFoundException") , regex : "^Fragment \"(.*)\" not found in (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Uri/UriRetriever.php" , line : 150usize , placeholders : & ["$pathElement" , "$uri"] , exception : Some ("JsonSchema\\Exception\\ResourceNotFoundException") , regex : "^Fragment part \"(.*)\" is no object  in (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Uri/UriRetriever.php" , line : 213usize , placeholders : & ["$error"] , exception : Some ("JsonSchema\\Exception\\JsonDecodingException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Entity/JsonPointer.php" , line : 40usize , placeholders : & [] , exception : Some ("JsonSchema\\Exception\\InvalidArgumentException") , regex : "^Ref value must be a string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/SchemaStorage.php" , line : 131usize , placeholders : & ["sprintf(\n                \"Could not resolve fragment '%s': no file is defined\",\n                $jsonPointer->getPropertyPathAsString()\n            )"] , exception : Some ("JsonSchema\\Exception\\UnresolvableJsonPointerException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/SchemaStorage.php" , line : 145usize , placeholders : & ["sprintf(\n                    'File: %s is found, but could not resolve fragment: %s',\n                    $jsonPointer->getFilename(),\n                    $jsonPointer->getPropertyPathAsString()\n                )"] , exception : Some ("JsonSchema\\Exception\\UnresolvableJsonPointerException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Constraints/BaseConstraint.php" , line : 57usize , placeholders : & ["sprintf('Error validating %s: %s', $error['pointer'], $error['message'])"] , exception : Some ("JsonSchema\\Exception\\ValidationException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Constraints/BaseConstraint.php" , line : 143usize , placeholders : & ["$message"] , exception : Some ("JsonSchema\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Constraints/SchemaConstraint.php" , line : 40usize , placeholders : & [] , exception : Some ("JsonSchema\\Exception\\InvalidArgumentException") , regex : "^no schema found to verify against$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Constraints/SchemaConstraint.php" , line : 52usize , placeholders : & [] , exception : Some ("JsonSchema\\Exception\\RuntimeException") , regex : "^Cannot validate the schema of a non\\-object$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Constraints/SchemaConstraint.php" , line : 79usize , placeholders : & [] , exception : Some ("JsonSchema\\Exception\\InvalidSchemaException") , regex : "^Schema did not pass validation$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Constraints/TypeConstraint.php" , line : 138usize , placeholders : & ["sprintf(\n                    'No wording for %s available, expected wordings are: [%s]',\n                    var_export($type, true),\n                    implode(', ', array_filter(self::$wording)))"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Constraints/TypeConstraint.php" , line : 214usize , placeholders : & ["(is_object($value) ? 'object' : $value)" , "$type"] , exception : Some ("JsonSchema\\Exception\\InvalidArgumentException") , regex : "^(.*) is an invalid type for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Constraints/Factory.php" , line : 168usize , placeholders : & ["$name"] , exception : Some ("JsonSchema\\Exception\\InvalidArgumentException") , regex : "^Unknown constraint (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Constraints/Factory.php" , line : 172usize , placeholders : & ["$name"] , exception : Some ("JsonSchema\\Exception\\InvalidArgumentException") , regex : "^Invalid class (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/justinrainbow/json-schema/src/JsonSchema/Constraints/Factory.php" , line : 191usize , placeholders : & ["$constraintName"] , exception : Some ("JsonSchema\\Exception\\InvalidArgumentException") , regex : "^Unknown constraint (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Territory.php" , line : 57usize , placeholders : & ["$type"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Territory.php" , line : 91usize , placeholders : & ["$type"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Territory.php" , line : 207usize , placeholders : & ["$levels"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Misc.php" , line : 276usize , placeholders : & ["$width"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Misc.php" , line : 301usize , placeholders : & ["$type"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 144usize , placeholders : & ["$fromTimezone"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 149usize , placeholders : & ["$fromTimezone"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 172usize , placeholders : & ["$value"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 175usize , placeholders : & ["$value"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 183usize , placeholders : & ["$toTimezone"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 188usize , placeholders : & ["$toTimezone"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 606usize , placeholders : & ["$value"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 611usize , placeholders : & ["$width"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 644usize , placeholders : & ["$value"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 649usize , placeholders : & ["$width"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 682usize , placeholders : & ["$value"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 688usize , placeholders : & ["$width"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 721usize , placeholders : & ["$value"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 726usize , placeholders : & ["$width"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 769usize , placeholders : & ["$value"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 774usize , placeholders : & ["$width"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 807usize , placeholders : & ["$width"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 829usize , placeholders : & ["$value"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 973usize , placeholders : & ["$value"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 1144usize , placeholders : & ["$width"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 1174usize , placeholders : & ["$width"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 1241usize , placeholders : & ["$skeleton"] , exception : Some ("Punic\\Exception") , regex : "^Matching skeleton not found: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 1364usize , placeholders : & ["$dateEnd"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 1370usize , placeholders : & ["$dateStart"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 1400usize , placeholders : & ["$dateEnd"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 1406usize , placeholders : & ["$dateStart"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 1754usize , placeholders : & ["$value"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 1757usize , placeholders : & ["$format"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 1875usize , placeholders : & ["$width"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 1880usize , placeholders : & ["$wholeWidth"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2109usize , placeholders : & ["$value1"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2112usize , placeholders : & ["$value2"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2158usize , placeholders : & ["$greatestDifference"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2169usize , placeholders : & ["$skeletonGranularity"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2225usize , placeholders : & ["$format"] , exception : Some ("Punic\\Exception") , regex : "^No recurring field found in format: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2250usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2304usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2330usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2385usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2408usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2431usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2450usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2468usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2486usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2505usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2524usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2553usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2582usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2605usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2681usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2712usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2731usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2753usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2824usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2851usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2883usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2940usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2969usize , placeholders : & ["__METHOD__"] , exception : Some ("Punic\\Exception\\NotImplemented") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2977usize , placeholders : & ["__METHOD__"] , exception : Some ("Punic\\Exception\\NotImplemented") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 2985usize , placeholders : & ["__METHOD__"] , exception : Some ("Punic\\Exception\\NotImplemented") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Calendar.php" , line : 3045usize , placeholders : & ["$count"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Plural.php" , line : 97usize , placeholders : & ["$number"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Plural.php" , line : 100usize , placeholders : & ["$number"] , exception : Some ("Punic\\Exception\\BadArgumentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Plural.php" , line : 127usize , placeholders : & ["$type"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Plural.php" , line : 135usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Bad formula!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Plural.php" , line : 155usize , placeholders : & ["$formulaPattern"] , exception : Some ("Exception") , regex : "^There was a problem in the formula (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Unit.php" , line : 296usize , placeholders : & ["$width"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Unit.php" , line : 350usize , placeholders : & ["$unit"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Data.php" , line : 91usize , placeholders : & ["$locale"] , exception : Some ("Punic\\Exception\\InvalidLocale") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Data.php" , line : 128usize , placeholders : & ["$locale"] , exception : Some ("Punic\\Exception\\InvalidLocale") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Data.php" , line : 242usize , placeholders : & ["$identifier"] , exception : Some ("Punic\\Exception\\InvalidDataFile") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Data.php" , line : 256usize , placeholders : & ["$identifier"] , exception : Some ("Punic\\Exception\\InvalidDataFile") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Data.php" , line : 263usize , placeholders : & ["$locale"] , exception : Some ("Punic\\Exception\\DataFolderNotFound") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Data.php" , line : 268usize , placeholders : & ["$identifier"] , exception : Some ("Punic\\Exception\\DataFileNotFound") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Data.php" , line : 274usize , placeholders : & ["$file"] , exception : Some ("Punic\\Exception\\BadDataFileContents") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Data.php" , line : 300usize , placeholders : & ["$identifier"] , exception : Some ("Punic\\Exception\\InvalidDataFile") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Data.php" , line : 306usize , placeholders : & ["$identifier"] , exception : Some ("Punic\\Exception\\InvalidDataFile") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Data.php" , line : 310usize , placeholders : & ["$identifier"] , exception : Some ("Punic\\Exception\\DataFileNotFound") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Data.php" , line : 316usize , placeholders : & ["$file"] , exception : Some ("Punic\\Exception\\BadDataFileContents") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Data.php" , line : 676usize , placeholders : & ["$locale"] , exception : Some ("Punic\\Exception\\InvalidLocale") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Data.php" , line : 742usize , placeholders : & ["$data[$key]"] , exception : Some ("Punic\\Exception\\InvalidOverride") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Number.php" , line : 167usize , placeholders : & ["$kind"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/punic/punic/src/Number.php" , line : 319usize , placeholders : & ["$type"] , exception : Some ("Punic\\Exception\\ValueNotInList") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/pimple/pimple/src/Pimple/Psr11/ServiceLocator.php" , line : 62usize , placeholders : & ["$id"] , exception : Some ("Pimple\\Exception\\UnknownIdentifierException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/pimple/pimple/src/Pimple/Container.php" , line : 85usize , placeholders : & ["$id"] , exception : Some ("Pimple\\Exception\\FrozenServiceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/pimple/pimple/src/Pimple/Container.php" , line : 105usize , placeholders : & ["$id"] , exception : Some ("Pimple\\Exception\\UnknownIdentifierException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/pimple/pimple/src/Pimple/Container.php" , line : 174usize , placeholders : & [] , exception : Some ("Pimple\\Exception\\ExpectedInvokableException") , regex : "^Service definition is not a Closure or invokable object\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/pimple/pimple/src/Pimple/Container.php" , line : 196usize , placeholders : & [] , exception : Some ("Pimple\\Exception\\ExpectedInvokableException") , regex : "^Callable is not a Closure or invokable object\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/pimple/pimple/src/Pimple/Container.php" , line : 216usize , placeholders : & ["$id"] , exception : Some ("Pimple\\Exception\\UnknownIdentifierException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/pimple/pimple/src/Pimple/Container.php" , line : 245usize , placeholders : & ["$id"] , exception : Some ("Pimple\\Exception\\UnknownIdentifierException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/pimple/pimple/src/Pimple/Container.php" , line : 249usize , placeholders : & ["$id"] , exception : Some ("Pimple\\Exception\\FrozenServiceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/pimple/pimple/src/Pimple/Container.php" , line : 253usize , placeholders : & ["$id"] , exception : Some ("Pimple\\Exception\\InvalidServiceIdentifierException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/pimple/pimple/src/Pimple/Container.php" , line : 261usize , placeholders : & [] , exception : Some ("Pimple\\Exception\\ExpectedInvokableException") , regex : "^Extension service definition is not a Closure or invokable object\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/beberlei/assert/lib/Assert/LazyAssertion.php" , line : 205usize , placeholders : & ["$className" , "Assert::class"] , exception : Some ("LogicException") , regex : "^(.*) is not \\(a subclass of\\) (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/beberlei/assert/lib/Assert/LazyAssertion.php" , line : 221usize , placeholders : & ["$className" , "LazyAssertionException::class"] , exception : Some ("LogicException") , regex : "^(.*) is not \\(a subclass of\\) (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/beberlei/assert/lib/Assert/Assertion.php" , line : 2110usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Missing the first argument\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/beberlei/assert/lib/Assert/Assertion.php" , line : 2124usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Missing the first argument\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/beberlei/assert/lib/Assert/Assertion.php" , line : 2140usize , placeholders : & ["$method"] , exception : Some ("BadMethodCallException") , regex : "^No assertion Assertion\\#(.*) exists\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/beberlei/assert/lib/Assert/AssertionChain.php" , line : 175usize , placeholders : & ["$methodName"] , exception : Some ("RuntimeException") , regex : "^Assertion '(.*)' does not exist\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/beberlei/assert/lib/Assert/AssertionChain.php" , line : 237usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Exception class name must be passed as a string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/beberlei/assert/lib/Assert/AssertionChain.php" , line : 241usize , placeholders : & ["$className" , "Assertion::class"] , exception : Some ("LogicException") , regex : "^(.*) is not \\(a subclass of\\) (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Identity/v2/Models/Catalog.php" , line : 62usize , placeholders : & ["sprintf(\"Endpoint URL could not be found in the catalog for this service.\\nName: %s\\nType: %s\\nRegion: %s\\nURL type: %s\", $serviceName, $serviceType, $region, $urlType)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Identity/v3/Service.php" , line : 39usize , placeholders : & ["sprintf('Cached token has expired on \"%s\".', $token->expires->format(\\DateTime::ISO8601))"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Identity/v3/Service.php" , line : 54usize , placeholders : & ["sprintf('No service found with type [%s] name [%s] region [%s] interface [%s]', $type, $name, $region, $interface)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Identity/v3/Models/Token.php" , line : 109usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^When authenticating with a username, you must also provide either the domain name or domain ID to which the user belongs to\\. Alternatively, if you provide a user ID instead, you do not need to provide domain information\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Identity/v3/Models/Token.php" , line : 114usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Either a user or token must be provided\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Identity/v3/Models/Catalog.php" , line : 50usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^No services are defined$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Identity/v3/Models/Catalog.php" , line : 59usize , placeholders : & ["sprintf(\"Endpoint URL could not be found in the catalog for this service.\\nName: %s\\nType: %s\\nRegion: %s\\nURL type: %s\", $name, $type, $region, $urlType)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/OpenStack.php" , line : 50usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^'authUrl' is a required option$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Common/Resource/OperatorResource.php" , line : 135usize , placeholders : & ["sprintf('%s does not implement %s', $class, ResourceInterface::class)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Common/Resource/AbstractResource.php" , line : 120usize , placeholders : & ["sprintf('%s does not implement %s', $class, ResourceInterface::class)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Common/Service/Builder.php" , line : 57usize , placeholders : & ["sprintf('%s does not exist', $class)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Common/Service/Builder.php" , line : 164usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^\"authUrl\" is a required option$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Common/Service/Builder.php" , line : 168usize , placeholders : & ["sprintf('\"identityService\" must be specified and implement %s', IdentityService::class)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Common/Transport/JsonSerializer.php" , line : 100usize , placeholders : & ["sprintf('When an object value is provided, it must either be \\stdClass or implement the Serializable '.'interface, you provided %s', print_r($value, true))"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Common/Transport/Utils.php" , line : 34usize , placeholders : & ["(isset($jsonErrors[$last]) ? $jsonErrors[$last] : 'Unknown error')"] , exception : Some ("InvalidArgumentException") , regex : "^Unable to parse JSON data: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Common/Api/Operation.php" , line : 116usize , placeholders : & ["sprintf('\"%s\" is a required option, but it was not provided', $paramName)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Common/Api/Parameter.php" , line : 137usize , placeholders : & ["sprintf('%s is not a permitted location', $this->location)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Common/Api/Parameter.php" , line : 203usize , placeholders : & ["sprintf('The only permitted values are %s. You provided %s', implode(', ', $this->enum), print_r($userValues, true))"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Common/Api/Parameter.php" , line : 210usize , placeholders : & ["sprintf('The key provided \"%s\" has the wrong value type. You provided %s (%s) but was expecting %s', $this->name, print_r($userValues, true), gettype($userValues), $this->type)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Common/Api/Parameter.php" , line : 245usize , placeholders : & ["sprintf('The key provided \"%s\" is not defined', $key)"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Common/Api/OperatorTrait.php" , line : 146usize , placeholders : & ["sprintf('%s does not implement %s', $class, ResourceInterface::class)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Compute/v2/Models/Server.php" , line : 137usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^imageId or blockDeviceMapping\\.uuid must be set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Compute/v2/Models/Server.php" , line : 203usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Reboot type must either be SOFT or HARD$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Compute/v2/Models/Server.php" , line : 426usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^networkId or portId must be set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/php-opencloud/openstack/src/Images/v2/Models/Image.php" , line : 162usize , placeholders : & ["$schema->getErrorString()"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/phpseclib/phpseclib/phpseclib/bootstrap.php" , line : 12usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^Overloading of string functions using mbstring\\.func_overload is not supported by phpseclib\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/SharedAccessSignatureHelper.php" , line : 263usize , placeholders : & ["Resources::SIGNED_PROTOCOL_INVALID_VALIDATION_MSG"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/ServiceSettings.php" , line : 61usize , placeholders : & ["sprintf(Resources::MISSING_CONNECTION_STRING_SETTINGS, $connectionString)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/ServiceSettings.php" , line : 92usize , placeholders : & ["sprintf(\n                        Resources::INVALID_CONNECTION_STRING_SETTING_KEY,\n                        $key,\n                        implode(\"\\n\", static::$validSettingKeys)\n                    )"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/ServiceSettings.php" , line : 242usize , placeholders : & ["sprintf(\n                    Resources::INVALID_CONFIG_VALUE,\n                    $settingValue,\n                    implode(\"\\n\", $validValues)\n                )"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/Authentication/SharedAccessSignatureAuthScheme.php" , line : 60usize , placeholders : & ["sprintf(\n                    Resources::INVALID_SAS_TOKEN,\n                    $sasToken\n                )"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/Serialization/MessageSerializer.php" , line : 76usize , placeholders : & ["Resources::INVALID_MESSAGE_OBJECT_TO_SERIALIZE"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/StorageServiceSettings.php" , line : 112usize , placeholders : & ["sprintf(Resources::INVALID_ACCOUNT_KEY_FORMAT, $key)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/ServiceRestProxy.php" , line : 419usize , placeholders : & ["$reason"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/ServiceRestProxy.php" , line : 509usize , placeholders : & ["$response"] , exception : Some ("MicrosoftAzure\\Storage\\Common\\Exceptions\\ServiceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/ServiceRestProxy.php" , line : 590usize , placeholders : & ["Resources::INVALID_META_MSG"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/Validate.php" , line : 55usize , placeholders : & ["gettype(array())"] , exception : Some ("MicrosoftAzure\\Storage\\Common\\Exceptions\\InvalidArgumentTypeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/Validate.php" , line : 74usize , placeholders : & ["gettype('')"] , exception : Some ("MicrosoftAzure\\Storage\\Common\\Exceptions\\InvalidArgumentTypeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/Validate.php" , line : 105usize , placeholders : & ["sprintf(Resources::NULL_OR_EMPTY_MSG, $name)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/Validate.php" , line : 124usize , placeholders : & [] , exception : Some ("MicrosoftAzure\\Storage\\Common\\Exceptions\\InvalidArgumentTypeException") , regex : "^double$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/Validate.php" , line : 143usize , placeholders : & ["gettype(123)"] , exception : Some ("MicrosoftAzure\\Storage\\Common\\Exceptions\\InvalidArgumentTypeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/Validate.php" , line : 178usize , placeholders : & ["$failureMessage"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/Validate.php" , line : 194usize , placeholders : & [] , exception : Some ("MicrosoftAzure\\Storage\\Common\\Exceptions\\InvalidArgumentTypeException") , regex : "^DateTimeInterface$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/Validate.php" , line : 211usize , placeholders : & ["sprintf(Resources::NULL_MSG, $name)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/Validate.php" , line : 240usize , placeholders : & ["sprintf(\n                    Resources::INSTANCE_TYPE_VALIDATION_MSG,\n                    $name,\n                    $objectType,\n                    $classType\n                )"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/Validate.php" , line : 284usize , placeholders : & ["sprintf(Resources::INVALID_CONFIG_HOSTNAME, $hostname)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/Validate.php" , line : 318usize , placeholders : & ["sprintf(Resources::INVALID_CONFIG_URI, $uri)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/Validate.php" , line : 337usize , placeholders : & [] , exception : Some ("MicrosoftAzure\\Storage\\Common\\Exceptions\\InvalidArgumentTypeException") , regex : "^object$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/Validate.php" , line : 365usize , placeholders : & ["sprintf(\n                    Resources::INSTANCE_TYPE_VALIDATION_MSG,\n                    $name,\n                    $objectType,\n                    $class\n                )"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/Validate.php" , line : 395usize , placeholders : & ["sprintf(\n                    Resources::ERROR_METHOD_NOT_FOUND,\n                    $method,\n                    $name\n                )"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/Validate.php" , line : 423usize , placeholders : & ["sprintf(\n                    Resources::ERROR_INVALID_DATE_STRING,\n                    $name,\n                    $value\n                )"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Internal/Validate.php" , line : 450usize , placeholders : & ["sprintf(\n                    Resources::INVALID_VALUE_MSG,\n                    $name,\n                    sprintf(Resources::ERROR_KEY_NOT_EXIST, $key)\n                )"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-common/src/Common/Exceptions/ServiceException.php" , line : 96usize , placeholders : & ["sprintf(Resources::ERROR_CANNOT_PARSE_XML, implode('; ', $messages))"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-blob/src/Blob/BlobRestProxy.php" , line : 630usize , placeholders : & ["Resources::NOT_IMPLEMENTED_MSG"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-blob/src/Blob/BlobRestProxy.php" , line : 2429usize , placeholders : & ["Resources::ERROR_RANGE_NOT_ALIGN_TO_512"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-blob/src/Blob/BlobRestProxy.php" , line : 3670usize , placeholders : & ["Resources::ERROR_FILE_COULD_NOT_BE_OPENED"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/microsoft/azure-storage-blob/src/Blob/BlobRestProxy.php" , line : 4769usize , placeholders : & ["Resources::INVALID_ACH_MSG"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/HandlerStack.php" , line : 206usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^No handler has been specified$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/HandlerStack.php" , line : 228usize , placeholders : & ["$name"] , exception : Some ("InvalidArgumentException") , regex : "^Middleware not found: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/StreamHandler.php" , line : 254usize , placeholders : & ["\\trim($message)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/StreamHandler.php" , line : 271usize , placeholders : & ["\\sprintf(\"The scheme '%s' is not supported.\", $request->getUri()->getScheme())"] , exception : Some ("GuzzleHttp\\Exception\\RequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/StreamHandler.php" , line : 291usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^on_headers must be callable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/StreamHandler.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^stream_context must be an array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/StreamHandler.php" , line : 312usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Microsoft NTLM authentication only supported with curl handler$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/StreamHandler.php" , line : 329usize , placeholders : & ["sprintf('Connection refused for URI %s', $uri)"] , exception : Some ("GuzzleHttp\\Exception\\ConnectException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/StreamHandler.php" , line : 352usize , placeholders : & ["\\sprintf(\"Could not resolve IPv4 address for host '%s'\", $uri->getHost())"] , exception : Some ("GuzzleHttp\\Exception\\ConnectException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/StreamHandler.php" , line : 360usize , placeholders : & ["\\sprintf(\"Could not resolve IPv6 address for host '%s'\", $uri->getHost())"] , exception : Some ("GuzzleHttp\\Exception\\ConnectException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/StreamHandler.php" , line : 494usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid crypto_method request option: unknown version provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/StreamHandler.php" , line : 512usize , placeholders : & ["$value"] , exception : Some ("RuntimeException") , regex : "^SSL CA bundle not found: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/StreamHandler.php" , line : 515usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid verify request option$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/StreamHandler.php" , line : 534usize , placeholders : & ["$value"] , exception : Some ("RuntimeException") , regex : "^SSL certificate not found: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/EasyHandle.php" , line : 110usize , placeholders : & ["$msg"] , exception : Some ("BadMethodCallException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/HeaderProcessor.php" , line : 24usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Expected a non\\-empty array of header data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/HeaderProcessor.php" , line : 31usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^HTTP version missing from header data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/HeaderProcessor.php" , line : 37usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^HTTP status code missing from header data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/MockHandler.php" , line : 83usize , placeholders : & [] , exception : Some ("OutOfBoundsException") , regex : "^Mock queue is empty$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/MockHandler.php" , line : 96usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^on_headers must be callable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/MockHandler.php" , line : 163usize , placeholders : & ["Utils::describeType($value)"] , exception : Some ("TypeError") , regex : "^Expected a Response, Promise, Throwable or callable\\. Found (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/CurlFactory.php" , line : 365usize , placeholders : & ["$options['verify']"] , exception : Some ("InvalidArgumentException") , regex : "^SSL CA bundle not found: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/CurlFactory.php" , line : 408usize , placeholders : & ["\\sprintf('Directory %s does not exist for sink value of %s', \\dirname($sink), $sink)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/CurlFactory.php" , line : 460usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid crypto_method request option: TLS 1\\.0 not supported by your version of cURL$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/CurlFactory.php" , line : 465usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid crypto_method request option: TLS 1\\.1 not supported by your version of cURL$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/CurlFactory.php" , line : 470usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid crypto_method request option: TLS 1\\.2 not supported by your version of cURL$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/CurlFactory.php" , line : 475usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid crypto_method request option: TLS 1\\.3 not supported by your version of cURL$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/CurlFactory.php" , line : 479usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid crypto_method request option: unknown version provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/CurlFactory.php" , line : 490usize , placeholders : & ["$cert"] , exception : Some ("InvalidArgumentException") , regex : "^SSL certificate not found: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/CurlFactory.php" , line : 513usize , placeholders : & ["$sslKey"] , exception : Some ("InvalidArgumentException") , regex : "^SSL private key not found: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/CurlFactory.php" , line : 521usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^progress client option must be callable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/CurlFactory.php" , line : 588usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^on_headers must be callable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/CurlMultiHandler.php" , line : 99usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Can not get other property as '_mh'\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Handler/CurlMultiHandler.php" , line : 105usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Can not initialize curl multi handle\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Utils.php" , line : 105usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^GuzzleHttp requires cURL, the allow_url_fopen ini setting, or a custom HTTP handler\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Utils.php" , line : 173usize , placeholders : & ["<<< EOT\nNo system CA bundle could be found in any of the the common system locations.\nPHP versions earlier than 5.6 are not properly configured to use the system's\nCA bundle by default. In order to verify peer certificates, you will need to\nsupply the path on disk to a certificate bundle to the 'verify' request\noption: https://docs.guzzlephp.org/en/latest/request-options.html#verify. If\nyou do not need a specific certificate bundle, then Mozilla provides a commonly\nused CA bundle which can be downloaded here (provided by the maintainer of\ncURL): https://curl.haxx.se/ca/cacert.pem. Once you have a CA bundle available\non disk, you can set the 'openssl.cafile' PHP ini setting to point to the path\nto the file, allowing you to omit the 'verify' request option. See\nhttps://curl.haxx.se/docs/sslcerts.html for more information.\nEOT"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Utils.php" , line : 226usize , placeholders : & [] , exception : Some ("GuzzleHttp\\Exception\\InvalidArgumentException") , regex : "^Empty host provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Utils.php" , line : 277usize , placeholders : & ["\\json_last_error_msg()"] , exception : Some ("GuzzleHttp\\Exception\\InvalidArgumentException") , regex : "^json_decode error: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Utils.php" , line : 298usize , placeholders : & ["\\json_last_error_msg()"] , exception : Some ("GuzzleHttp\\Exception\\InvalidArgumentException") , regex : "^json_encode error: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Utils.php" , line : 346usize , placeholders : & ["$errorMessage"] , exception : Some ("GuzzleHttp\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Utils.php" , line : 382usize , placeholders : & [] , exception : Some ("Error") , regex : "^ext\\-idn or symfony/polyfill\\-intl\\-idn not loaded or too old$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Pool.php" , line : 62usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Each value yielded by the iterator must be a Psr7\\\\Http\\\\Message\\\\RequestInterface or a callable that returns a promise that fulfills with a Psr7\\\\Message\\\\Http\\\\ResponseInterface object\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Client.php" , line : 62usize , placeholders : & [] , exception : Some ("GuzzleHttp\\Exception\\InvalidArgumentException") , regex : "^handler must be a callable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Client.php" , line : 84usize , placeholders : & [] , exception : Some ("GuzzleHttp\\Exception\\InvalidArgumentException") , regex : "^Magic request methods require a URI and optional options array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Client.php" , line : 301usize , placeholders : & [] , exception : Some ("GuzzleHttp\\Exception\\InvalidArgumentException") , regex : "^headers must be an array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Client.php" , line : 350usize , placeholders : & [] , exception : Some ("GuzzleHttp\\Exception\\InvalidArgumentException") , regex : "^The headers array must have header name as keys\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Client.php" , line : 358usize , placeholders : & [] , exception : Some ("GuzzleHttp\\Exception\\InvalidArgumentException") , regex : "^You cannot use form_params and multipart at the same time\\. Use the form_params option if you want to send application/x\\-www\\-form\\-urlencoded requests, and the multipart option to send multipart/form\\-data requests\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Client.php" , line : 428usize , placeholders : & [] , exception : Some ("GuzzleHttp\\Exception\\InvalidArgumentException") , regex : "^query must be a string or array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Client.php" , line : 438usize , placeholders : & [] , exception : Some ("GuzzleHttp\\Exception\\InvalidArgumentException") , regex : "^sink must not be a boolean$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Cookie/SessionCookieJar.php" , line : 74usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Invalid cookie data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Cookie/CookieJar.php" , line : 162usize , placeholders : & ["$result"] , exception : Some ("RuntimeException") , regex : "^Invalid cookie: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Cookie/FileCookieJar.php" , line : 69usize , placeholders : & ["$filename"] , exception : Some ("RuntimeException") , regex : "^Unable to save file (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Cookie/FileCookieJar.php" , line : 86usize , placeholders : & ["$filename"] , exception : Some ("RuntimeException") , regex : "^Unable to load file (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Cookie/FileCookieJar.php" , line : 98usize , placeholders : & ["$filename"] , exception : Some ("RuntimeException") , regex : "^Invalid cookie file: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/RedirectMiddleware.php" , line : 61usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^allow_redirects must be true, false, or array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/RedirectMiddleware.php" , line : 155usize , placeholders : & ["$max"] , exception : Some ("GuzzleHttp\\Exception\\TooManyRedirectsException") , regex : "^Will not follow more than (.*) redirects$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/RedirectMiddleware.php" , line : 223usize , placeholders : & ["\\sprintf('Redirect URI, %s, does not use one of the allowed redirect protocols: %s', $location, \\implode(', ', $protocols))"] , exception : Some ("GuzzleHttp\\Exception\\BadResponseException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Middleware.php" , line : 33usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^cookies must be an instance of GuzzleHttp\\\\Cookie\\\\CookieJarInterface$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Middleware.php" , line : 91usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^history container must be an array or object implementing ArrayAccess$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/guzzle/src/Middleware.php" , line : 202usize , placeholders : & ["sprintf('Argument 2 to %s::log() must be of type %s', self::class, MessageFormatterInterface::class)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/guzzlehttp/guzzle/src/Middleware.php" , line : 210usize , placeholders : & ["$logLevel"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/guzzlehttp/guzzle/src/Middleware.php" , line : 217usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/StreamDecoratorTrait.php" , line : 38usize , placeholders : & ["$name"] , exception : Some ("UnexpectedValueException") , regex : "^(.*) not found on class$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/StreamDecoratorTrait.php" , line : 154usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/LimitStream.php" , line : 77usize , placeholders : & ["sprintf(\n                'Cannot seek to offset %s with whence %s',\n                $offset,\n                $whence\n            )"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/LimitStream.php" , line : 119usize , placeholders : & ["$offset"] , exception : Some ("RuntimeException") , regex : "^Could not seek to stream offset (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/BufferStream.php" , line : 89usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Cannot seek a BufferStream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/BufferStream.php" , line : 99usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Cannot determine the position of a BufferStream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/NoSeekStream.php" , line : 21usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Cannot seek a NoSeekStream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Header.php" , line : 86usize , placeholders : & [] , exception : Some ("TypeError") , regex : "^\\$header must either be a string or an array containing strings\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/AppendStream.php" , line : 65usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Each stream must be readable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/AppendStream.php" , line : 159usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^This AppendStream is not seekable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/AppendStream.php" , line : 161usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^The AppendStream can only seek with SEEK_SET$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/AppendStream.php" , line : 171usize , placeholders : & ["$i"] , exception : Some ("RuntimeException") , regex : "^Unable to seek stream (.*) of the AppendStream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/AppendStream.php" , line : 238usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Cannot write to an AppendStream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Response.php" , line : 151usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Status code must be an integer value\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Response.php" , line : 158usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Status code must be an integer value between 1xx and 5xx\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/FnStream.php" , line : 47usize , placeholders : & ["str_replace('_fn_', '', $name)"] , exception : Some ("BadMethodCallException") , regex : "^(.*)\\(\\) is not implemented in the FnStream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/FnStream.php" , line : 68usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^FnStream should never be unserialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Stream.php" , line : 53usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Stream must be a resource$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Stream.php" , line : 98usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Stream is detached$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Stream.php" , line : 102usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Cannot read from non\\-readable stream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Stream.php" , line : 175usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Stream is detached$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Stream.php" , line : 184usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Stream is detached$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Stream.php" , line : 190usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Unable to determine stream position$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Stream.php" , line : 206usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Stream is detached$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Stream.php" , line : 209usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Stream is not seekable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Stream.php" , line : 212usize , placeholders : & ["$offset" , "var_export($whence, true)"] , exception : Some ("RuntimeException") , regex : "^Unable to seek to stream position (.*) with whence (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Stream.php" , line : 220usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Stream is detached$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Stream.php" , line : 223usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Cannot read from non\\-readable stream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Stream.php" , line : 226usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Length parameter cannot be negative$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Stream.php" , line : 236usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Unable to read from stream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Stream.php" , line : 240usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Unable to read from stream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Stream.php" , line : 249usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Stream is detached$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Stream.php" , line : 252usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Cannot write to a non\\-writable stream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Stream.php" , line : 260usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Unable to write to stream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/MessageTrait.php" , line : 178usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Header value can not be an empty array\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/MessageTrait.php" , line : 202usize , placeholders : & ["sprintf(\n                    'Header value must be scalar or null but %s provided.',\n                    is_object($value) ? get_class($value) : gettype($value)\n                )"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/MessageTrait.php" , line : 223usize , placeholders : & ["sprintf(\n                'Header name must be a string but %s provided.',\n                is_object($header) ? get_class($header) : gettype($header)\n            )"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/MessageTrait.php" , line : 230usize , placeholders : & ["sprintf('\"%s\" is not valid header name.', $header)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/MessageTrait.php" , line : 260usize , placeholders : & ["sprintf('\"%s\" is not valid header value.', $value)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Query.php" , line : 86usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/HttpFactory.php" , line : 53usize , placeholders : & ["sprintf('Invalid file opening mode \"%s\"', $mode)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/HttpFactory.php" , line : 73usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Cannot determine HTTP method$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Request.php" , line : 81usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid request target provided; cannot contain whitespace$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Request.php" , line : 156usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Method must be a non\\-empty string\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/UploadedFile.php" , line : 96usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid stream or file provided for UploadedFile$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/UploadedFile.php" , line : 108usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid error status for UploadedFile$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/UploadedFile.php" , line : 140usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Cannot retrieve stream due to upload error$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/UploadedFile.php" , line : 144usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Cannot retrieve stream after it has already been moved$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/UploadedFile.php" , line : 167usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid path provided for move operation; must be a non\\-empty string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/UploadedFile.php" , line : 186usize , placeholders : & ["sprintf('Uploaded file could not be moved to %s', $targetPath)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/ServerRequest.php" , line : 100usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid value in files specification$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/StreamWrapper.php" , line : 43usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The stream must be readable, writable, or both\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Uri.php" , line : 85usize , placeholders : & ["$uri"] , exception : Some ("GuzzleHttp\\Psr7\\Exception\\MalformedUriException") , regex : "^Unable to parse URI: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Uri.php" , line : 581usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Scheme must be a string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Uri.php" , line : 595usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^User info must be a string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Uri.php" , line : 613usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Host must be a string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Uri.php" , line : 632usize , placeholders : & ["sprintf('Invalid port: %d. Must be between 0 and 65535', $port)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Uri.php" , line : 693usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Path must be a string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Uri.php" , line : 713usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Query and fragment must be a string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Uri.php" , line : 736usize , placeholders : & [] , exception : Some ("GuzzleHttp\\Psr7\\Exception\\MalformedUriException") , regex : "^The path of a URI without an authority must not start with two slashes \"//\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Uri.php" , line : 739usize , placeholders : & [] , exception : Some ("GuzzleHttp\\Psr7\\Exception\\MalformedUriException") , regex : "^A relative URI must not have a path beginning with a segment containing a colon$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/PumpStream.php" , line : 108usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Cannot seek a PumpStream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/PumpStream.php" , line : 118usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Cannot write to a PumpStream$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/MultipartStream.php" , line : 75usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^An array is expected$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/MultipartStream.php" , line : 90usize , placeholders : & ["$key"] , exception : Some ("InvalidArgumentException") , regex : "^A '(.*)' key is required$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Message.php" , line : 32usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Unknown message type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Message.php" , line : 118usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid message$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Message.php" , line : 126usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid message: Missing header delimiter$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Message.php" , line : 134usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid message: Missing status line$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Message.php" , line : 151usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid header syntax: Obsolete line folding$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Message.php" , line : 154usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid header syntax$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Message.php" , line : 206usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid request string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Message.php" , line : 234usize , placeholders : & ["$data['start-line']"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid response string: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/CachingStream.php" , line : 71usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid whence$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Utils.php" , line : 341usize , placeholders : & ["gettype($resource)"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid resource type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/psr7/src/Utils.php" , line : 461usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^URI must be a string or UriInterface$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/promises/src/RejectedPromise.php" , line : 18usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^You cannot create a RejectedPromise with a promise\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/promises/src/RejectedPromise.php" , line : 77usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Cannot resolve a rejected promise$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/promises/src/RejectedPromise.php" , line : 83usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Cannot reject a rejected promise$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/promises/src/FulfilledPromise.php" , line : 18usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^You cannot create a FulfilledPromise with a promise\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/promises/src/FulfilledPromise.php" , line : 71usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Cannot resolve a fulfilled promise$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/promises/src/FulfilledPromise.php" , line : 77usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Cannot reject a fulfilled promise$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/promises/src/Utils.php" , line : 221usize , placeholders : & [] , exception : Some ("GuzzleHttp\\Promise\\AggregateException") , regex : "^Not enough promises to fulfill count$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/promises/src/Promise.php" , line : 131usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Cannot fulfill or reject a promise with itself$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/guzzlehttp/uri-template/src/UriTemplate.php" , line : 95usize , placeholders : & ["\\sprintf('Unable to process template: %s', \\preg_last_error_msg())"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mlocati/ip-lib/src/Range/AbstractRange.php" , line : 38usize , placeholders : & [] , exception : Some ("Exception") , regex : "^@todo$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mlocati/ip-lib/src/Range/Pattern.php" , line : 184usize , placeholders : & [] , exception : Some ("Exception") , regex : "^@todo$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/icewind/searchdav/src/XML/BasicSearch.php" , line : 87usize , placeholders : & [] , exception : Some ("Sabre\\Xml\\ParseException") , regex : "^Missing \\{DAV:\\}from when parsing \\{DAV:\\}basicsearch$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/icewind/searchdav/src/DAV/SearchHandler.php" , line : 105usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^requested order by property is not a valid property for this scope$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/icewind/searchdav/src/DAV/SearchHandler.php" , line : 109usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^requested order by property is not sortable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/icewind/searchdav/src/DAV/SearchHandler.php" , line : 119usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^requested property is not selectable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/icewind/searchdav/src/DAV/SearchHandler.php" , line : 140usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^requested search property is not a valid property for this scope$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/icewind/searchdav/src/DAV/SearchHandler.php" , line : 144usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\BadRequest") , regex : "^requested search property is not searchable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/icewind/streams/src/Wrapper.php" , line : 40usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Invalid context, source not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/icewind/streams/src/IteratorDirectory.php" , line : 48usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Invalid context, iterator or array not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/icewind/streams/src/IteratorDirectory.php" , line : 109usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^\\$source should be an Iterator or array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/icewind/streams/src/CountWrapper.php" , line : 64usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid or missing callback$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/icewind/streams/src/UrlCallback.php" , line : 133usize , placeholders : & [] , exception : Some ("Exception") , regex : "^stat is not supported due to php bug 50526$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/icewind/streams/src/WrapperHandler.php" , line : 87usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Invalid stream source$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/icewind/streams/src/WrapperHandler.php" , line : 110usize , placeholders : & ["$name"] , exception : Some ("BadMethodCallException") , regex : "^Invalid context, \"(.*)\" options not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/linq/src/Fusonic/Linq/Iterator/SelectIterator.php" , line : 26usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Selector must not be null\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/linq/src/Fusonic/Linq/Linq.php" , line : 76usize , placeholders : & [] , exception : Some ("OutOfRangeException") , regex : "^\\$count must be not be negative\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/linq/src/Fusonic/Linq/Linq.php" , line : 171usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^The input sequence contains no elements\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/linq/src/Fusonic/Linq/Linq.php" , line : 186usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^chunksize$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/linq/src/Fusonic/Linq/Linq.php" , line : 279usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^Cannot calculate an average on a none numeric value$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/linq/src/Fusonic/Linq/Linq.php" , line : 328usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^sum\\(\\) only works on numeric values\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/linq/src/Fusonic/Linq/Linq.php" , line : 350usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^min\\(\\) only works on numeric values, strings and DateTime objects\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/linq/src/Fusonic/Linq/Linq.php" , line : 361usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Cannot calculate min\\(\\) as the Linq sequence contains no elements\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/linq/src/Fusonic/Linq/Linq.php" , line : 381usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^max\\(\\) only works on numeric values, strings and DateTime objects\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/linq/src/Fusonic/Linq/Linq.php" , line : 392usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Cannot calculate max\\(\\) as the Linq sequence contains no elements\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/linq/src/Fusonic/Linq/Linq.php" , line : 537usize , placeholders : & [] , exception : Some ("OutOfRangeException") , regex : "^Index is less than 0 or greater than or equal to the number of elements in the sequence\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/linq/src/Fusonic/Linq/Linq.php" , line : 646usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^The input sequence contains more than 1 elements\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/linq/src/Fusonic/Linq/Linq.php" , line : 653usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^The input sequence contains no matching element\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/linq/src/Fusonic/Linq/Linq.php" , line : 673usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^The input sequence contains no matching element\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/linq/src/Fusonic/Linq/Linq.php" , line : 692usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^The input sequence contains no matching element\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/linq/src/Fusonic/Linq/Helper/LinqHelper.php" , line : 34usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^Return type of filter func must be boolean\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/linq/src/Fusonic/Linq/Helper/LinqHelper.php" , line : 42usize , placeholders : & ["$argumentName"] , exception : Some ("InvalidArgumentException") , regex : "^Argument must be an array, or implement either the \\\\IteratorAggregate or \\\\Iterator interface\\. ArgumentName = (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/linq/src/Fusonic/Linq/Helper/LinqHelper.php" , line : 58usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^Value must be an array, or implement either the \\\\IteratorAggregate or \\\\Iterator interface$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/opengraph/src/Consumer.php" , line : 57usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^To use loadUrl\\(\\) you must provide \\$client and \\$requestFactory when instantiating the consumer\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/opengraph/src/Objects/ObjectBase.php" , line : 124usize , placeholders : & ["sprintf(\n                                \"Found '%s' property but no audio was found before.\",\n                                $name\n                            )"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/opengraph/src/Objects/ObjectBase.php" , line : 154usize , placeholders : & ["sprintf(\n                                \"Found '%s' property but no image was found before.\",\n                                $name\n                            )"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/opengraph/src/Objects/ObjectBase.php" , line : 207usize , placeholders : & ["sprintf(\n                            \"Found '%s' property but no video was found before.\",\n                            $name\n                        )"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/fusonic/opengraph/src/Publisher.php" , line : 45usize , placeholders : & ["sprintf(\n                        \"Cannot handle value of type '%s' for property '%s'.\",\n                        get_class($property->value),\n                        $property->key\n                    )"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/ClientResolver.php" , line : 412usize , placeholders : & ["$msg"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/ClientResolver.php" , line : 435usize , placeholders : & ["$msg"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/ClientResolver.php" , line : 531usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Credentials must be an instance of Aws\\\\Credentials\\\\CredentialsInterface, an associative array that contains \"key\", \"secret\", and an optional \"token\" key\\-value pairs, a credentials provider function, or false\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/ClientResolver.php" , line : 610usize , placeholders : & [] , exception : Some ("Aws\\Exception\\InvalidRegionException") , regex : "^Region must be a valid RFC host label\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/WrappedHttpHandler.php" , line : 83usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Providing a custom HTTP stats receiver to Aws\\\\WrappedHttpHandler is not supported\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/WrappedHttpHandler.php" , line : 165usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^The HTTP handler was rejected without an \"exception\" key value pair\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/AwsClient.php" , line : 261usize , placeholders : & ["$name"] , exception : Some ("InvalidArgumentException") , regex : "^Operation not found: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/AwsClient.php" , line : 276usize , placeholders : & ["static::class"] , exception : Some ("RuntimeException") , regex : "^Instances of (.*) cannot be serialized$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/Arn.php" , line : 66usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^Constructor accepts a string or an array as an argument\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/Arn.php" , line : 133usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The 1st component of an ARN must be 'arn'\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/Arn.php" , line : 138usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The 2nd component of an ARN represents the partition and must not be empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/Arn.php" , line : 143usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The 3rd component of an ARN represents the service and must not be empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/Arn.php" , line : 148usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The 6th component of an ARN represents the resource information and must not be empty\\. Individual service ARNs may include additional delimiters to further qualify resources\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/Arn.php" , line : 158usize , placeholders : & ["$arnName"] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The 5th component of a (.*) is required, represents the account ID, and must be a valid host label\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/Arn.php" , line : 167usize , placeholders : & ["$arnName"] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The 4th component of a (.*) represents the region and must not be empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/S3/OutpostsBucketArn.php" , line : 70usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The 3rd component of an S3 Outposts bucket ARN represents the service and must be 's3\\-outposts'\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/S3/OutpostsBucketArn.php" , line : 78usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The 6th component of an S3 Outposts bucket ARN represents the resource type and must be 'outpost'\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/S3/OutpostsBucketArn.php" , line : 84usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The 7th component of an S3 Outposts bucket ARN is required, represents the outpost ID, and must be a valid host label\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/S3/OutpostsBucketArn.php" , line : 90usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The 8th component of an S3 Outposts bucket ARN must be 'bucket'$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/S3/OutpostsBucketArn.php" , line : 95usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The 9th component of an S3 Outposts bucket ARN represents the bucket name and must not be empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/S3/AccessPointArn.php" , line : 23usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The 3rd component of an S3 access point ARN represents the region and must be 's3'\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/S3/OutpostsAccessPointArn.php" , line : 72usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The 3rd component of an S3 Outposts access point ARN represents the service and must be 's3\\-outposts'\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/S3/OutpostsAccessPointArn.php" , line : 81usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The 6th component of an S3 Outposts access point ARN represents the resource type and must be 'outpost'\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/S3/OutpostsAccessPointArn.php" , line : 87usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The 7th component of an S3 Outposts access point ARN is required, represents the outpost ID, and must be a valid host label\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/S3/OutpostsAccessPointArn.php" , line : 93usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The 8th component of an S3 Outposts access point ARN must be 'accesspoint'$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/S3/OutpostsAccessPointArn.php" , line : 98usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The 9th component of an S3 Outposts access point ARN is required, represents the accesspoint name, and must be a valid host label\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/S3/OutpostsAccessPointArn.php" , line : 104usize , placeholders : & ["$data['resource_extra']"] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^An S3 Outposts access point ARN should only have 9 components, delimited by the characters ':' and '/'\\. '(.*)' was found after the 9th component\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/AccessPointArn.php" , line : 48usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The 6th component of an access point ARN represents the resource type and must be 'accesspoint'\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/AccessPointArn.php" , line : 53usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The 7th component of an access point ARN represents the resource ID and must not be empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/AccessPointArn.php" , line : 57usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The resource ID component of an access point ARN must not contain additional components \\(delimited by ':'\\)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Arn/AccessPointArn.php" , line : 62usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^The resource ID in an access point ARN must be a valid host label value\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/CommandPool.php" , line : 58usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Each value yielded by the iterator must be an Aws\\\\CommandInterface\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/CommandPool.php" , line : 125usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^before must be callable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Sqs/SqsClient.php" , line : 204usize , placeholders : & ["sprintf(\n                                            'MD5 mismatch. Expected %s, found %s',\n                                            $msg['MD5OfBody'],\n                                            $bodyMd5\n                                        )"] , exception : Some ("Aws\\Sqs\\Exception\\SqsException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Sqs/SqsClient.php" , line : 221usize , placeholders : & ["sprintf(\n                                                'Attribute MD5 mismatch. Expected %s, found %s',\n                                                $msg['MD5OfMessageAttributes'],\n                                                $messageAttributesMd5\n                                                    ? $messageAttributesMd5\n                                                    : 'No Attributes'\n                                            )"] , exception : Some ("Aws\\Sqs\\Exception\\SqsException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Sqs/SqsClient.php" , line : 237usize , placeholders : & ["sprintf(\n                                            'No Attribute MD5 found. Expected %s',\n                                            self::calculateMessageAttributesMd5($msg)\n                                        )"] , exception : Some ("Aws\\Sqs\\Exception\\SqsException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/EventBridge/EventBridgeEndpointMiddleware.php" , line : 100usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^EventId must be a non\\-empty string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/EventBridge/EventBridgeEndpointMiddleware.php" , line : 103usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^EventId must be a valid host$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/EventBridge/EventBridgeEndpointMiddleware.php" , line : 106usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^EventId is currently not compatible with FIPS pseudo regions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/EventBridge/EventBridgeEndpointMiddleware.php" , line : 111usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^EventId is currently not compatible with dualstack$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/InputValidationMiddleware.php" , line : 33usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The mandatory attribute list must be an array of strings$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/InputValidationMiddleware.php" , line : 64usize , placeholders : & ["$commandName" , "$member"] , exception : Some ("InvalidArgumentException") , regex : "^The (.*) operation requires non\\-empty parameter: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/HandlerList.php" , line : 294usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^No handler has been specified$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/HandlerList.php" , line : 332usize , placeholders : & ["$findName"] , exception : Some ("InvalidArgumentException") , regex : "^(.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/KmsMaterialsProvider.php" , line : 40usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not able to detect the materials description\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/KmsMaterialsProvider.php" , line : 50usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Not able to detect kms_cmk_id \\(legacy implementation\\) or aws:x\\-amz\\-cek\\-alg \\(current implementation\\) from kms materials description\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/DecryptionTrait.php" , line : 100usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Cannot decrypt a stream of unknown size\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/DecryptionTrait.php" , line : 116usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Cannot decrypt a stream of unknown size\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/EncryptionTraitV2.php" , line : 69usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^An encryption cipher must be specified in @CipherOptions\\[\"Cipher\"\\]\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/EncryptionTraitV2.php" , line : 76usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The cipher requested is not supported by the SDK\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/EncryptionTraitV2.php" , line : 84usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The cipher \"KeySize\" must be an integer\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/EncryptionTraitV2.php" , line : 91usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The cipher \"KeySize\" requested is not supported by AES \\(128 or 256\\)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/Cipher/Cbc.php" , line : 50usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid initialization vector$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/Cipher/Cbc.php" , line : 79usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^CBC initialization only support being rewound, not arbitrary seeking\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/Cipher/CipherBuilderTrait.php" , line : 68usize , placeholders : & [] , exception : Some ("Aws\\Exception\\CryptoException") , regex : "^Unrecognized or unsupported AESName for reverse lookup\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/AesEncryptingStream.php" , line : 117usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Unrecognized whence\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/Polyfill/ByteArray.php" , line : 51usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Argument must be an integer, string, or array of integers\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/DecryptionTraitV2.php" , line : 107usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Cannot decrypt a stream of unknown size\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/DecryptionTraitV2.php" , line : 123usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Cannot decrypt a stream of unknown size\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/DecryptionTraitV2.php" , line : 157usize , placeholders : & ["$options['@CipherOptions']['Cipher']" , "implode(\", \", $allowedCiphers)"] , exception : Some ("Aws\\Exception\\CryptoException") , regex : "^The requested object is encrypted with the cipher '(.*)', which is not supported for decryption with the selected security profile\\. This profile allows decryption with: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/DecryptionTraitV2.php" , line : 173usize , placeholders : & ["$envelope[MetadataEnvelope::KEY_WRAP_ALGORITHM_HEADER]"] , exception : Some ("Aws\\Exception\\CryptoException") , regex : "^The requested object is encrypted with the keywrap schema '(.*)', which is not supported for decryption with the current security profile\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/DecryptionTraitV2.php" , line : 187usize , placeholders : & ["$matdesc['aws:x-amz-cek-alg']" , "$envelope[MetadataEnvelope::CONTENT_CRYPTO_SCHEME_HEADER]"] , exception : Some ("Aws\\Exception\\CryptoException") , regex : "^There is a mismatch in specified content encryption algrithm between the materials description value and the metadata envelope value: (.*) vs\\. (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/AesDecryptingStream.php" , line : 111usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^AES encryption streams only support being rewound, not arbitrary seeking\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/KmsMaterialsProviderV2.php" , line : 52usize , placeholders : & [] , exception : Some ("Aws\\Exception\\CryptoException") , regex : "^KMS CMK ID was not specified and the operation is not opted\\-in to attempting to use any valid CMK it discovers\\. Please specify a CMK ID, or explicitly enable attempts to use any valid KMS CMK with the @KmsAllowDecryptWithAnyCmk option\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/KmsMaterialsProviderV2.php" , line : 71usize , placeholders : & [] , exception : Some ("Aws\\Exception\\CryptoException") , regex : "^A KMS key id is required for encryption with KMS keywrap\\. Use a KmsMaterialsProviderV2 that has been instantiated with a KMS key id\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/KmsMaterialsProviderV2.php" , line : 79usize , placeholders : & [] , exception : Some ("Aws\\Exception\\CryptoException") , regex : "^'@KmsEncryptionContext' is a required argument when using KmsMaterialsProviderV2, and must be an associative array \\(or empty array\\)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/KmsMaterialsProviderV2.php" , line : 84usize , placeholders : & [] , exception : Some ("Aws\\Exception\\CryptoException") , regex : "^Conflict in reserved @KmsEncryptionContext key aws:x\\-amz\\-cek\\-alg\\. This value is reserved for the S3 Encryption Client and cannot be set by the user\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/MetadataEnvelope.php" , line : 49usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^MetadataEnvelope fields must must match a predefined offset; use the header constants\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/EncryptionTrait.php" , line : 65usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^An encryption cipher must be specified in the \"cipher_options\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/EncryptionTrait.php" , line : 70usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The cipher requested is not supported by the SDK\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/EncryptionTrait.php" , line : 78usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The cipher \"KeySize\" must be an integer\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/EncryptionTrait.php" , line : 85usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The cipher \"KeySize\" requested is not supported by AES \\(128, 192, or 256\\)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Crypto/AesGcmDecryptingStream.php" , line : 96usize , placeholders : & [] , exception : Some ("Aws\\Exception\\CryptoException") , regex : "^The requested object could not be decrypted due to an invalid authentication tag\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/functions.php" , line : 160usize , placeholders : & ["sprintf(\"File not found: %s\", $path)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/functions.php" , line : 192usize , placeholders : & ["$path"] , exception : Some ("InvalidArgumentException") , regex : "^File not found: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/functions.php" , line : 287usize , placeholders : & ["$version"] , exception : Some ("RuntimeException") , regex : "^Unknown Guzzle version: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/functions.php" , line : 308usize , placeholders : & ["$version"] , exception : Some ("RuntimeException") , regex : "^Unknown Guzzle version: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/functions.php" , line : 337usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Unable to determine what Guzzle version is installed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/functions.php" , line : 365usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Calling handler did not serialize request$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/functions.php" , line : 415usize , placeholders : & ["$service"] , exception : Some ("InvalidArgumentException") , regex : "^The service \"(.*)\" is not provided by the AWS SDK for PHP\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Endpoint/EndpointProvider.php" , line : 65usize , placeholders : & ["json_encode($args)"] , exception : Some ("Aws\\Exception\\UnresolvedEndpointException") , regex : "^Unable to resolve an endpoint using the provider arguments: (.*)\\. Note: you can provide an \"endpoint\" option to a client constructor to bypass invoking an endpoint provider\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Endpoint/UseFipsEndpoint/Configuration.php" , line : 16usize , placeholders : & [] , exception : Some ("Aws\\Endpoint\\UseFipsEndpoint\\Exception\\ConfigurationException") , regex : "^'use_fips_endpoint' config option must be a boolean value\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Endpoint/UseDualstackEndpoint/Configuration.php" , line : 15usize , placeholders : & [] , exception : Some ("Aws\\Endpoint\\UseDualstackEndpoint\\Exception\\ConfigurationException") , regex : "^'use_dual_stack_endpoint' config option must be a boolean value\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Endpoint/UseDualstackEndpoint/Configuration.php" , line : 21usize , placeholders : & [] , exception : Some ("Aws\\Endpoint\\UseDualstackEndpoint\\Exception\\ConfigurationException") , regex : "^Dual\\-stack is not supported in ISO regions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Endpoint/Partition.php" , line : 64usize , placeholders : & ["$key"] , exception : Some ("InvalidArgumentException") , regex : "^Partition missing required (.*) field$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/DynamoDb/WriteRequestBatch.php" , line : 70usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^\"batch_size\" must be between 2 and 25\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/DynamoDb/WriteRequestBatch.php" , line : 75usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^\"before\" must be callable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/DynamoDb/WriteRequestBatch.php" , line : 78usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^\"error\" must be callable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/DynamoDb/WriteRequestBatch.php" , line : 261usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^There was no table specified\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/DynamoDb/Marshaler.php" , line : 99usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The JSON document must be valid and be an object at its root\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/DynamoDb/Marshaler.php" , line : 298usize , placeholders : & ["$type"] , exception : Some ("UnexpectedValueException") , regex : "^Unexpected type: (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/DynamoDb/Marshaler.php" , line : 318usize , placeholders : & ["$message"] , exception : Some ("UnexpectedValueException") , regex : "^Marshaling error: (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Waiter.php" , line : 77usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The provided waiter configuration was incomplete\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Waiter.php" , line : 83usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The provided \"before\" callback is not callable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/ClientSideMonitoring/Configuration.php" , line : 24usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^CSM 'port' value must be an integer!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/ClientSideMonitoring/ApiCallAttemptMonitoringMiddleware.php" , line : 122usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Parameter must be an instance of ResultInterface, AwsException or Exception\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/ClientSideMonitoring/ConfigurationProvider.php" , line : 233usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Not a valid CSM configuration argument\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/ClientSideMonitoring/ApiCallMonitoringMiddleware.php" , line : 85usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Parameter must be an instance of ResultInterface or Exception\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/EndpointDiscovery/EndpointDiscoveryMiddleware.php" , line : 73usize , placeholders : & [] , exception : Some ("Aws\\Exception\\UnresolvedEndpointException") , regex : "^This operation requires the use of endpoint discovery, but this has been disabled in the configuration\\. Enable endpoint discovery or use a different operation\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/EndpointDiscovery/EndpointDiscoveryMiddleware.php" , line : 82usize , placeholders : & [] , exception : Some ("Aws\\Exception\\UnresolvedEndpointException") , regex : "^This operation is contradictorily marked both as using endpoint discovery and being the endpoint discovery operation\\. Please verify the accuracy of your model files\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/EndpointDiscovery/EndpointDiscoveryMiddleware.php" , line : 194usize , placeholders : & [] , exception : Some ("Aws\\Exception\\UnresolvedEndpointException") , regex : "^The endpoint discovery operation yielded a response that did not contain properly formatted endpoint data\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/EndpointDiscovery/EndpointDiscoveryMiddleware.php" , line : 227usize , placeholders : & [] , exception : Some ("Aws\\Exception\\UnresolvedEndpointException") , regex : "^This command is set to use endpoint discovery, but no endpoint discovery operation was found\\. Please verify the accuracy of your model files\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/EndpointDiscovery/EndpointDiscoveryMiddleware.php" , line : 281usize , placeholders : & ["$message"] , exception : Some ("Aws\\Exception\\AwsException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/EndpointDiscovery/EndpointDiscoveryMiddleware.php" , line : 406usize , placeholders : & ["$endpoint"] , exception : Some ("Aws\\Exception\\UnresolvedEndpointException") , regex : "^The supplied endpoint '(.*)' is invalid\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/EndpointDiscovery/Configuration.php" , line : 13usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^'cache_limit' value must be a positive integer\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/EndpointDiscovery/ConfigurationProvider.php" , line : 237usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Not a valid endpoint_discovery configuration argument\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Glacier/TreeHash.php" , line : 40usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^You may not add more data to a complete tree hash\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Glacier/TreeHash.php" , line : 70usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^You may not add more checksums to a complete tree hash\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Glacier/GlacierClient.php" , line : 142usize , placeholders : & [] , exception : Some ("Aws\\Exception\\CouldNotCreateChecksumException") , regex : "^sha256$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Glacier/MultipartUploader.php" , line : 150usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The part_size must be a power of 2, in megabytes, such that 1 MB <= PART_SIZE <= 4 GB\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Sdk.php" , line : 678usize , placeholders : & ["$name"] , exception : Some ("BadMethodCallException") , regex : "^Unknown method: (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/StreamRequestPayloadMiddleware.php" , line : 71usize , placeholders : & [] , exception : Some ("Aws\\Exception\\IncalculablePayloadException") , regex : "^Payload content length is required and can not be calculated\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3Control/EndpointArnMiddleware.php" , line : 191usize , placeholders : & ["$cmd['AccountId']" , "$arn->getAccountId()"] , exception : Some ("InvalidArgumentException") , regex : "^The account ID supplied in the command \\((.*)\\) does not match the account ID supplied in the ARN \\((.*)\\)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3Control/EndpointArnMiddleware.php" , line : 275usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^Provided ARN was not a valid S3 bucket ARN\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3Control/EndpointArnMiddleware.php" , line : 285usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^Provided ARN was not a valid S3 access point ARN\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3Control/EndpointArnMiddleware.php" , line : 302usize , placeholders : & [] , exception : Some ("Aws\\Exception\\UnresolvedEndpointException") , regex : "^Dualstack is currently not supported with S3 Outposts ARNs\\. Please disable dualstack or do not supply an Outposts ARN\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3Control/EndpointArnMiddleware.php" , line : 326usize , placeholders : & [] , exception : Some ("Aws\\Exception\\InvalidRegionException") , regex : "^The supplied ARN partition does not match the client's partition\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3Control/EndpointArnMiddleware.php" , line : 330usize , placeholders : & [] , exception : Some ("Aws\\Exception\\InvalidRegionException") , regex : "^The corresponding partition for the supplied ARN region does not match the client's partition\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Sts/RegionalEndpoints/ConfigurationProvider.php" , line : 199usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Not a valid STS regional endpoints configuration argument\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Sts/RegionalEndpoints/Configuration.php" , line : 12usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Configuration parameter must either be 'legacy' or 'regional'\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Sts/StsClient.php" , line : 74usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Result contains no credentials$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/CloudFront/CookieSigner.php" , line : 62usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid or missing URI scheme$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/CloudFront/CloudFrontClient.php" , line : 238usize , placeholders : & ["$required"] , exception : Some ("InvalidArgumentException") , regex : "^(.*) is required$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/CloudFront/CloudFrontClient.php" , line : 281usize , placeholders : & ["$required"] , exception : Some ("InvalidArgumentException") , regex : "^(.*) is required$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/CloudFront/Signer.php" , line : 27usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^The openssl extension is required to sign CloudFront urls\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/CloudFront/Signer.php" , line : 36usize , placeholders : & ["$privateKey"] , exception : Some ("InvalidArgumentException") , regex : "^PK file not found: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/CloudFront/Signer.php" , line : 45usize , placeholders : & ["implode(\"\\n\",$errorMessages)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/CloudFront/Signer.php" , line : 89usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Either a policy or a resource and an expiration time must be provided\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/CloudFront/UrlSigner.php" , line : 54usize , placeholders : & ["$url"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid URL: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/CloudFront/UrlSigner.php" , line : 116usize , placeholders : & ["$scheme"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid URI scheme: (.*)\\. Scheme must be one of: http, https, or rtmp$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Rds/AuthTokenGenerator.php" , line : 49usize , placeholders : & ["$lifetime"] , exception : Some ("InvalidArgumentException") , regex : "^Lifetime must be a positive number less than or equal to 15, was (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/AbstractConfigurationProvider.php" , line : 67usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^No providers in chain$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Script/Composer/Composer.php" , line : 33usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^There are no services listed\\. Did you intend to use this script\\?$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Script/Composer/Composer.php" , line : 55usize , placeholders : & ["$serviceToKeep"] , exception : Some ("InvalidArgumentException") , regex : "^'(.*)' is not a valid AWS service namespace\\. Please check spelling and casing\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/EcsCredentialProvider.php" , line : 79usize , placeholders : & ["$msg"] , exception : Some ("Aws\\Exception\\CredentialsException") , regex : "^Error retrieving credential from ECS \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/EcsCredentialProvider.php" , line : 130usize , placeholders : & [] , exception : Some ("Aws\\Exception\\CredentialsException") , regex : "^Unexpected ECS credential value$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/InstanceProfileProvider.php" , line : 217usize , placeholders : & ["$this->createErrorMessage('EC2 metadata service access disabled')"] , exception : Some ("Aws\\Exception\\CredentialsException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/InstanceProfileProvider.php" , line : 243usize , placeholders : & ["$this->createErrorMessage($msg)"] , exception : Some ("Aws\\Exception\\CredentialsException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/InstanceProfileProvider.php" , line : 264usize , placeholders : & ["$message"] , exception : Some ("Aws\\Exception\\CredentialsException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/InstanceProfileProvider.php" , line : 289usize , placeholders : & [] , exception : Some ("Aws\\Exception\\InvalidJsonException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/InstanceProfileProvider.php" , line : 293usize , placeholders : & ["$result['Code']"] , exception : Some ("Aws\\Exception\\CredentialsException") , regex : "^Unexpected instance profile response code: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/AssumeRoleCredentialProvider.php" , line : 34usize , placeholders : & ["self::ERROR_MSG"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)'assume_role_params'\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/AssumeRoleCredentialProvider.php" , line : 38usize , placeholders : & ["self::ERROR_MSG"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)'client'\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/AssumeRoleCredentialProvider.php" , line : 57usize , placeholders : & [] , exception : Some ("Aws\\Exception\\CredentialsException") , regex : "^Error in retrieving assume role credentials\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/AssumeRoleWithWebIdentityCredentialProvider.php" , line : 53usize , placeholders : & ["self::ERROR_MSG"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)'RoleArn'\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/AssumeRoleWithWebIdentityCredentialProvider.php" , line : 58usize , placeholders : & ["self::ERROR_MSG"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)'WebIdentityTokenFile'\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/AssumeRoleWithWebIdentityCredentialProvider.php" , line : 63usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^'WebIdentityTokenFile' must be an absolute path\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/AssumeRoleWithWebIdentityCredentialProvider.php" , line : 107usize , placeholders : & ["$this->tokenFile"] , exception : Some ("Aws\\Exception\\CredentialsException") , regex : "^Unreadable tokenfile at location (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/AssumeRoleWithWebIdentityCredentialProvider.php" , line : 120usize , placeholders : & ["$this->tokenFile"] , exception : Some ("Aws\\Exception\\CredentialsException") , regex : "^InvalidIdentityToken from file: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/AssumeRoleWithWebIdentityCredentialProvider.php" , line : 123usize , placeholders : & ["$this->tokenFile"] , exception : Some ("Aws\\Exception\\CredentialsException") , regex : "^Error reading WebIdentityTokenFile from (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/AssumeRoleWithWebIdentityCredentialProvider.php" , line : 143usize , placeholders : & [] , exception : Some ("Aws\\Exception\\CredentialsException") , regex : "^InvalidIdentityToken, retries exhausted$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/AssumeRoleWithWebIdentityCredentialProvider.php" , line : 148usize , placeholders : & [] , exception : Some ("Aws\\Exception\\CredentialsException") , regex : "^Error assuming role from web identity credentials$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/AssumeRoleWithWebIdentityCredentialProvider.php" , line : 155usize , placeholders : & ["$e->getMessage()" , "$e->getCode()"] , exception : Some ("Aws\\Exception\\CredentialsException") , regex : "^Error retrieving web identity credentials: (.*) \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/CredentialProvider.php" , line : 169usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^No providers in chain$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Credentials/CredentialProvider.php" , line : 851usize , placeholders : & ["$credentialSource"] , exception : Some ("Aws\\Exception\\CredentialsException") , regex : "^Invalid credential_source found in config file: (.*)\\. Valid inputs include Environment, Ec2InstanceMetadata, and EcsContainer\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/ListShape.php" , line : 25usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^No member attribute specified$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Serializer/RestSerializer.php" , line : 140usize , placeholders : & ["json_last_error_msg()"] , exception : Some ("InvalidArgumentException") , regex : "^Unable to encode the provided value with 'json_encode'\\. (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Serializer/JsonBody.php" , line : 37usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^invalid json$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/DocModel.php" , line : 22usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^The \"tidy\" PHP extension is required\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/MapShape.php" , line : 29usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^No value specified$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Validator.php" , line : 65usize , placeholders : & ["$message"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Shape.php" , line : 41usize , placeholders : & ["print_r($definition, true)"] , exception : Some ("RuntimeException") , regex : "^Invalid type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Parser/DecodingEventStreamIterator.php" , line : 97usize , placeholders : & [] , exception : Some ("Aws\\Api\\Parser\\Exception\\ParserException") , regex : "^Duplicate key in event headers\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Parser/DecodingEventStreamIterator.php" , line : 124usize , placeholders : & [] , exception : Some ("Aws\\Api\\Parser\\Exception\\ParserException") , regex : "^Prelude checksum mismatch\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Parser/DecodingEventStreamIterator.php" , line : 140usize , placeholders : & [] , exception : Some ("Aws\\Api\\Parser\\Exception\\ParserException") , regex : "^Message length too long\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Parser/DecodingEventStreamIterator.php" , line : 145usize , placeholders : & [] , exception : Some ("Aws\\Api\\Parser\\Exception\\ParserException") , regex : "^Headers length too long\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Parser/DecodingEventStreamIterator.php" , line : 163usize , placeholders : & [] , exception : Some ("Aws\\Api\\Parser\\Exception\\ParserException") , regex : "^Message checksum mismatch\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Parser/DecodingEventStreamIterator.php" , line : 302usize , placeholders : & [] , exception : Some ("Aws\\Api\\Parser\\Exception\\ParserException") , regex : "^Undefined variable length format\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Parser/DecodingEventStreamIterator.php" , line : 312usize , placeholders : & [] , exception : Some ("Aws\\Api\\Parser\\Exception\\ParserException") , regex : "^Undefined variable length format\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Parser/EventParsingIterator.php" , line : 73usize , placeholders : & [] , exception : Some ("Aws\\Api\\Parser\\Exception\\ParserException") , regex : "^Failed to parse unknown message type\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Parser/EventParsingIterator.php" , line : 78usize , placeholders : & [] , exception : Some ("Aws\\Api\\Parser\\Exception\\ParserException") , regex : "^Failed to parse without event type\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Parser/EventParsingIterator.php" , line : 107usize , placeholders : & ["$event['headers'][':error-code']"] , exception : Some ("Aws\\Exception\\EventStreamDataException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Parser/XmlParser.php" , line : 160usize , placeholders : & [] , exception : Some ("Aws\\Api\\Parser\\Exception\\ParserException") , regex : "^Invalid timestamp value passed to XmlParser::parse_timestamp$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Parser/PayloadParserTrait.php" , line : 21usize , placeholders : & ["json_last_error_msg()"] , exception : Some ("Aws\\Api\\Parser\\Exception\\ParserException") , regex : "^Error parsing JSON: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Parser/PayloadParserTrait.php" , line : 46usize , placeholders : & ["$error->message"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Parser/PayloadParserTrait.php" , line : 49usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Aws\\Api\\Parser\\Exception\\ParserException") , regex : "^Error parsing XML: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Parser/Crc32ValidatingParser.php" , line : 31usize , placeholders : & ["$expected" , "$hash"] , exception : Some ("Aws\\Exception\\AwsException") , regex : "^crc32 mismatch\\. Expected (.*), found (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/StructureShape.php" , line : 64usize , placeholders : & ["$name"] , exception : Some ("InvalidArgumentException") , regex : "^Unknown member (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/ShapeMap.php" , line : 46usize , placeholders : & ["$shape"] , exception : Some ("InvalidArgumentException") , regex : "^Shape not found: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/AbstractModel.php" , line : 70usize , placeholders : & ["$key"] , exception : Some ("InvalidArgumentException") , regex : "^Expected shape definition at (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/ApiProvider.php" , line : 85usize , placeholders : & ["$msg"] , exception : Some ("Aws\\Exception\\UnresolvedApiException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/ApiProvider.php" , line : 213usize , placeholders : & ["$modelsDir"] , exception : Some ("InvalidArgumentException") , regex : "^The specified models directory, (.*), was not found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/TimestampShape.php" , line : 32usize , placeholders : & ["gettype($value)"] , exception : Some ("InvalidArgumentException") , regex : "^Unable to handle the provided timestamp type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/TimestampShape.php" , line : 44usize , placeholders : & ["$format"] , exception : Some ("UnexpectedValueException") , regex : "^Unknown timestamp format: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Service.php" , line : 97usize , placeholders : & ["$api->getProtocol()"] , exception : Some ("UnexpectedValueException") , regex : "^Unknown protocol: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Service.php" , line : 126usize , placeholders : & ["$protocol"] , exception : Some ("UnexpectedValueException") , regex : "^Unknown protocol: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Service.php" , line : 154usize , placeholders : & ["$api->getProtocol()"] , exception : Some ("UnexpectedValueException") , regex : "^Unknown protocol: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Service.php" , line : 276usize , placeholders : & ["$name"] , exception : Some ("InvalidArgumentException") , regex : "^Unknown operation: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Service.php" , line : 400usize , placeholders : & ["$name" , "$this->serviceName"] , exception : Some ("UnexpectedValueException") , regex : "^There is no (.*) paginator defined for the (.*) service\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/Service.php" , line : 455usize , placeholders : & ["$name" , "$this->serviceName"] , exception : Some ("UnexpectedValueException") , regex : "^There is no (.*) waiter defined for the (.*) service\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/DateTimeResult.php" , line : 28usize , placeholders : & [] , exception : Some ("Aws\\Api\\Parser\\Exception\\ParserException") , regex : "^Invalid timestamp value passed to DateTimeResult::fromEpoch$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/DateTimeResult.php" , line : 45usize , placeholders : & [] , exception : Some ("Aws\\Api\\Parser\\Exception\\ParserException") , regex : "^Invalid timestamp value passed to DateTimeResult::fromEpoch$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/DateTimeResult.php" , line : 60usize , placeholders : & [] , exception : Some ("Aws\\Api\\Parser\\Exception\\ParserException") , regex : "^Invalid timestamp value passed to DateTimeResult::fromISO8601$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/DateTimeResult.php" , line : 79usize , placeholders : & [] , exception : Some ("Aws\\Api\\Parser\\Exception\\ParserException") , regex : "^Invalid timestamp value passed to DateTimeResult::fromTimestamp$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Api/DateTimeResult.php" , line : 100usize , placeholders : & [] , exception : Some ("Aws\\Api\\Parser\\Exception\\ParserException") , regex : "^Invalid timestamp value passed to DateTimeResult::fromTimestamp$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/S3MultiRegionClient.php" , line : 309usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The S3\\\\MultiRegionClient cannot create presigned requests for commands without a specified bucket\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/ObjectCopier.php" , line : 140usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Locations provided to an Aws\\\\S3\\\\ObjectCopier must have a non\\-empty Bucket and Key$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/ObjectCopier.php" , line : 151usize , placeholders : & ["$e->getMessage()"] , exception : Some ("InvalidArgumentException") , regex : "^Provided ARN was a not a valid S3 access point ARN \\((.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/BucketEndpointArnMiddleware.php" , line : 89usize , placeholders : & ["$cmd->getName()"] , exception : Some ("Aws\\S3\\Exception\\S3Exception") , regex : "^ARN values cannot be used in the bucket field for the (.*) operation\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/BucketEndpointArnMiddleware.php" , line : 142usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Aws\\S3\\Exception\\S3Exception") , regex : "^Bucket parameter parsed as ARN and failed with: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/BucketEndpointArnMiddleware.php" , line : 221usize , placeholders : & [] , exception : Some ("Aws\\Exception\\UnresolvedEndpointException") , regex : "^Dualstack is currently not supported with S3 Outposts access points\\. Please disable dualstack or do not supply an access point ARN\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/BucketEndpointArnMiddleware.php" , line : 228usize , placeholders : & [] , exception : Some ("Aws\\Exception\\UnresolvedEndpointException") , regex : "^Multi\\-Region Access Point ARNs are disabled, but one was provided\\.  Please enable them or provide a different ARN\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/BucketEndpointArnMiddleware.php" , line : 234usize , placeholders : & [] , exception : Some ("Aws\\Exception\\UnresolvedEndpointException") , regex : "^Multi\\-Region Access Point ARNs do not currently support dual stack\\. Please disable dual stack or provide a different ARN\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/BucketEndpointArnMiddleware.php" , line : 242usize , placeholders : & [] , exception : Some ("Aws\\Exception\\UnresolvedEndpointException") , regex : "^Accelerate is currently not supported with access points\\. Please disable accelerate or do not supply an access point ARN\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/BucketEndpointArnMiddleware.php" , line : 250usize , placeholders : & [] , exception : Some ("Aws\\Exception\\UnresolvedEndpointException") , regex : "^Path\\-style addressing is currently not supported with access points\\. Please disable path\\-style or do not supply an access point ARN\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/BucketEndpointArnMiddleware.php" , line : 260usize , placeholders : & [] , exception : Some ("Aws\\Exception\\UnresolvedEndpointException") , regex : "^A custom endpoint has been supplied along with an access point ARN, and these are not compatible with each other\\. Please only use one or the other\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/BucketEndpointArnMiddleware.php" , line : 270usize , placeholders : & [] , exception : Some ("Aws\\Exception\\UnresolvedEndpointException") , regex : "^Dualstack is currently not supported with Object Lambda access points\\. Please disable dualstack or do not supply an access point ARN\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/BucketEndpointArnMiddleware.php" , line : 281usize , placeholders : & [] , exception : Some ("Aws\\Exception\\UnresolvedEndpointException") , regex : "^Global endpoints do not support cross region requests\\. Please enable use_arn_region or do not supply a global region with a different region in the ARN\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/BucketEndpointArnMiddleware.php" , line : 307usize , placeholders : & [] , exception : Some ("Aws\\Exception\\InvalidRegionException") , regex : "^The supplied ARN partition does not match the client's partition\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/BucketEndpointArnMiddleware.php" , line : 311usize , placeholders : & [] , exception : Some ("Aws\\Exception\\InvalidRegionException") , regex : "^The corresponding partition for the supplied ARN region does not match the client's partition\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/BucketEndpointArnMiddleware.php" , line : 327usize , placeholders : & [] , exception : Some ("Aws\\Arn\\Exception\\InvalidArnException") , regex : "^Provided ARN was not a valid S3 access point ARN or S3 Outposts access point ARN\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/ValidateResponseChecksumParser.php" , line : 83usize , placeholders : & [] , exception : Some ("Aws\\S3\\Exception\\S3Exception") , regex : "^Calculated response checksum did not match the expected value$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/UseArnRegion/Configuration.php" , line : 15usize , placeholders : & [] , exception : Some ("Aws\\S3\\UseArnRegion\\Exception\\ConfigurationException") , regex : "^'use_arn_region' config option must be a boolean value\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/PermanentRedirectMiddleware.php" , line : 49usize , placeholders : & ["$result->search('\"@metadata\".effectiveUri')"] , exception : Some ("Aws\\S3\\Exception\\PermanentRedirectException") , regex : "^Encountered a permanent redirect while requesting (.*)\\. Are you sure you are using the correct region for this bucket\\?$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/Crypto/S3EncryptionClientV2.php" , line : 334usize , placeholders : & [] , exception : Some ("Aws\\Exception\\CryptoException") , regex : "^@SecurityProfile is required and must be set to 'V2' or 'V2_AND_LEGACY'$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/Crypto/CryptoParamsTrait.php" , line : 16usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^An instance of MaterialsProvider must be passed in the \"MaterialsProvider\" field\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/Crypto/CryptoParamsTrait.php" , line : 58usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Could not match the specified string in \"MetadataStrategy\" to a predefined strategy\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/Crypto/CryptoParamsTrait.php" , line : 63usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The metadata strategy that was passed to \"MetadataStrategy\" was unrecognized\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/Crypto/CryptoParamsTraitV2.php" , line : 16usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^An instance of MaterialsProviderInterfaceV2 must be passed in the \"MaterialsProvider\" field\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/CalculatesChecksumTrait.php" , line : 30usize , placeholders : & ["$requestedAlgorithm"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid checksum requested: (.*)\\.  Valid algorithms are CRC32C, CRC32, SHA256, and SHA1\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/CalculatesChecksumTrait.php" , line : 37usize , placeholders : & [] , exception : Some ("Aws\\Exception\\CommonRuntimeException") , regex : "^crc32c is not supported for checksums without use of the common runtime for php\\.  Please enable the CRT or choose a different algorithm\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/MultipartUploadingTrait.php" , line : 89usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The part size must be no less than 5 MB and no greater than 5 GB\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/EndpointRegionHelperTrait.php" , line : 80usize , placeholders : & [] , exception : Some ("Aws\\Exception\\InvalidRegionException") , regex : "^Fips is currently not supported with S3 Outposts access points\\. Please provide a non\\-fips region or do not supply an access point ARN\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/EndpointRegionHelperTrait.php" , line : 99usize , placeholders : & ["$arn->getRegion()" , "$this->region"] , exception : Some ("Aws\\Exception\\InvalidRegionException") , regex : "^The region specified in the ARN \\((.*)\\) does not match the client region \\((.*)\\)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/StreamWrapper.php" , line : 321usize , placeholders : & ["$path"] , exception : Some ("Exception") , regex : "^File or directory not found: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/StreamWrapper.php" , line : 673usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^No client in stream context$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/BatchDelete.php" , line : 157usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^before must be callable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/BatchDelete.php" , line : 164usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^batch_size is not > 0$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/BatchDelete.php" , line : 203usize , placeholders : & ["$result['Deleted'] ?: []"] , exception : Some ("Aws\\S3\\Exception\\DeleteMultipleObjectsException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/S3EndpointMiddleware.php" , line : 305usize , placeholders : & [] , exception : Some ("GuzzleHttp\\Exception\\InvalidArgumentException") , regex : "^Outposts \\+ dualstack is not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/S3EndpointMiddleware.php" , line : 312usize , placeholders : & [] , exception : Some ("GuzzleHttp\\Exception\\InvalidArgumentException") , regex : "^Custom Endpoint \\+ Dualstack not supported$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/ApplyChecksumMiddleware.php" , line : 83usize , placeholders : & ["$checksumMemberName" , "implode(\", \", $supportedAlgorithms)"] , exception : Some ("InvalidArgumentException") , regex : "^Unsupported algorithm supplied for input variable (.*)\\.  Supported checksums for this operation include: (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/S3UriParser.php" , line : 62usize , placeholders : & ["$uri"] , exception : Some ("InvalidArgumentException") , regex : "^No hostname found in URI: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/RegionalEndpoint/Configuration.php" , line : 12usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Configuration parameter must either be 'legacy' or 'regional'\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/RegionalEndpoint/ConfigurationProvider.php" , line : 192usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Not a valid S3 regional endpoint configuration argument\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/SSECMiddleware.php" , line : 44usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^You must configure your S3 client to use HTTPS in order to use the SSE\\-C features\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/Transfer.php" , line : 90usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^You must provide the source argument as a string or provide the \"base_dir\" option\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/Transfer.php" , line : 97usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^source must be the path to a directory or an iterator that yields file names\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/Transfer.php" , line : 103usize , placeholders : & ["$this->sourceMetadata['scheme']" , "$this->destination['scheme']"] , exception : Some ("InvalidArgumentException") , regex : "^You cannot copy from (.*) to (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/Transfer.php" , line : 117usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^mup_threshold must be >= 5MB$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/Transfer.php" , line : 124usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^before must be a callable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/Transfer.php" , line : 173usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Scheme must be \"s3\" or \"file\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/Transfer.php" , line : 263usize , placeholders : & ["$objectKey"] , exception : Some ("Aws\\Exception\\AwsException") , regex : "^Cannot download key (.*), its relative path resolves outside the parent directory$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/Transfer.php" , line : 272usize , placeholders : & ["$dir"] , exception : Some ("RuntimeException") , regex : "^Could not create dir: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/S3/Transfer.php" , line : 416usize , placeholders : & ["$operation"] , exception : Some ("UnexpectedValueException") , regex : "^Transfer encountered an unexpected operation: (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/AwsClientTrait.php" , line : 24usize , placeholders : & ["sprintf(\n                'There are no resources to iterate for the %s operation of %s',\n                $name, $this->getApi()['serviceFullName']\n            )"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/MockHandler.php" , line : 57usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Expected an Aws\\\\ResultInterface or Exception\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/MockHandler.php" , line : 71usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Expected an \\\\Exception or \\\\Throwable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/MockHandler.php" , line : 84usize , placeholders : & ["$command->getName()" , "$last"] , exception : Some ("RuntimeException") , regex : "^Mock queue is empty\\. Trying to send a (.*) command failed\\.(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/History.php" , line : 48usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^No commands received$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/History.php" , line : 63usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^No requests received$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/History.php" , line : 78usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^No entries$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/History.php" , line : 91usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^No return value for last entry\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/History.php" , line : 124usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid history ticket$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/History.php" , line : 130usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^History entry is already finished$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/EndpointParameterMiddleware.php" , line : 62usize , placeholders : & ["$parameter"] , exception : Some ("InvalidArgumentException") , regex : "^The parameter '(.*)' must be set and not empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/EndpointParameterMiddleware.php" , line : 80usize , placeholders : & ["$host"] , exception : Some ("InvalidArgumentException") , regex : "^The supplied parameters result in an invalid hostname: '(.*)'\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Multipart/AbstractUploadManager.php" , line : 100usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^This multipart upload has already been completed or aborted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Multipart/AbstractUploadManager.php" , line : 237usize , placeholders : & ["$key" , "$this->client->getApi()->getServiceFullName()"] , exception : Some ("InvalidArgumentException") , regex : "^You must provide a value for \"(.*)\" in your config for the MultipartUploader for (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Multipart/AbstractUploader.php" , line : 137usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Source stream must be readable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/DefaultsMode/ConfigurationProvider.php" , line : 198usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Not a valid defaults mode configuration argument\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/DefaultsMode/Configuration.php" , line : 27usize , placeholders : & ["$mode"] , exception : Some ("InvalidArgumentException") , regex : "^'(.*)' is not a valid mode\\. The mode has to be 'legacy', 'standard', 'cross\\-region', 'in\\-region', 'mobile', or 'auto'\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Retry/Configuration.php" , line : 20usize , placeholders : & ["$mode"] , exception : Some ("Aws\\Retry\\Exception\\ConfigurationException") , regex : "^'(.*)' is not a valid mode\\. The mode has to be 'legacy', 'standard', or 'adaptive'\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Retry/Configuration.php" , line : 27usize , placeholders : & [] , exception : Some ("Aws\\Retry\\Exception\\ConfigurationException") , regex : "^The 'maxAttempts' parameter has to be an integer >= 1\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Retry/ConfigurationProvider.php" , line : 219usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Not a valid retry configuration argument\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/CloudTrail/LogFileIterator.php" , line : 83usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The bucket name could not be determined from the trail\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/CloudTrail/LogFileIterator.php" , line : 225usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Date values must be a string, an int, or a DateTime object\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/MultiRegionClient.php" , line : 77usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^No valid partition was provided\\. Provide a concrete partition or the name of a partition \\(e\\.g\\., \"aws,\" \"aws\\-cn,\" or \"aws\\-us\\-gov\"\\)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Signature/SignatureV4.php" , line : 217usize , placeholders : & ["$request->getMethod()"] , exception : Some ("InvalidArgumentException") , regex : "^Expected a POST request but received a (.*) request\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Signature/SignatureV4.php" , line : 247usize , placeholders : & [] , exception : Some ("Aws\\Exception\\CouldNotCreateChecksumException") , regex : "^sha256$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Signature/SignatureV4.php" , line : 253usize , placeholders : & [] , exception : Some ("Aws\\Exception\\CouldNotCreateChecksumException") , regex : "^sha256$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Signature/SignatureV4.php" , line : 377usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The expiration date of a signature version 4 presigned URL must be less than one week$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Signature/SignatureV4.php" , line : 451usize , placeholders : & [] , exception : Some ("Aws\\Exception\\CommonRuntimeException") , regex : "^AWS Common Runtime for PHP is required to use Signature V4A\\.  Please install it using the instructions found at https://github\\.com/aws/aws\\-sdk\\-php/blob/master/CRT_INSTRUCTIONS\\.md$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-sdk-php/src/Signature/SignatureProvider.php" , line : 67usize , placeholders : & ["$version" , "$service" , "$region"] , exception : Some ("Aws\\Exception\\UnresolvedSignatureException") , regex : "^Unable to resolve a signature for (.*)/(.*)/(.*)\\.\nValid signature versions include v4 and anonymous\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 44usize , placeholders : & ["$stubFile"] , exception : Some ("Exception") , regex : "^File (.*) does not exist$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 132usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Unexpected node type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 202usize , placeholders : & ["$this->name"] , exception : Some ("Exception") , regex : "^Not implemented: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 232usize , placeholders : & ["$this->name"] , exception : Some ("Exception") , regex : "^Not implemented: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 420usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid sendBy value$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 432usize , placeholders : & [] , exception : Some ("Exception") , regex : "^A parameter must have a type$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 492usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Namespaced name not supported here$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 759usize , placeholders : & [] , exception : Some ("Error") , regex : "^Cannot happen$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 809usize , placeholders : & [] , exception : Some ("Error") , regex : "^Cannot happen$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1022usize , placeholders : & ["$this->name"] , exception : Some ("Exception") , regex : "^@(.*) does not have a value$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1040usize , placeholders : & ["$this->name" , "$value"] , exception : Some ("Exception") , regex : "^@(.*) doesn't contain a type or has an invalid format \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1049usize , placeholders : & ["$this->name"] , exception : Some ("Exception") , regex : "^@(.*) doesn't have any value$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1061usize , placeholders : & ["$this->name" , "$value"] , exception : Some ("Exception") , regex : "^@(.*) doesn't contain a variable name or has an invalid format \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1138usize , placeholders : & ["$varName" , "$name"] , exception : Some ("Exception") , regex : "^Duplicate parameter name (.*) for function (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1151usize , placeholders : & ["$name"] , exception : Some ("Exception") , regex : "^Error in function (.*): only the last parameter can be variadic$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1156usize , placeholders : & ["$name"] , exception : Some ("Exception") , regex : "^Missing parameter type for function (.*)\\(\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1165usize , placeholders : & ["$varName" , "$name"] , exception : Some ("Exception") , regex : "^Parameter (.*) of function (.*) has null default, but is not nullable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1186usize , placeholders : & ["$var" , "$name"] , exception : Some ("Exception") , regex : "^Found metadata for invalid param (.*) of function (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1191usize , placeholders : & ["$name"] , exception : Some ("Exception") , regex : "^Missing return type for function (.*)\\(\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1226usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Encountered else without corresponding \\#if$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1232usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Encountered \\#endif without corresponding \\#if$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1236usize , placeholders : & ["$text"] , exception : Some ("Exception") , regex : "^Unrecognized preprocessor directive \"(.*)\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1295usize , placeholders : & ["$classStmt->getType()"] , exception : Some ("Exception") , regex : "^Not implemented (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1309usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Method visibility modifier is required$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1326usize , placeholders : & ["$stmt->getType()"] , exception : Some ("Exception") , regex : "^Unexpected node (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1766usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Failed to acquire installation lock$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1784usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Failed to download PHP\\-Parser tarball$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1787usize , placeholders : & ["$phpParserDir"] , exception : Some ("Exception") , regex : "^Failed to create directory (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1791usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Failed to extract PHP\\-Parser tarball$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/gen_stub.php" , line : 1808usize , placeholders : & [] , exception : Some ("Exception") , regex : "^The \"tokenizer\" extension is not available$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/src/AWS/CRT/Auth/AwsCredentials.php" , line : 50usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^access_key_id must be provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/src/AWS/CRT/Auth/AwsCredentials.php" , line : 53usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^secret_access_key must be provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/src/AWS/CRT/CRT.php" , line : 28usize , placeholders : & ["$rex"] , exception : Some ("RuntimeException") , regex : "^Unable to initialize AWS CRT via awscrt extension: \n(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/aws/aws-crt-php/src/AWS/CRT/Internal/Extension.php" , line : 17usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^awscrt extension is not loaded$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mtdowling/jmespath.php/src/Utils.php" , line : 65usize , placeholders : & ["get_class($arg)"] , exception : Some ("InvalidArgumentException") , regex : "^Unable to determine JMESPath type from (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mtdowling/jmespath.php/src/Utils.php" , line : 196usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Expects string or array$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mtdowling/jmespath.php/src/Utils.php" , line : 221usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^step cannot be 0$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mtdowling/jmespath.php/src/Parser.php" , line : 517usize , placeholders : & ["$method"] , exception : Some ("BadMethodCallException") , regex : "^Call to undefined method (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mtdowling/jmespath.php/src/CompilerRuntime.php" , line : 33usize , placeholders : & ["$dir"] , exception : Some ("RuntimeException") , regex : "^Unable to create cache directory: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mtdowling/jmespath.php/src/CompilerRuntime.php" , line : 76usize , placeholders : & ["sprintf(\n                'Unable to write the compiled PHP code to: %s (%s)',\n                $filename,\n                var_export(error_get_last(), true)\n            )"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mtdowling/jmespath.php/src/TreeInterpreter.php" , line : 214usize , placeholders : & ["$node['type']"] , exception : Some ("RuntimeException") , regex : "^Unknown node type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mtdowling/jmespath.php/src/TreeInterpreter.php" , line : 232usize , placeholders : & ["$cmp"] , exception : Some ("RuntimeException") , regex : "^Invalid comparison: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mtdowling/jmespath.php/src/FnDispatcher.php" , line : 87usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^not_null\\(\\) expects 1 or more arguments, 0 were provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mtdowling/jmespath.php/src/FnDispatcher.php" , line : 167usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Cannot reverse provided argument$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mtdowling/jmespath.php/src/FnDispatcher.php" , line : 258usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^merge\\(\\) expects 1 or more arguments, 0 were provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mtdowling/jmespath.php/src/FnDispatcher.php" , line : 287usize , placeholders : & ["sprintf('Argument %d of %s %s', $pos, $fn, $msg)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mtdowling/jmespath.php/src/FnDispatcher.php" , line : 291usize , placeholders : & ["sprintf('Type error: %s %s', $from, $msg)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mtdowling/jmespath.php/src/FnDispatcher.php" , line : 301usize , placeholders : & ["sprintf($err, $from)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mtdowling/jmespath.php/src/FnDispatcher.php" , line : 405usize , placeholders : & ["$name"] , exception : Some ("RuntimeException") , regex : "^Call to undefined function (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/mtdowling/jmespath.php/src/TreeCompiler.php" , line : 415usize , placeholders : & ["sprintf('Invalid node encountered: %s', json_encode($args[0]))"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/event-dispatcher/DependencyInjection/RegisterListenersPass.php" , line : 120usize , placeholders : & ["sprintf('None of the \"%s\" or \"__invoke\" methods exist for the service \"%s\". Please define the \"method\" attribute on \"%s\" tags.', $event['method'], $id, $this->listenerTag)"] , exception : Some ("Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/event-dispatcher/DependencyInjection/RegisterListenersPass.php" , line : 155usize , placeholders : & ["sprintf('Class \"%s\" used for service \"%s\" cannot be found.', $class, $id)"] , exception : Some ("Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/event-dispatcher/DependencyInjection/RegisterListenersPass.php" , line : 158usize , placeholders : & ["sprintf('Service \"%s\" must implement interface \"%s\".', $id, EventSubscriberInterface::class)"] , exception : Some ("Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/event-dispatcher/DependencyInjection/RegisterListenersPass.php" , line : 210usize , placeholders : & ["sprintf('Service \"%s\" must define the \"event\" attribute on \"%s\" tags.', $id, $this->listenerTag)"] , exception : Some ("Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/event-dispatcher/ImmutableEventDispatcher.php" , line : 41usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Unmodifiable event dispatchers must not be modified\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/event-dispatcher/ImmutableEventDispatcher.php" , line : 49usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Unmodifiable event dispatchers must not be modified\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/event-dispatcher/ImmutableEventDispatcher.php" , line : 57usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Unmodifiable event dispatchers must not be modified\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/event-dispatcher/ImmutableEventDispatcher.php" , line : 65usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Unmodifiable event dispatchers must not be modified\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/event-dispatcher/GenericEvent.php" , line : 66usize , placeholders : & ["sprintf('Argument \"%s\" not found.', $key)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/symfony/event-dispatcher/Debug/TraceableEventDispatcher.php" , line : 145usize , placeholders : & ["sprintf('The \"%s\" event is already stopped. No listeners have been called.', $eventName)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/symfony/event-dispatcher/Debug/TraceableEventDispatcher.php" , line : 201usize , placeholders : & [] , exception : None , regex : "^An exception was thrown while getting the uncalled listeners\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/symfony/event-dispatcher/Debug/TraceableEventDispatcher.php" , line : 322usize , placeholders : & ["{event}" , "{listener}"] , exception : None , regex : "^Notified event \"(.*)\" to listener \"(.*)Notified event \"\\{event\\}\" to listener \"\\{listener\\}\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/symfony/event-dispatcher/Debug/TraceableEventDispatcher.php" , line : 329usize , placeholders : & ["{listener}" , "{event}"] , exception : None , regex : "^Listener \"(.*)\" was not called for event \"(.*)Listener \"\\{listener\\}\" was not called for event \"\\{event\\}\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/symfony/event-dispatcher/Debug/TraceableEventDispatcher.php" , line : 334usize , placeholders : & ["{listener}" , "{event}"] , exception : None , regex : "^Listener \"(.*)\" stopped propagation of the event \"(.*)Listener \"\\{listener\\}\" stopped propagation of the event \"\\{event\\}\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/DelayedEnvelope.php" , line : 96usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\LogicException") , regex : "^Unable to determine the sender of the message\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/EventListener/MessageListener.php" , line : 58usize , placeholders : & ["sprintf('The \"%d\" rule is not supported.', $rule)"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/EventListener/MessageListener.php" , line : 108usize , placeholders : & ["sprintf('Unable to set header \"%s\".', $name)"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Envelope.php" , line : 39usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\LogicException") , regex : "^Cannot send a RawMessage instance without an explicit Envelope\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Envelope.php" , line : 49usize , placeholders : & ["sprintf('Invalid sender \"%s\": non-ASCII characters not supported in local-part of email.', $sender->getAddress())"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Envelope.php" , line : 69usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\InvalidArgumentException") , regex : "^An envelope must have at least one recipient\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Envelope.php" , line : 75usize , placeholders : & ["sprintf('A recipient must be an instance of \"%s\" (got \"%s\").', Address::class, get_debug_type($recipient))"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport.php" , line : 115usize , placeholders : & ["sprintf('The DSN has some garbage at the end: \"%s\".', substr($dsn, $offset))"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport.php" , line : 157usize , placeholders : & ["sprintf('The \"%s\" keyword is not valid (valid ones are \"%s\"), ', $matches[1], implode('\", \"', array_keys($keywords)))"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport.php" , line : 176usize , placeholders : & ["$dsn"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\UnsupportedSchemeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/AbstractTransportFactory.php" , line : 46usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\IncompleteDsnException") , regex : "^User is not set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/AbstractTransportFactory.php" , line : 56usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\IncompleteDsnException") , regex : "^Password is not set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/Smtp/EsmtpTransport.php" , line : 116usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\TransportException") , regex : "^Unable to connect with STARTTLS\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/Smtp/EsmtpTransport.php" , line : 190usize , placeholders : & ["sprintf('Failed to find an authenticator supported by the SMTP server, which currently supports: \"%s\".', implode('\", \"', $modes))"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\TransportException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/Smtp/EsmtpTransport.php" , line : 198usize , placeholders : & ["$message"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\TransportException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/Smtp/Stream/AbstractStream.php" , line : 46usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\TransportException") , regex : "^Unable to write bytes on the wire\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/Smtp/Stream/AbstractStream.php" , line : 81usize , placeholders : & ["sprintf('Connection to \"%s\" timed out.', $this->getReadConnectionDescription())"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\TransportException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/Smtp/Stream/AbstractStream.php" , line : 84usize , placeholders : & ["sprintf('Connection to \"%s\" has been closed unexpectedly.', $this->getReadConnectionDescription())"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\TransportException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/Smtp/Stream/SocketStream.php" , line : 154usize , placeholders : & ["sprintf('Connection could not be established with host \"%s\": ', $this->url)" , "$msg"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\TransportException") , regex : "^(.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/Smtp/Stream/SocketStream.php" , line : 171usize , placeholders : & ["$msg"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\TransportException") , regex : "^Unable to connect with STARTTLS: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/Smtp/Stream/ProcessStream.php" , line : 44usize , placeholders : & ["$err"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\TransportException") , regex : "^Process could not be started: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/symfony/mailer/Transport/Smtp/SmtpTransport.php" , line : 215usize , placeholders : & ["sprintf('Email transport \"%s\" stopped', __CLASS__)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/symfony/mailer/Transport/Smtp/SmtpTransport.php" , line : 249usize , placeholders : & ["sprintf('Email transport \"%s\" starting', __CLASS__)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/symfony/mailer/Transport/Smtp/SmtpTransport.php" , line : 257usize , placeholders : & ["sprintf('Email transport \"%s\" started', __CLASS__)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/symfony/mailer/Transport/Smtp/SmtpTransport.php" , line : 266usize , placeholders : & ["sprintf('Email transport \"%s\" stopping', __CLASS__)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/symfony/mailer/Transport/Smtp/SmtpTransport.php" , line : 274usize , placeholders : & ["sprintf('Email transport \"%s\" stopped', __CLASS__)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/Smtp/SmtpTransport.php" , line : 297usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\LogicException") , regex : "^You must set the expected response code\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/Smtp/SmtpTransport.php" , line : 307usize , placeholders : & ["sprintf('Expected response code \"%s\" but got ', implode('/', $codes))" , "$codeStr" , "$responseStr"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\TransportException") , regex : "^(.*)(.*)(.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/symfony/mailer/Transport/Smtp/SmtpTransport.php" , line : 336usize , placeholders : & ["sprintf('Email transport \"%s\" sleeps for %d seconds after stopping', __CLASS__, $sleep)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/Smtp/SmtpTransport.php" , line : 349usize , placeholders : & ["__CLASS__"] , exception : Some ("BadMethodCallException") , regex : "^Cannot serialize (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/Smtp/SmtpTransport.php" , line : 354usize , placeholders : & ["__CLASS__"] , exception : Some ("BadMethodCallException") , regex : "^Cannot unserialize (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/SendmailTransportFactory.php" , line : 27usize , placeholders : & ["$dsn"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\UnsupportedSchemeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/Transports.php" , line : 43usize , placeholders : & ["sprintf('\"%s\" must have at least one transport configured.', __CLASS__)"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/Transports.php" , line : 59usize , placeholders : & ["sprintf('The \"%s\" transport does not exist (available transports: \"%s\").', $transport, implode('\", \"', array_keys($this->transports)))"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/AbstractHttpTransport.php" , line : 36usize , placeholders : & ["sprintf('You cannot use \"%s\" as the HttpClient component is not installed. Try running \"composer require symfony/http-client\".', __CLASS__)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/NullTransportFactory.php" , line : 27usize , placeholders : & ["$dsn"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\UnsupportedSchemeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/RoundRobinTransport.php" , line : 41usize , placeholders : & ["sprintf('\"%s\" must have at least one transport configured.', static::class)"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\TransportException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/NativeTransportFactory.php" , line : 29usize , placeholders : & ["$dsn"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\UnsupportedSchemeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/NativeTransportFactory.php" , line : 37usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\TransportException") , regex : "^sendmail_path is not configured in php\\.ini\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/NativeTransportFactory.php" , line : 46usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\TransportException") , regex : "^smtp or smtp_port is not configured in php\\.ini\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/SendmailTransport.php" , line : 58usize , placeholders : & ["sprintf('Unsupported sendmail command flags \"%s\"; must be one of \"-bs\" or \"-t\" but can include additional flags.', $command)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/symfony/mailer/Transport/SendmailTransport.php" , line : 91usize , placeholders : & ["sprintf('Email transport \"%s\" starting', __CLASS__)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/symfony/mailer/Transport/SendmailTransport.php" , line : 121usize , placeholders : & ["sprintf('Email transport \"%s\" stopped', __CLASS__)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/symfony/mailer/Transport/AbstractTransport.php" , line : 106usize , placeholders : & ["sprintf('Email transport \"%s\" sleeps for %.2f seconds', __CLASS__, $sleep)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/Dsn.php" , line : 41usize , placeholders : & ["sprintf('The \"%s\" mailer DSN is invalid.', $dsn)"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/Dsn.php" , line : 45usize , placeholders : & ["sprintf('The \"%s\" mailer DSN must contain a scheme.', $dsn)"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/Dsn.php" , line : 49usize , placeholders : & ["sprintf('The \"%s\" mailer DSN must contain a host (use \"default\" by default).', $dsn)"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mailer/Transport/AbstractApiTransport.php" , line : 34usize , placeholders : & ["sprintf('Unable to send message with the \"%s\" transport: ', __CLASS__)" , "$e->getMessage()"] , exception : Some ("Symfony\\Component\\Mailer\\Exception\\RuntimeException") , regex : "^(.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Command/XliffLintCommand.php" , line : 97usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\RuntimeException") , regex : "^Please provide a filename or pipe file content to STDIN\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Command/XliffLintCommand.php" , line : 103usize , placeholders : & ["sprintf('File or directory \"%s\" is not readable.', $filename)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Command/XliffLintCommand.php" , line : 169usize , placeholders : & ["sprintf('The format \"%s\" is not supported.', $this->format)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/symfony/translation/Command/XliffLintCommand.php" , line : 190usize , placeholders : & ["$error['message']"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/3rdparty/symfony/translation/Command/XliffLintCommand.php" , line : 201usize , placeholders : & ["sprintf('%d XLIFF files have valid syntax and %d contain errors.', $countFiles - $erroredFiles, $erroredFiles)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Command/TranslationPushCommand.php" , line : 125usize , placeholders : & ["sprintf('You must define \"framework.translator.enabled_locales\" or \"framework.translator.providers.%s.locales\" config key in order to work with translation providers.', parse_url($provider, \\PHP_URL_SCHEME))"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Dumper/YamlFileDumper.php" , line : 39usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Translation\\Exception\\LogicException") , regex : "^Dumping translations in the YAML format requires the Symfony Yaml component\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Dumper/FileDumper.php" , line : 51usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidArgumentException") , regex : "^The file dumper needs a path option\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Dumper/FileDumper.php" , line : 60usize , placeholders : & ["sprintf('Unable to create directory \"%s\".', $directory)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Dumper/XliffFileDumper.php" , line : 47usize , placeholders : & ["sprintf('No support implemented for dumping XLIFF version \"%s\".', $xliffVersion)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Extractor/AbstractFileExtractor.php" , line : 59usize , placeholders : & ["sprintf('The \"%s\" file does not exist.', $file)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Extractor/PhpExtractor.php" , line : 329usize , placeholders : & ["sprintf('You cannot use \"%s\" as the \"symfony/finder\" package is not installed. Try running \"composer require symfony/finder\".', static::class)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/PseudoLocalizationTranslator.php" , line : 73usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The expansion factor must be greater than or equal to 1\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Formatter/IntlFormatter.php" , line : 38usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Translation\\Exception\\LogicException") , regex : "^Cannot parse message translation: please install the \"intl\" PHP extension or the \"symfony/polyfill\\-intl\\-messageformatter\" package\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Formatter/IntlFormatter.php" , line : 43usize , placeholders : & ["sprintf('Invalid message format (error #%d): ', intl_get_error_code())" , "intl_get_error_message()"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidArgumentException") , regex : "^(.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Formatter/IntlFormatter.php" , line : 55usize , placeholders : & ["sprintf('Unable to format message (error #%s): ', $formatter->getErrorCode())" , "$formatter->getErrorMessage()"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidArgumentException") , regex : "^(.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Writer/TranslationWriter.php" , line : 60usize , placeholders : & ["sprintf('There is no dumper associated with format \"%s\".', $format)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Writer/TranslationWriter.php" , line : 67usize , placeholders : & ["sprintf('Translation Writer was not able to create directory \"%s\".', $options['path'])"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Translator.php" , line : 382usize , placeholders : & ["sprintf('No loader is registered for the \"%s\" format when loading the \"%s\" resource.', $resource[0], $resource[1])"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Translator.php" , line : 385usize , placeholders : & ["sprintf('No loader is registered for the \"%s\" format.', $resource[0])"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Translator.php" , line : 461usize , placeholders : & ["sprintf('Invalid \"%s\" locale.', $locale)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/MessageCatalogue.php" , line : 175usize , placeholders : & ["sprintf('Cannot add a catalogue for locale \"%s\" as the current locale for this catalogue is \"%s\".', $catalogue->getLocale(), $this->locale)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/MessageCatalogue.php" , line : 205usize , placeholders : & ["sprintf('Circular reference detected when adding a fallback catalogue for locale \"%s\".', $catalogue->getLocale())"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/MessageCatalogue.php" , line : 212usize , placeholders : & ["sprintf('Circular reference detected when adding a fallback catalogue for locale \"%s\".', $catalogue->getLocale())"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/DependencyInjection/TranslationExtractorPass.php" , line : 47usize , placeholders : & ["sprintf('The alias for the tag \"translation.extractor\" of service \"%s\" must be set.', $id)"] , exception : Some ("Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/LoggingTranslator.php" , line : 33usize , placeholders : & ["sprintf('The Translator \"%s\" must implement TranslatorInterface, TranslatorBagInterface and LocaleAwareInterface.', get_debug_type($translator))"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/symfony/translation/LoggingTranslator.php" , line : 46usize , placeholders : & ["$id"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/symfony/translation/LoggingTranslator.php" , line : 62usize , placeholders : & ["sprintf('The locale of the translator has changed from \"%s\" to \"%s\".', $prev, $locale)"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/symfony/translation/LoggingTranslator.php" , line : 126usize , placeholders : & [] , exception : None , regex : "^Translation use fallback catalogue\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/3rdparty/symfony/translation/LoggingTranslator.php" , line : 128usize , placeholders : & [] , exception : None , regex : "^Translation not found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/DataCollectorTranslator.php" , line : 37usize , placeholders : & ["sprintf('The Translator \"%s\" must implement TranslatorInterface, TranslatorBagInterface and LocaleAwareInterface.', get_debug_type($translator))"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Catalogue/AbstractOperation.php" , line : 71usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Translation\\Exception\\LogicException") , regex : "^Operated catalogues must belong to the same locale\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Catalogue/AbstractOperation.php" , line : 109usize , placeholders : & ["sprintf('Invalid domain: \"%s\".', $domain)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Catalogue/AbstractOperation.php" , line : 125usize , placeholders : & ["sprintf('Invalid domain: \"%s\".', $domain)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Catalogue/AbstractOperation.php" , line : 141usize , placeholders : & ["sprintf('Invalid domain: \"%s\".', $domain)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Catalogue/AbstractOperation.php" , line : 181usize , placeholders : & ["sprintf('$batch argument must be one of [\"%s\", \"%s\", \"%s\"].', self::ALL_BATCH, self::NEW_BATCH, self::OBSOLETE_BATCH)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/XliffFileLoader.php" , line : 37usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Translation\\Exception\\RuntimeException") , regex : "^Loading translations from the Xliff format requires the Symfony Config component\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/XliffFileLoader.php" , line : 42usize , placeholders : & ["sprintf('This is not a local file \"%s\".', $resource)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidResourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/XliffFileLoader.php" , line : 46usize , placeholders : & ["sprintf('File \"%s\" not found.', $resource)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\NotFoundResourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/XliffFileLoader.php" , line : 50usize , placeholders : & ["sprintf('This is neither a file nor an XLIFF string \"%s\".', $resource)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidResourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/XliffFileLoader.php" , line : 61usize , placeholders : & ["sprintf('Unable to load \"%s\": ', $resource)" , "$e->getMessage()"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidResourceException") , regex : "^(.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/XliffFileLoader.php" , line : 65usize , placeholders : & ["sprintf('Invalid resource provided: \"%s\"; Errors: ', $resource)" , "XliffUtils::getErrorsAsString($errors)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidResourceException") , regex : "^(.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/YamlFileLoader.php" , line : 36usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Translation\\Exception\\LogicException") , regex : "^Loading translations from the YAML format requires the Symfony Yaml component\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/YamlFileLoader.php" , line : 45usize , placeholders : & ["sprintf('The file \"%s\" does not contain valid YAML: ', $resource)" , "$e->getMessage()"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidResourceException") , regex : "^(.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/YamlFileLoader.php" , line : 49usize , placeholders : & ["sprintf('Unable to load file \"%s\".', $resource)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidResourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/IcuResFileLoader.php" , line : 32usize , placeholders : & ["sprintf('This is not a local file \"%s\".', $resource)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidResourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/IcuResFileLoader.php" , line : 36usize , placeholders : & ["sprintf('File \"%s\" not found.', $resource)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\NotFoundResourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/IcuResFileLoader.php" , line : 46usize , placeholders : & ["sprintf('Cannot load resource \"%s\".', $resource)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidResourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/IcuResFileLoader.php" , line : 48usize , placeholders : & ["$rb->getErrorMessage()"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidResourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/CsvFileLoader.php" , line : 37usize , placeholders : & ["sprintf('Error opening file \"%s\".', $resource)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\NotFoundResourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/JsonFileLoader.php" , line : 33usize , placeholders : & ["$this->getJSONErrorMessage($errorCode)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidResourceException") , regex : "^Error parsing JSON: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/MoFileLoader.php" , line : 51usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidResourceException") , regex : "^MO stream content has an invalid format\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/MoFileLoader.php" , line : 61usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidResourceException") , regex : "^MO stream content has an invalid format\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/IcuDatFileLoader.php" , line : 32usize , placeholders : & ["sprintf('This is not a local file \"%s\".', $resource)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidResourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/IcuDatFileLoader.php" , line : 36usize , placeholders : & ["sprintf('File \"%s\" not found.', $resource)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\NotFoundResourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/IcuDatFileLoader.php" , line : 46usize , placeholders : & ["sprintf('Cannot load resource \"%s\".', $resource)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidResourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/IcuDatFileLoader.php" , line : 48usize , placeholders : & ["$rb->getErrorMessage()"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidResourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/FileLoader.php" , line : 29usize , placeholders : & ["sprintf('This is not a local file \"%s\".', $resource)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidResourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/FileLoader.php" , line : 33usize , placeholders : & ["sprintf('File \"%s\" not found.', $resource)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\NotFoundResourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/FileLoader.php" , line : 45usize , placeholders : & ["sprintf('Unable to load file \"%s\".', $resource)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidResourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/QtFileLoader.php" , line : 34usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Translation\\Exception\\RuntimeException") , regex : "^Loading translations from the QT format requires the Symfony Config component\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/QtFileLoader.php" , line : 38usize , placeholders : & ["sprintf('This is not a local file \"%s\".', $resource)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidResourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/QtFileLoader.php" , line : 42usize , placeholders : & ["sprintf('File \"%s\" not found.', $resource)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\NotFoundResourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Loader/QtFileLoader.php" , line : 48usize , placeholders : & ["sprintf('Unable to load \"%s\".', $resource)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidResourceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Util/XliffUtils.php" , line : 44usize , placeholders : & ["sprintf('Not a valid XLIFF namespace \"%s\".', $namespace)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Util/XliffUtils.php" , line : 143usize , placeholders : & ["sprintf('No support implemented for loading XLIFF version \"%s\".', $xliffVersion)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Provider/Dsn.php" , line : 37usize , placeholders : & ["sprintf('The \"%s\" translation provider DSN is invalid.', $dsn)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Provider/Dsn.php" , line : 41usize , placeholders : & ["sprintf('The \"%s\" translation provider DSN must contain a scheme.', $dsn)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Provider/Dsn.php" , line : 46usize , placeholders : & ["sprintf('The \"%s\" translation provider DSN must contain a host (use \"default\" by default).', $dsn)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Provider/Dsn.php" , line : 90usize , placeholders : & ["$key"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\MissingRequiredOptionException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Provider/AbstractProviderFactory.php" , line : 31usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Translation\\Exception\\IncompleteDsnException") , regex : "^User is not set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Provider/AbstractProviderFactory.php" , line : 40usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Translation\\Exception\\IncompleteDsnException") , regex : "^Password is not set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Provider/NullProviderFactory.php" , line : 27usize , placeholders : & ["$dsn"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\UnsupportedSchemeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Provider/TranslationProviderCollectionFactory.php" , line : 55usize , placeholders : & ["$dsn"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\UnsupportedSchemeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation/Provider/TranslationProviderCollection.php" , line : 47usize , placeholders : & ["sprintf('Provider \"%s\" not found. Available: \"%s\".', $name, (string) $this)"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Form.php" , line : 400usize , placeholders : & ["sprintf('The selected node has an invalid form attribute (%s).', $formId)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Form.php" , line : 409usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^The selected node does not have a form ancestor\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Form.php" , line : 413usize , placeholders : & ["sprintf('Unable to submit on a \"%s\" tag.', $node->nodeName)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/AbstractUriElement.php" , line : 52usize , placeholders : & ["sprintf('The URL of the element is relative, so you must define its base URI passing an absolute URL to the constructor of the \"%s\" class (\"%s\" was passed).', __CLASS__, $this->currentUri)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/FormFieldRegistry.php" , line : 80usize , placeholders : & ["sprintf('Unreachable field \"%s\".', $path)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/FormFieldRegistry.php" , line : 122usize , placeholders : & ["sprintf('Cannot set value on a compound field \"%s\".', $name)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Link.php" , line : 29usize , placeholders : & ["sprintf('Unable to navigate from a \"%s\" tag.', $node->nodeName)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/UriResolver.php" , line : 41usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The URI is relative, so you must define its base URI passing an absolute URL\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Field/FileFormField.php" , line : 32usize , placeholders : & ["sprintf('The error code \"%s\" is not valid.', $error)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Field/FileFormField.php" , line : 93usize , placeholders : & ["sprintf('A FileFormField can only be created from an input tag (%s given).', $this->node->nodeName)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Field/FileFormField.php" , line : 97usize , placeholders : & ["sprintf('A FileFormField can only be created from an input tag with a type of file (given type is \"%s\").', $this->node->getAttribute('type'))"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Field/ChoiceFormField.php" , line : 93usize , placeholders : & ["sprintf('You cannot tick \"%s\" as it is not a checkbox (%s).', $this->name, $this->type)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Field/ChoiceFormField.php" , line : 107usize , placeholders : & ["sprintf('You cannot untick \"%s\" as it is not a checkbox (%s).', $this->name, $this->type)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Field/ChoiceFormField.php" , line : 131usize , placeholders : & ["sprintf('The value for \"%s\" cannot be an array.', $this->name)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Field/ChoiceFormField.php" , line : 136usize , placeholders : & ["sprintf('Input \"%s\" cannot take \"%s\" as a value (possible values: \"%s\").', $this->name, $v, implode('\", \"', $this->availableOptionValues()))"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Field/ChoiceFormField.php" , line : 140usize , placeholders : & ["sprintf('Input \"%s\" cannot take \"%s\" as a value (possible values: \"%s\").', $this->name, $value, implode('\", \"', $this->availableOptionValues()))"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Field/ChoiceFormField.php" , line : 165usize , placeholders : & ["sprintf('Unable to add a choice for \"%s\" as it is not multiple or is not a radio button.', $this->name)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Field/ChoiceFormField.php" , line : 204usize , placeholders : & ["sprintf('A ChoiceFormField can only be created from an input or select tag (%s given).', $this->node->nodeName)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Field/ChoiceFormField.php" , line : 208usize , placeholders : & ["sprintf('A ChoiceFormField can only be created from an input tag with a type of checkbox or radio (given type is \"%s\").', $this->node->getAttribute('type'))"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Field/TextareaFormField.php" , line : 29usize , placeholders : & ["sprintf('A TextareaFormField can only be created from a textarea tag (%s given).', $this->node->nodeName)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Field/InputFormField.php" , line : 32usize , placeholders : & ["sprintf('An InputFormField can only be created from an input or button tag (%s given).', $this->node->nodeName)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Field/InputFormField.php" , line : 37usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Checkboxes should be instances of ChoiceFormField\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Field/InputFormField.php" , line : 41usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^File inputs should be instances of FileFormField\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Image.php" , line : 32usize , placeholders : & ["sprintf('Unable to visualize a \"%s\" tag.', $node->nodeName)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 145usize , placeholders : & ["sprintf('Expecting a DOMNodeList or DOMNode instance, an array, a string, or null, but got \"%s\".', get_debug_type($node))"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 309usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Attaching DOM nodes from multiple documents in the same crawler is forbidden\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 425usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The current node list is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 453usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The current node list is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 480usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The current node list is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 496usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The current node list is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 526usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The current node list is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 552usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The current node list is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 577usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The current node list is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 595usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The current node list is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 620usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The current node list is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 656usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The current node list is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 677usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The current node list is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 701usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Cannot evaluate the expression on an uninitialized crawler\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 837usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The current node list is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 843usize , placeholders : & ["sprintf('The selected node should be instance of DOMElement, got \"%s\".', get_debug_type($node))"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 861usize , placeholders : & ["sprintf('The current node list should contain only DOMElement instances, \"%s\" found.', get_debug_type($node))"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 880usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The current node list is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 886usize , placeholders : & ["sprintf('The selected node should be instance of DOMElement, got \"%s\".', get_debug_type($node))"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 902usize , placeholders : & ["sprintf('The current node list should contain only DOMElement instances, \"%s\" found.', get_debug_type($node))"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 921usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The current node list is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 927usize , placeholders : & ["sprintf('The selected node should be instance of DOMElement, got \"%s\".', get_debug_type($node))"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 1186usize , placeholders : & [] , exception : Some ("Exception") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/dom-crawler/Crawler.php" , line : 1273usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^To filter with a CSS selector, install the CssSelector component \\(\"composer require symfony/css\\-selector\"\\)\\. Or use filterXpath instead\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/polyfill-mbstring/Mbstring.php" , line : 371usize , placeholders : & ["sprintf('Argument #1 ($encoding) must be a valid encoding, \"%s\" given', $encoding)"] , exception : Some ("ValueError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/polyfill-mbstring/Mbstring.php" , line : 392usize , placeholders : & ["sprintf('Argument #1 ($language) must be a valid language, \"%s\" given', $lang)"] , exception : Some ("ValueError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/polyfill-mbstring/Mbstring.php" , line : 581usize , placeholders : & [] , exception : Some ("ValueError") , regex : "^Argument \\#2 \\(\\$length\\) must be greater than 0$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/polyfill-mbstring/Mbstring.php" , line : 634usize , placeholders : & [] , exception : Some ("ValueError") , regex : "^Argument \\#1 \\(\\$substitute_character\\) must be \"none\", \"long\", \"entity\" or a valid codepoint$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/polyfill-mbstring/Mbstring.php" , line : 833usize , placeholders : & [] , exception : Some ("ValueError") , regex : "^mb_str_pad\\(\\): Argument \\#4 \\(\\$pad_type\\) must be STR_PAD_LEFT, STR_PAD_RIGHT, or STR_PAD_BOTH$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/polyfill-mbstring/Mbstring.php" , line : 843usize , placeholders : & ["sprintf('mb_str_pad(): Argument #5 ($encoding) must be a valid encoding, \"%s\" given', $encoding)"] , exception : Some ("ValueError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/polyfill-mbstring/Mbstring.php" , line : 848usize , placeholders : & ["sprintf('mb_str_pad(): Argument #5 ($encoding) must be a valid encoding, \"%s\" given', $encoding)"] , exception : Some ("ValueError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/polyfill-mbstring/Mbstring.php" , line : 852usize , placeholders : & [] , exception : Some ("ValueError") , regex : "^mb_str_pad\\(\\): Argument \\#3 \\(\\$pad_string\\) must be a non\\-empty string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation-contracts/TranslatorTrait.php" , line : 125usize , placeholders : & ["$message"] , exception : Some ("Symfony\\Component\\Translation\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/translation-contracts/TranslatorTrait.php" , line : 128usize , placeholders : & ["$message"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/service-contracts/ServiceSubscriberTrait.php" , line : 45usize , placeholders : & ["sprintf('Cannot use \"%s\" on method \"%s::%s()\" (can only be used on non-static, non-abstract methods with no parameters).', SubscribedService::class, self::class, $method->name)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/service-contracts/ServiceSubscriberTrait.php" , line : 49usize , placeholders : & ["sprintf('Cannot use \"%s\" on methods without a return type in \"%s::%s()\".', SubscribedService::class, $method->name, self::class)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/YamlFileLoader.php" , line : 56usize , placeholders : & ["sprintf('This is not a local file \"%s\".', $path)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/YamlFileLoader.php" , line : 60usize , placeholders : & ["sprintf('File \"%s\" not found.', $path)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/YamlFileLoader.php" , line : 70usize , placeholders : & ["sprintf('The file \"%s\" does not contain valid YAML: ', $path)" , "$e->getMessage()"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/YamlFileLoader.php" , line : 83usize , placeholders : & ["sprintf('The file \"%s\" must contain a YAML array.', $path)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/YamlFileLoader.php" , line : 150usize , placeholders : & ["sprintf('A placeholder name must be a string (%d given). Did you forget to specify the placeholder key for the requirement \"%s\" of route \"%s\" in \"%s\"?', $placeholder, $requirement, $name, $path)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/YamlFileLoader.php" , line : 265usize , placeholders : & ["sprintf('The definition of \"%s\" in \"%s\" must be a YAML array.', $name, $path)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/YamlFileLoader.php" , line : 273usize , placeholders : & ["sprintf('The routing file \"%s\" contains unsupported keys for \"%s\": \"%s\". Expected one of: \"%s\".', $path, $name, implode('\", \"', $extraKeys), implode('\", \"', self::AVAILABLE_KEYS))"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/YamlFileLoader.php" , line : 276usize , placeholders : & ["sprintf('The routing file \"%s\" must not specify both the \"resource\" key and the \"path\" key for \"%s\". Choose between an import and a route definition.', $path, $name)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/YamlFileLoader.php" , line : 279usize , placeholders : & ["sprintf('The \"type\" key for the route definition \"%s\" in \"%s\" is unsupported. It is only available for imports in combination with the \"resource\" key.', $name, $path)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/YamlFileLoader.php" , line : 282usize , placeholders : & ["sprintf('You must define a \"path\" for the route \"%s\" in file \"%s\".', $name, $path)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/YamlFileLoader.php" , line : 285usize , placeholders : & ["sprintf('The routing file \"%s\" must not specify both the \"controller\" key and the defaults key \"_controller\" for \"%s\".', $path, $name)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/YamlFileLoader.php" , line : 288usize , placeholders : & ["sprintf('The routing file \"%s\" must not specify both the \"stateless\" key and the defaults key \"_stateless\" for \"%s\".', $path, $name)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/YamlFileLoader.php" , line : 300usize , placeholders : & ["sprintf('The routing file \"%s\" must not specify other keys than \"alias\" and \"deprecated\" for \"%s\".', $path, $name)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/YamlFileLoader.php" , line : 305usize , placeholders : & ["sprintf('The routing file \"%s\" must specify the attribute \"package\" of the \"deprecated\" option for \"%s\".', $path, $name)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/YamlFileLoader.php" , line : 309usize , placeholders : & ["sprintf('The routing file \"%s\" must specify the attribute \"version\" of the \"deprecated\" option for \"%s\".', $path, $name)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/ObjectLoader.php" , line : 46usize , placeholders : & ["sprintf('Invalid resource \"%s\" passed to the %s route loader: use the format \"object_id::method\" or \"object_id\" if your object class has an \"__invoke\" method.', $resource, \\is_string($type) ? '\"'.$type.'\"' : 'object')"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/ObjectLoader.php" , line : 55usize , placeholders : & ["sprintf('\"%s:getObject()\" must return an object: \"%s\" returned.', static::class, get_debug_type($loaderObject))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/ObjectLoader.php" , line : 59usize , placeholders : & ["sprintf('Method \"%s\" not found on \"%s\" when importing routing resource \"%s\".', $method, get_debug_type($loaderObject), $resource)"] , exception : Some ("BadMethodCallException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/ObjectLoader.php" , line : 67usize , placeholders : & ["sprintf('The \"%s::%s()\" method must return a RouteCollection: \"%s\" returned.', get_debug_type($loaderObject), $method, $type)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/AnnotationFileLoader.php" , line : 32usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^The Tokenizer extension is required for the routing annotation loaders\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/AnnotationFileLoader.php" , line : 90usize , placeholders : & ["sprintf('The file \"%s\" does not contain PHP code. Did you forgot to add the \"<?php\" start tag at the beginning of the file?', $file)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/XmlFileLoader.php" , line : 98usize , placeholders : & ["sprintf('Unknown tag \"%s\" used in file \"%s\". Expected \"route\" or \"import\".', $node->localName, $path)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/XmlFileLoader.php" , line : 118usize , placeholders : & ["sprintf('The <route> element in file \"%s\" must have an \"id\" attribute.', $path)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/XmlFileLoader.php" , line : 137usize , placeholders : & ["sprintf('The <route> element in file \"%s\" must have a \"path\" attribute or <path> child nodes.', $path)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/XmlFileLoader.php" , line : 141usize , placeholders : & ["sprintf('The <route> element in file \"%s\" must not have both a \"path\" attribute and <path> child nodes.', $path)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/XmlFileLoader.php" , line : 165usize , placeholders : & ["sprintf('The <import> element in file \"%s\" must have a \"resource\" attribute.', $path)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/XmlFileLoader.php" , line : 178usize , placeholders : & ["sprintf('The <route> element in file \"%s\" must not have both a \"prefix\" attribute and <prefix> child nodes.', $path)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/XmlFileLoader.php" , line : 190usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^You cannot use both the attribute \"exclude\" and <exclude> tags at the same time\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/XmlFileLoader.php" , line : 292usize , placeholders : & ["sprintf('Unknown tag \"%s\" used in file \"%s\". Expected \"default\", \"requirement\", \"option\" or \"condition\".', $n->localName, $path)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/XmlFileLoader.php" , line : 300usize , placeholders : & ["sprintf('The routing file \"%s\" must not specify both the \"controller\" attribute and the defaults key \"_controller\" for ', $path)" , "$name"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/XmlFileLoader.php" , line : 318usize , placeholders : & ["sprintf('The routing file \"%s\" must not specify both the \"stateless\" attribute and the defaults key \"_stateless\" for ', $path)" , "$name"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/XmlFileLoader.php" , line : 418usize , placeholders : & ["sprintf('Unknown tag \"%s\" used in file \"%s\". Expected \"bool\", \"int\", \"float\", \"string\", \"list\", or \"map\".', $node->localName, $path)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/XmlFileLoader.php" , line : 446usize , placeholders : & ["sprintf('Invalid child element \"%s\" defined for alias \"%s\" in \"%s\".', $child->localName, $node->getAttribute('id'), $path)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/XmlFileLoader.php" , line : 457usize , placeholders : & ["sprintf('The <deprecated> element in file \"%s\" must have a \"package\" attribute.', $path)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/XmlFileLoader.php" , line : 460usize , placeholders : & ["sprintf('The <deprecated> element in file \"%s\" must have a \"version\" attribute.', $path)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/Configurator/Traits/PrefixTrait.php" , line : 42usize , placeholders : & ["sprintf('Route \"%s\" with locale \"%s\" is missing a corresponding prefix in its parent collection.', $name, $locale)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/Configurator/Traits/HostTrait.php" , line : 41usize , placeholders : & ["sprintf('Route \"%s\" with locale \"%s\" is missing a corresponding host in its parent collection.', $name, $locale)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/Configurator/Traits/LocalizedRouteTrait.php" , line : 40usize , placeholders : & ["sprintf('Route \"%s\" is missing routes for locale(s) \"%s\".', $name, implode('\", \"', array_keys($missing)))"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/Configurator/Traits/LocalizedRouteTrait.php" , line : 44usize , placeholders : & ["sprintf('Route \"%s\" with locale \"%s\" is missing a corresponding prefix in its parent collection.', $name, $locale)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/Configurator/ImportConfigurator.php" , line : 38usize , placeholders : & ["__CLASS__"] , exception : Some ("BadMethodCallException") , regex : "^Cannot serialize (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/Configurator/ImportConfigurator.php" , line : 43usize , placeholders : & ["__CLASS__"] , exception : Some ("BadMethodCallException") , regex : "^Cannot unserialize (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/Configurator/CollectionConfigurator.php" , line : 46usize , placeholders : & ["__CLASS__"] , exception : Some ("BadMethodCallException") , regex : "^Cannot serialize (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/Configurator/CollectionConfigurator.php" , line : 51usize , placeholders : & ["__CLASS__"] , exception : Some ("BadMethodCallException") , regex : "^Cannot unserialize (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/Configurator/CollectionConfigurator.php" , line : 87usize , placeholders : & ["sprintf('Collection \"%s\" is missing prefixes for locale(s) \"%s\".', $this->name, implode('\", \"', array_keys($missing)))"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/Configurator/CollectionConfigurator.php" , line : 91usize , placeholders : & ["sprintf('Collection \"%s\" with locale \"%s\" is missing a corresponding prefix in its parent collection.', $this->name, $locale)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/AnnotationClassLoader.php" , line : 114usize , placeholders : & ["sprintf('Class \"%s\" does not exist.', $class)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/AnnotationClassLoader.php" , line : 119usize , placeholders : & ["sprintf('Annotations from class \"%s\" cannot be read as it is abstract.', $class->getName())"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/AnnotationClassLoader.php" , line : 167usize , placeholders : & ["sprintf('A placeholder name must be a string (%d given). Did you forget to specify the placeholder key for the requirement \"%s\" of route \"%s\" in \"%s::%s()\"?', $placeholder, $requirement, $name, $class->getName(), $method->getName())"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/AnnotationClassLoader.php" , line : 195usize , placeholders : & ["sprintf('Route to \"%s\" is missing paths for locale(s) \"%s\".', $class->name.'::'.$method->name, implode('\", \"', array_keys($missing)))"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/AnnotationClassLoader.php" , line : 199usize , placeholders : & ["sprintf('Route to \"%s\" with locale \"%s\" is missing a corresponding prefix in class \"%s\".', $method->name, $locale, $class->name)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Loader/AnnotationClassLoader.php" , line : 334usize , placeholders : & ["sprintf('A placeholder name must be a string (%d given). Did you forget to specify the placeholder key for the requirement \"%s\" in \"%s\"?', $placeholder, $requirement, $class->getName())"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Matcher/UrlMatcher.php" , line : 93usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Routing\\Exception\\NoConfigurationException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Matcher/UrlMatcher.php" , line : 257usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Unable to use expressions as the Symfony ExpressionLanguage component is not installed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Matcher/Dumper/CompiledUrlMatcherDumper.php" , line : 452usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Unable to use expressions as the Symfony ExpressionLanguage component is not installed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Matcher/Dumper/CompiledUrlMatcherDumper.php" , line : 475usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Symfony\\\\Component\\\\Routing\\\\Route cannot contain objects\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php" , line : 46usize , placeholders : & ["array_keys($allow)"] , exception : Some ("Symfony\\Component\\Routing\\Exception\\MethodNotAllowedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php" , line : 49usize , placeholders : & ["sprintf('No routes found for \"%s\".', $pathinfo)"] , exception : Some ("Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php" , line : 74usize , placeholders : & ["sprintf('No routes found for \"%s\".', $pathinfo)"] , exception : Some ("Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php" , line : 186usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Routing\\Exception\\NoConfigurationException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/RouteCollection.php" , line : 137usize , placeholders : & ["$name"] , exception : Some ("Symfony\\Component\\Routing\\Exception\\RouteCircularReferenceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/RouteCollection.php" , line : 363usize , placeholders : & ["sprintf('Route alias \"%s\" can not reference itself.', $name)"] , exception : Some ("Symfony\\Component\\Routing\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/RouteCollectionBuilder.php" , line : 343usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Cannot import other routing resources: you must pass a LoaderInterface when constructing RouteCollectionBuilder\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/RouteCollectionBuilder.php" , line : 353usize , placeholders : & ["$resource"] , exception : Some ("Symfony\\Component\\Config\\Exception\\LoaderLoadException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/RouteCollectionBuilder.php" , line : 357usize , placeholders : & ["$resource"] , exception : Some ("Symfony\\Component\\Config\\Exception\\LoaderLoadException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Annotation/Route.php" , line : 70usize , placeholders : & ["sprintf('\"%s\": Argument $data is expected to be a string or array, got \"%s\".', __METHOD__, get_debug_type($data))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Annotation/Route.php" , line : 87usize , placeholders : & ["sprintf('\"%s\": Argument $path is expected to be a string, array or null, got \"%s\".', __METHOD__, get_debug_type($path))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Annotation/Route.php" , line : 111usize , placeholders : & ["sprintf('Unknown property \"localized_paths\" on annotation \"%s\".', static::class)"] , exception : Some ("BadMethodCallException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Annotation/Route.php" , line : 147usize , placeholders : & ["sprintf('Unknown property \"%s\" on annotation \"%s\".', $key, static::class)"] , exception : Some ("BadMethodCallException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/RouteCompiler.php" , line : 85usize , placeholders : & ["sprintf('Route pattern \"%s\" cannot contain \"_fragment\" as a path parameter.', $route->getPath())"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/RouteCompiler.php" , line : 117usize , placeholders : & ["sprintf('Cannot use UTF-8 route patterns without setting the \"utf8\" option for route \"%s\".', $route->getPath())"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/RouteCompiler.php" , line : 120usize , placeholders : & ["sprintf('Cannot mix UTF-8 requirements with non-UTF-8 pattern \"%s\".', $pattern)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/RouteCompiler.php" , line : 146usize , placeholders : & ["sprintf('Variable name \"%s\" cannot start with a digit in route pattern \"%s\". Please use a different name.', $varName, $pattern)"] , exception : Some ("DomainException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/RouteCompiler.php" , line : 149usize , placeholders : & ["sprintf('Route pattern \"%s\" cannot reference variable name \"%s\" more than once.', $pattern, $varName)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/RouteCompiler.php" , line : 153usize , placeholders : & ["sprintf('Variable name \"%s\" cannot be longer than %d characters in route pattern \"%s\". Please use a shorter name.', $varName, self::VARIABLE_MAXIMUM_LENGTH, $pattern)"] , exception : Some ("DomainException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/RouteCompiler.php" , line : 190usize , placeholders : & ["sprintf('Cannot use UTF-8 route requirements without setting the \"utf8\" option for variable \"%s\" in pattern \"%s\".', $varName, $pattern)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/RouteCompiler.php" , line : 193usize , placeholders : & ["sprintf('Cannot mix UTF-8 requirement with non-UTF-8 charset for variable \"%s\" in pattern \"%s\".', $varName, $pattern)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Router.php" , line : 151usize , placeholders : & ["sprintf('The Router does not support the following options: \"%s\".', implode('\", \"', $invalid))"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Router.php" , line : 165usize , placeholders : & ["sprintf('The Router does not support the \"%s\" option.', $key)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Router.php" , line : 181usize , placeholders : & ["sprintf('The Router does not support the \"%s\" option.', $key)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Route.php" , line : 497usize , placeholders : & ["sprintf('Routing requirement for \"%s\" cannot be empty.', $key)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Generator/Dumper/CompiledUrlGeneratorDumper.php" , line : 59usize , placeholders : & ["$currentId"] , exception : Some ("Symfony\\Component\\Routing\\Exception\\RouteCircularReferenceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Generator/Dumper/CompiledUrlGeneratorDumper.php" , line : 72usize , placeholders : & ["sprintf('Target route \"%s\" for alias \"%s\" does not exist.', $currentId, $name)"] , exception : Some ("Symfony\\Component\\Routing\\Exception\\RouteNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Generator/UrlGenerator.php" , line : 144usize , placeholders : & ["sprintf('Unable to generate a URL for the named route \"%s\" as such route does not exist.', $name)"] , exception : Some ("Symfony\\Component\\Routing\\Exception\\RouteNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Generator/UrlGenerator.php" , line : 178usize , placeholders : & ["sprintf('Some mandatory parameters are missing (\"%s\") to generate a URL for route \"%s\".', implode('\", \"', array_keys($diff)), $name)"] , exception : Some ("Symfony\\Component\\Routing\\Exception\\MissingMandatoryParametersException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Generator/UrlGenerator.php" , line : 194usize , placeholders : & ["strtr($message, ['{parameter}' => $varName, '{route}' => $name, '{expected}' => $token[2], '{given}' => $mergedParams[$varName]])"] , exception : Some ("Symfony\\Component\\Routing\\Exception\\InvalidParameterException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/symfony/routing/Generator/UrlGenerator.php" , line : 198usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Generator/UrlGenerator.php" , line : 249usize , placeholders : & ["strtr($message, ['{parameter}' => $token[3], '{route}' => $name, '{expected}' => $token[2], '{given}' => $mergedParams[$token[3]]])"] , exception : Some ("Symfony\\Component\\Routing\\Exception\\InvalidParameterException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/symfony/routing/Generator/UrlGenerator.php" , line : 253usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Generator/CompiledUrlGenerator.php" , line : 50usize , placeholders : & ["sprintf('Unable to generate a URL for the named route \"%s\" as such route does not exist.', $name)"] , exception : Some ("Symfony\\Component\\Routing\\Exception\\RouteNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Alias.php" , line : 63usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Routing\\Exception\\InvalidArgumentException") , regex : "^Invalid characters found in deprecation template\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/routing/Alias.php" , line : 67usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Routing\\Exception\\InvalidArgumentException") , regex : "^The deprecation template must contain the \"%alias_id%\" placeholder\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/symfony/console/CI/GithubActionReporter.php" , line : 62usize , placeholders : & [] , exception : None , regex : "^error$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/symfony/console/CI/GithubActionReporter.php" , line : 72usize , placeholders : & [] , exception : None , regex : "^warning$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/symfony/console/CI/GithubActionReporter.php" , line : 82usize , placeholders : & [] , exception : None , regex : "^debug$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/3rdparty/symfony/console/EventListener/ErrorListener.php" , line : 43usize , placeholders : & ["{message}"] , exception : None , regex : "^An error occurred while using the console\\. Message: \"(.*)An error occurred while using the console\\. Message: \"\\{message\\}\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/3rdparty/symfony/console/EventListener/ErrorListener.php" , line : 48usize , placeholders : & ["{command}" , "{message}"] , exception : None , regex : "^Error thrown while running command \"(.*)\"\\. Message: \"(.*)Error thrown while running command \"\\{command\\}\"\\. Message: \"\\{message\\}\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/symfony/console/EventListener/ErrorListener.php" , line : 64usize , placeholders : & ["{code}"] , exception : None , regex : "^The console exited with code \"(.*)The console exited with code \"\\{code\\}\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/symfony/console/EventListener/ErrorListener.php" , line : 69usize , placeholders : & ["{command}" , "{code}"] , exception : None , regex : "^Command \"(.*)\" exited with code \"(.*)Command \"\\{command\\}\" exited with code \"\\{code\\}\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Descriptor/Descriptor.php" , line : 58usize , placeholders : & ["sprintf('Object of type \"%s\" is not describable.', get_debug_type($object))"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Descriptor/ApplicationDescription.php" , line : 80usize , placeholders : & ["sprintf('Command \"%s\" does not exist.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\CommandNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Color.php" , line : 63usize , placeholders : & ["sprintf('Invalid option specified: \"%s\". Expected one of (%s).', $option, implode(', ', array_keys(self::AVAILABLE_OPTIONS)))"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Color.php" , line : 127usize , placeholders : & ["sprintf('Invalid \"%s\" color.', $color)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Color.php" , line : 141usize , placeholders : & ["sprintf('Invalid \"%s\" color; expected one of (%s).', $color, implode(', ', array_merge(array_keys(self::COLORS), array_keys(self::BRIGHT_COLORS))))"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/DependencyInjection/AddConsoleCommandPass.php" , line : 65usize , placeholders : & ["sprintf('Class \"%s\" used for service \"%s\" cannot be found.', $class, $id)"] , exception : Some ("Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/DependencyInjection/AddConsoleCommandPass.php" , line : 68usize , placeholders : & ["sprintf('The service \"%s\" tagged \"%s\" must be a subclass of \"%s\".', $id, $this->commandTag, Command::class)"] , exception : Some ("Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/DependencyInjection/AddConsoleCommandPass.php" , line : 122usize , placeholders : & ["sprintf('Class \"%s\" used for service \"%s\" cannot be found.', $class, $id)"] , exception : Some ("Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/DependencyInjection/AddConsoleCommandPass.php" , line : 125usize , placeholders : & ["sprintf('The service \"%s\" tagged \"%s\" must be a subclass of \"%s\".', $id, $this->commandTag, Command::class)"] , exception : Some ("Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Tester/TesterTrait.php" , line : 45usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Output not initialized, did you execute the command before requesting the display\\?$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Tester/TesterTrait.php" , line : 69usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^The error output is not available when the tester is run without \"capture_stderr_separately\" option set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Tester/TesterTrait.php" , line : 113usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Status code not initialized, did you execute the command before requesting the status code\\?$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Completion/CompletionInput.php" , line : 224usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Current index is invalid, it must be the number of input tokens or one more\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Question/ChoiceQuestion.php" , line : 36usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Choice question must have at least 1 choice available\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Question/ChoiceQuestion.php" , line : 129usize , placeholders : & ["sprintf($errorMessage, $selected)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Question/ChoiceQuestion.php" , line : 153usize , placeholders : & ["sprintf('The provided answer is ambiguous. Value should be one of \"%s\".', implode('\" or \"', $results))"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Question/ChoiceQuestion.php" , line : 169usize , placeholders : & ["sprintf($errorMessage, $value)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Question/Question.php" , line : 105usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^A hidden question cannot use the autocompleter\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Question/Question.php" , line : 192usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^A hidden question cannot use the autocompleter\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Question/Question.php" , line : 234usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^Maximum number of attempts must be a positive value\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Logger/ConsoleLogger.php" , line : 70usize , placeholders : & ["sprintf('The log level \"%s\" does not exist.', $level)"] , exception : Some ("Psr\\Log\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Application.php" , line : 119usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\RuntimeException") , regex : "^Signals are not supported\\. Make sure that the `pcntl` extension is installed and that \"pcntl_\\*\" functions are not disabled by your php\\.ini's \"disable_functions\" directive\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Application.php" , line : 541usize , placeholders : & ["sprintf('The command defined in \"%s\" cannot have an empty name.', get_debug_type($command))"] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Application.php" , line : 565usize , placeholders : & ["sprintf('The command \"%s\" does not exist.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\CommandNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Application.php" , line : 570usize , placeholders : & ["sprintf('The \"%s\" command cannot be found because it is registered under multiple names. Make sure you don\\'t set a different name via constructor or \"setName()\".', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\CommandNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Application.php" , line : 650usize , placeholders : & ["$message"] , exception : Some ("Symfony\\Component\\Console\\Exception\\NamespaceNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Application.php" , line : 655usize , placeholders : & ["sprintf(\"The namespace \\\"%s\\\" is ambiguous.\\nDid you mean one of these?\\n%s.\", $namespace, $this->getAbbreviationSuggestions(array_values($namespaces)))"] , exception : Some ("Symfony\\Component\\Console\\Exception\\NamespaceNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Application.php" , line : 720usize , placeholders : & ["$message"] , exception : Some ("Symfony\\Component\\Console\\Exception\\CommandNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Application.php" , line : 761usize , placeholders : & ["sprintf(\"Command \\\"%s\\\" is ambiguous.\\nDid you mean one of these?\\n%s.\", $name, $suggestions)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\CommandNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Application.php" , line : 768usize , placeholders : & ["sprintf('The command \"%s\" does not exist.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\CommandNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Application.php" , line : 1003usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\RuntimeException") , regex : "^Unable to subscribe to signal events\\. Make sure that the `pcntl` extension is installed and that \"pcntl_\\*\" functions are not disabled by your php\\.ini's \"disable_functions\" directive\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/ArrayInput.php" , line : 154usize , placeholders : & ["sprintf('The \"-%s\" option does not exist.', $shortcut)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidOptionException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/ArrayInput.php" , line : 170usize , placeholders : & ["sprintf('The \"--%s\" option does not exist.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidOptionException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/ArrayInput.php" , line : 183usize , placeholders : & ["sprintf('The \"--%s\" option requires a value.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidOptionException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/ArrayInput.php" , line : 205usize , placeholders : & ["sprintf('The \"%s\" argument does not exist.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/StringInput.php" , line : 72usize , placeholders : & ["sprintf('Unable to parse input near \"... %s ...\".', substr($input, $cursor, 10))"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputOption.php" , line : 69usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^An option name cannot be empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputOption.php" , line : 85usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^An option shortcut cannot be empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputOption.php" , line : 92usize , placeholders : & ["sprintf('Option mode \"%s\" is not valid.', $mode)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputOption.php" , line : 101usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^Impossible to have an option mode VALUE_IS_ARRAY if the option does not accept a value\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputOption.php" , line : 104usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^Impossible to have an option mode VALUE_NEGATABLE if the option also accepts a value\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputOption.php" , line : 181usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^Cannot set a default value when using InputOption::VALUE_NONE mode\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputOption.php" , line : 188usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^A default value for an array option must be an array\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/Input.php" , line : 76usize , placeholders : & ["sprintf('Not enough arguments (missing: \"%s\").', implode(', ', $missingArguments))"] , exception : Some ("Symfony\\Component\\Console\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/Input.php" , line : 110usize , placeholders : & ["sprintf('The \"%s\" argument does not exist.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/Input.php" , line : 122usize , placeholders : & ["sprintf('The \"%s\" argument does not exist.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/Input.php" , line : 158usize , placeholders : & ["sprintf('The \"%s\" option does not exist.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/Input.php" , line : 174usize , placeholders : & ["sprintf('The \"%s\" option does not exist.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputDefinition.php" , line : 100usize , placeholders : & ["sprintf('An argument with name \"%s\" already exists.', $argument->getName())"] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputDefinition.php" , line : 104usize , placeholders : & ["sprintf('Cannot add a required argument \"%s\" after an array argument \"%s\".', $argument->getName(), $this->lastArrayArgument->getName())"] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputDefinition.php" , line : 108usize , placeholders : & ["sprintf('Cannot add a required argument \"%s\" after an optional one \"%s\".', $argument->getName(), $this->lastOptionalArgument->getName())"] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputDefinition.php" , line : 136usize , placeholders : & ["sprintf('The \"%s\" argument does not exist.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputDefinition.php" , line : 232usize , placeholders : & ["sprintf('An option named \"%s\" already exists.', $option->getName())"] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputDefinition.php" , line : 235usize , placeholders : & ["sprintf('An option named \"%s\" already exists.', $option->getName())"] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputDefinition.php" , line : 241usize , placeholders : & ["sprintf('An option with shortcut \"%s\" already exists.', $shortcut)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputDefinition.php" , line : 256usize , placeholders : & ["sprintf('An option named \"%s\" already exists.', $negatedName)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputDefinition.php" , line : 272usize , placeholders : & ["sprintf('The \"--%s\" option does not exist.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputDefinition.php" , line : 352usize , placeholders : & ["sprintf('The \"-%s\" option does not exist.', $shortcut)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputDefinition.php" , line : 368usize , placeholders : & ["sprintf('The \"--%s\" option does not exist.', $negation)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputArgument.php" , line : 46usize , placeholders : & ["sprintf('Argument mode \"%s\" is not valid.', $mode)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputArgument.php" , line : 96usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^Cannot set a default value except for InputArgument::OPTIONAL mode\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/InputArgument.php" , line : 103usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^A default value for an array argument must be an array\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/ArgvInput.php" , line : 122usize , placeholders : & ["sprintf('The \"-%s\" option does not exist.', false === $encoding ? $name[$i] : mb_substr($name, $i, 1, $encoding))"] , exception : Some ("Symfony\\Component\\Console\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/ArgvInput.php" , line : 193usize , placeholders : & ["$message"] , exception : Some ("Symfony\\Component\\Console\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/ArgvInput.php" , line : 205usize , placeholders : & ["sprintf('The \"-%s\" option does not exist.', $shortcut)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/ArgvInput.php" , line : 220usize , placeholders : & ["sprintf('The \"--%s\" option does not exist.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/ArgvInput.php" , line : 225usize , placeholders : & ["sprintf('The \"--%s\" option does not accept a value.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/ArgvInput.php" , line : 235usize , placeholders : & ["sprintf('The \"--%s\" option does not accept a value.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Input/ArgvInput.php" , line : 251usize , placeholders : & ["sprintf('The \"--%s\" option requires a value.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/CommandLoader/ContainerCommandLoader.php" , line : 42usize , placeholders : & ["sprintf('Command \"%s\" does not exist.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\CommandNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/CommandLoader/FactoryCommandLoader.php" , line : 47usize , placeholders : & ["sprintf('Command \"%s\" does not exist.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\CommandNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/TableCell.php" , line : 34usize , placeholders : & ["sprintf('The TableCell does not support the following options: \\'%s\\'.', implode('\\', \\'', $diff))"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/TableCell.php" , line : 38usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^The style option must be an instance of \"TableCellStyle\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/ProcessHelper.php" , line : 38usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^The ProcessHelper cannot be run as the Process component is not installed\\. Try running \"compose require symfony/process\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/ProcessHelper.php" , line : 52usize , placeholders : & ["sprintf('The \"command\" argument of \"%s()\" must be an array or a \"%s\" instance, \"%s\" given.', __METHOD__, Process::class, get_debug_type($cmd))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/ProcessHelper.php" , line : 62usize , placeholders : & ["sprintf('Invalid command provided to \"%s()\": the command should be an array whose first element is either the path to the binary to run or a \"Process\" object.', __METHOD__)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/ProcessHelper.php" , line : 106usize , placeholders : & ["$process"] , exception : Some ("Symfony\\Component\\Process\\Exception\\ProcessFailedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/ProgressBar.php" , line : 529usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^Unable to display the remaining time if the maximum number of steps is not set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/ProgressBar.php" , line : 536usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^Unable to display the estimated time if the maximum number of steps is not set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/QuestionHelper.php" , line : 144usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\MissingInputException") , regex : "^Aborted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/QuestionHelper.php" , line : 287usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\MissingInputException") , regex : "^Aborted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/QuestionHelper.php" , line : 446usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\RuntimeException") , regex : "^Unable to hide the response\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/QuestionHelper.php" , line : 456usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\MissingInputException") , regex : "^Aborted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/TableCellStyle.php" , line : 46usize , placeholders : & ["sprintf('The TableCellStyle does not support the following options: \\'%s\\'.', implode('\\', \\'', $diff))"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/TableCellStyle.php" , line : 50usize , placeholders : & ["sprintf('Wrong align value. Value must be following: \\'%s\\'.', implode('\\', \\'', array_keys(self::ALIGN_MAP)))"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/symfony/console/Helper/SymfonyQuestionHelper.php" , line : 93usize , placeholders : & ["$error->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/DescriptorHelper.php" , line : 61usize , placeholders : & ["sprintf('Unsupported format \"%s\".', $options['format'])"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/HelperSet.php" , line : 70usize , placeholders : & ["sprintf('The helper \"%s\" is not defined.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/ProgressIndicator.php" , line : 68usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^Must have at least 2 indicator value characters\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/ProgressIndicator.php" , line : 93usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^Progress indicator already started\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/ProgressIndicator.php" , line : 111usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^Progress indicator has not yet been started\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/ProgressIndicator.php" , line : 136usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^Progress indicator has not yet been started\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/TableStyle.php" , line : 59usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^The padding char must not be empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/TableStyle.php" , line : 329usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^Invalid padding type\\. Expected one of \\(STR_PAD_LEFT, STR_PAD_RIGHT, STR_PAD_BOTH\\)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/Table.php" , line : 133usize , placeholders : & ["sprintf('Style \"%s\" is not defined.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/Table.php" , line : 224usize , placeholders : & ["sprintf('Setting a maximum column width is only supported when using a \"%s\" formatter, got \"%s\".', WrappableOutputFormatterInterface::class, get_debug_type($this->output->getFormatter()))"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/Table.php" , line : 278usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^A row must be an array or a TableSeparator instance\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/Table.php" , line : 294usize , placeholders : & ["sprintf('Output should be an instance of \"%s\" when calling \"%s\".', ConsoleSectionOutput::class, __METHOD__)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/Table.php" , line : 682usize , placeholders : & ["sprintf('A cell must be a TableCell, a scalar or an object implementing \"__toString()\", \"%s\" given.', get_debug_type($cell))"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Helper/Table.php" , line : 913usize , placeholders : & ["sprintf('Style \"%s\" is not defined.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Command/CompleteCommand.php" , line : 80usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^The \"\\-\\-shell\" option must be set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Command/CompleteCommand.php" , line : 84usize , placeholders : & ["sprintf('Shell completion is not supported for your shell: \"%s\" (supported: \"%s\").', $shell, implode('\", \"', array_keys($this->completionOutputs)))"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/symfony/console/Command/CompleteCommand.php" , line : 90usize , placeholders : & ["[\n                '',\n                '<comment>'.date('Y-m-d H:i:s').'</>',\n                '<info>Input:</> <comment>(\"|\" indicates the cursor position)</>',\n                '  '.(string) $completionInput,\n                '<info>Command:</>',\n                '  '.(string) implode(' ', $_SERVER['argv']),\n                '<info>Messages:</>',\n            ]"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/symfony/console/Command/CompleteCommand.php" , line : 102usize , placeholders : & [] , exception : None , regex : "^  No command found, completing using the Application class\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/symfony/console/Command/CompleteCommand.php" , line : 110usize , placeholders : & [] , exception : None , regex : "^  No command found, completing using the Application class\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/symfony/console/Command/CompleteCommand.php" , line : 119usize , placeholders : & ["\\get_class($command instanceof LazyCommand ? $command->getCommand() : $command)"] , exception : None , regex : "^  Completing option names for the <comment>(.*)</> command\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/symfony/console/Command/CompleteCommand.php" , line : 123usize , placeholders : & ["[\n                        '  Completing using the <comment>'.\\get_class($command instanceof LazyCommand ? $command->getCommand() : $command).'</> class.',\n                        '  Completing <comment>'.$completionInput->getCompletionType().'</> for <comment>'.$completionInput->getCompletionName().'</>',\n                    ]"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/symfony/console/Command/CompleteCommand.php" , line : 128usize , placeholders : & ["$compval"] , exception : None , regex : "^  Current value: <comment>(.*)</>$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/symfony/console/Command/CompleteCommand.php" , line : 138usize , placeholders : & [] , exception : None , regex : "^<info>Suggestions:</>$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/symfony/console/Command/CompleteCommand.php" , line : 140usize , placeholders : & ["implode(' --', array_map(function ($o) { return $o->getName(); }, $options))"] , exception : None , regex : "^  \\-\\-(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/symfony/console/Command/CompleteCommand.php" , line : 142usize , placeholders : & ["implode(' ', $values)"] , exception : None , regex : "^  (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/symfony/console/Command/CompleteCommand.php" , line : 144usize , placeholders : & [] , exception : None , regex : "^  <comment>No suggestions were provided</>$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/3rdparty/symfony/console/Command/CompleteCommand.php" , line : 149usize , placeholders : & ["[\n                '<error>Error!</error>',\n                (string) $e,\n            ]"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Command/CompleteCommand.php" , line : 168usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^The \"\\-\\-current\" option must be set and it must be an integer\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Command/LockableTrait.php" , line : 36usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^To enable the locking feature you must install the symfony/lock component\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Command/LockableTrait.php" , line : 40usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^A lock is already in place\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Command/Command.php" , line : 208usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^You must override the execute\\(\\) method in the concrete command class\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Command/Command.php" , line : 301usize , placeholders : & ["sprintf('Return value of \"%s::execute()\" must be of the type int, \"%s\" returned.', static::class, get_debug_type($statusCode))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Command/Command.php" , line : 420usize , placeholders : & ["sprintf('Command class \"%s\" is not correctly initialized. You probably forgot to call the parent constructor.', static::class)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Command/Command.php" , line : 691usize , placeholders : & ["sprintf('Cannot retrieve helper \"%s\" because there is no HelperSet defined. Did you forget to add your command to the application or to set the application on the command using the setApplication() method? You can also set the HelperSet directly using the setHelperSet() method.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Command/Command.php" , line : 707usize , placeholders : & ["sprintf('Command name \"%s\" is invalid.', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Style/SymfonyStyle.php" , line : 241usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^Value should be an array, string, or an instance of TableSeparator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Style/SymfonyStyle.php" , line : 432usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\RuntimeException") , regex : "^The ProgressBar is not started\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Formatter/OutputFormatterStyleStack.php" , line : 76usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^Incorrectly nested style tag found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Formatter/OutputFormatter.php" , line : 126usize , placeholders : & ["sprintf('Undefined style: \"%s\".', $name)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Output/TrimmedBufferOutput.php" , line : 30usize , placeholders : & ["sprintf('\"%s()\" expects a strictly positive maxLength. Got %d.', __METHOD__, $maxLength)"] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/console/Output/StreamOutput.php" , line : 45usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Console\\Exception\\InvalidArgumentException") , regex : "^The StreamOutput class needs a stream as its first argument\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/InputStream.php" , line : 50usize , placeholders : & ["sprintf('\"%s\" is closed.', static::class)"] , exception : Some ("Symfony\\Component\\Process\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 146usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\LogicException") , regex : "^The Process class relies on proc_open, which is not available on your PHP installation\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 205usize , placeholders : & ["__CLASS__"] , exception : Some ("BadMethodCallException") , regex : "^Cannot serialize (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 210usize , placeholders : & ["__CLASS__"] , exception : Some ("BadMethodCallException") , regex : "^Cannot unserialize (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 272usize , placeholders : & ["$this"] , exception : Some ("Symfony\\Component\\Process\\Exception\\ProcessFailedException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 300usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\RuntimeException") , regex : "^Process is already running\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 349usize , placeholders : & ["sprintf('The provided cwd \"%s\" does not exist.', $this->cwd)"] , exception : Some ("Symfony\\Component\\Process\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 355usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\RuntimeException") , regex : "^Unable to launch a new process\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 391usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\RuntimeException") , regex : "^Process is already running\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 424usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\LogicException") , regex : "^Pass the callback to the \"Process::start\" method or call enableOutput to use a callback with \"Process::wait\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 441usize , placeholders : & ["$this"] , exception : Some ("Symfony\\Component\\Process\\Exception\\ProcessSignaledException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 465usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\LogicException") , regex : "^Pass the callback to the \"Process::start\" method or call enableOutput to use a callback with \"Process::waitUntil\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 532usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\RuntimeException") , regex : "^Disabling output while the process is running is not possible\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 535usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\LogicException") , regex : "^Output cannot be disabled while an idle timeout is set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 553usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\RuntimeException") , regex : "^Enabling output while the process is running is not possible\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 819usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\RuntimeException") , regex : "^This PHP has been compiled with \\-\\-enable\\-sigchild\\. Term signal cannot be retrieved\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 1041usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\LogicException") , regex : "^Idle timeout cannot be set while the output is disabled\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 1059usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\RuntimeException") , regex : "^TTY mode is not supported on Windows platform\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 1063usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\RuntimeException") , regex : "^TTY mode requires /dev/tty to be read/writable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 1179usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\LogicException") , regex : "^Input cannot be set while the process is running\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 1204usize , placeholders : & ["$this"] , exception : Some ("Symfony\\Component\\Process\\Exception\\ProcessTimedOutException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 1210usize , placeholders : & ["$this"] , exception : Some ("Symfony\\Component\\Process\\Exception\\ProcessTimedOutException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 1220usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\LogicException") , regex : "^Start time is only available after process start\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 1237usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\RuntimeException") , regex : "^Setting options while the process is running is not possible\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 1246usize , placeholders : & ["sprintf('Invalid option \"%s\" passed to \"%s()\". Supported options are \"%s\".', $key, __METHOD__, implode('\", \"', $existingOptions))"] , exception : Some ("Symfony\\Component\\Process\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 1391usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\LogicException") , regex : "^Output has been disabled\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 1411usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\InvalidArgumentException") , regex : "^The timeout value must be a valid positive integer or float number\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 1502usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\LogicException") , regex : "^Cannot send signal on a non running process\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 1512usize , placeholders : & ["sprintf('Unable to kill the process (%s).', implode(' ', $output))"] , exception : Some ("Symfony\\Component\\Process\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 1527usize , placeholders : & ["sprintf('Error while sending signal \"%s\".', $signal)"] , exception : Some ("Symfony\\Component\\Process\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 1596usize , placeholders : & ["sprintf('Process must be started before calling \"%s()\".', $functionName)"] , exception : Some ("Symfony\\Component\\Process\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 1608usize , placeholders : & ["sprintf('Process must be terminated before calling \"%s()\".', $functionName)"] , exception : Some ("Symfony\\Component\\Process\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Process.php" , line : 1638usize , placeholders : & ["sprintf('Command line is missing a value for parameter \"%s\": ', $matches[1])" , "$commandline"] , exception : Some ("Symfony\\Component\\Process\\Exception\\InvalidArgumentException") , regex : "^(.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Pipes/UnixPipes.php" , line : 40usize , placeholders : & ["__CLASS__"] , exception : Some ("BadMethodCallException") , regex : "^Cannot serialize (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Pipes/UnixPipes.php" , line : 45usize , placeholders : & ["__CLASS__"] , exception : Some ("BadMethodCallException") , regex : "^Cannot unserialize (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Pipes/WindowsPipes.php" , line : 63usize , placeholders : & ["$lastError"] , exception : Some ("Symfony\\Component\\Process\\Exception\\RuntimeException") , regex : "^A temporary file could not be opened to write the process output: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Pipes/WindowsPipes.php" , line : 93usize , placeholders : & ["__CLASS__"] , exception : Some ("BadMethodCallException") , regex : "^Cannot serialize (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Pipes/WindowsPipes.php" , line : 98usize , placeholders : & ["__CLASS__"] , exception : Some ("BadMethodCallException") , regex : "^Cannot unserialize (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Pipes/AbstractPipes.php" , line : 108usize , placeholders : & ["sprintf('\"%s\" yielded a value of type \"%s\", but only scalars and stream resources are supported.', get_debug_type($this->input), get_debug_type($input))"] , exception : Some ("Symfony\\Component\\Process\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/ProcessUtils.php" , line : 64usize , placeholders : & ["sprintf('\"%s\" only accepts strings, Traversable objects or stream resources.', $caller)"] , exception : Some ("Symfony\\Component\\Process\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/PhpProcess.php" , line : 58usize , placeholders : & ["sprintf('The \"%s()\" method cannot be called when using \"%s\".', __METHOD__, self::class)"] , exception : Some ("Symfony\\Component\\Process\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/PhpProcess.php" , line : 67usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\RuntimeException") , regex : "^Unable to find the PHP executable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Exception/ProcessFailedException.php" , line : 28usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Process\\Exception\\InvalidArgumentException") , regex : "^Expected a failed process, but the given process was successful\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/process/Exception/ProcessTimedOutException.php" , line : 66usize , placeholders : & ["sprintf('Unknown timeout type \"%d\".', $this->timeoutType)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/css-selector/XPath/Extension/PseudoClassExtension.php" , line : 73usize , placeholders : & [] , exception : Some ("Symfony\\Component\\CssSelector\\Exception\\ExpressionErrorException") , regex : "^\"\\*:first\\-of\\-type\" is not implemented\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/css-selector/XPath/Extension/PseudoClassExtension.php" , line : 87usize , placeholders : & [] , exception : Some ("Symfony\\Component\\CssSelector\\Exception\\ExpressionErrorException") , regex : "^\"\\*:last\\-of\\-type\" is not implemented\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/css-selector/XPath/Extension/HtmlExtension.php" , line : 147usize , placeholders : & ["implode(', ', $arguments)"] , exception : Some ("Symfony\\Component\\CssSelector\\Exception\\ExpressionErrorException") , regex : "^Expected a single string or identifier for :lang\\(\\), got (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/css-selector/XPath/Extension/FunctionExtension.php" , line : 56usize , placeholders : & ["sprintf('Invalid series: \"%s\".', implode('\", \"', $function->getArguments()))"] , exception : Some ("Symfony\\Component\\CssSelector\\Exception\\ExpressionErrorException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/css-selector/XPath/Extension/FunctionExtension.php" , line : 122usize , placeholders : & [] , exception : Some ("Symfony\\Component\\CssSelector\\Exception\\ExpressionErrorException") , regex : "^\"\\*:nth\\-of\\-type\\(\\)\" is not implemented\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/css-selector/XPath/Extension/FunctionExtension.php" , line : 136usize , placeholders : & ["implode(', ', $arguments)"] , exception : Some ("Symfony\\Component\\CssSelector\\Exception\\ExpressionErrorException") , regex : "^Expected a single string or identifier for :contains\\(\\), got (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/css-selector/XPath/Extension/FunctionExtension.php" , line : 154usize , placeholders : & ["implode(', ', $arguments)"] , exception : Some ("Symfony\\Component\\CssSelector\\Exception\\ExpressionErrorException") , regex : "^Expected a single string or identifier for :lang\\(\\), got (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/css-selector/XPath/Translator.php" , line : 100usize , placeholders : & [] , exception : Some ("Symfony\\Component\\CssSelector\\Exception\\ExpressionErrorException") , regex : "^Pseudo\\-elements are not supported\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/css-selector/XPath/Translator.php" , line : 139usize , placeholders : & ["sprintf('Extension \"%s\" not registered.', $name)"] , exception : Some ("Symfony\\Component\\CssSelector\\Exception\\ExpressionErrorException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/css-selector/XPath/Translator.php" , line : 161usize , placeholders : & ["sprintf('Node \"%s\" not supported.', $node->getNodeName())"] , exception : Some ("Symfony\\Component\\CssSelector\\Exception\\ExpressionErrorException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/css-selector/XPath/Translator.php" , line : 173usize , placeholders : & ["sprintf('Combiner \"%s\" not supported.', $combiner)"] , exception : Some ("Symfony\\Component\\CssSelector\\Exception\\ExpressionErrorException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/css-selector/XPath/Translator.php" , line : 185usize , placeholders : & ["sprintf('Function \"%s\" not supported.', $function->getName())"] , exception : Some ("Symfony\\Component\\CssSelector\\Exception\\ExpressionErrorException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/css-selector/XPath/Translator.php" , line : 197usize , placeholders : & ["sprintf('Pseudo-class \"%s\" not supported.', $pseudoClass)"] , exception : Some ("Symfony\\Component\\CssSelector\\Exception\\ExpressionErrorException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/css-selector/XPath/Translator.php" , line : 209usize , placeholders : & ["sprintf('Attribute matcher operator \"%s\" not supported.', $operator)"] , exception : Some ("Symfony\\Component\\CssSelector\\Exception\\ExpressionErrorException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/css-selector/Parser/TokenStream.php" , line : 91usize , placeholders : & [] , exception : Some ("Symfony\\Component\\CssSelector\\Exception\\InternalErrorException") , regex : "^Unexpected token stream end\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/css-selector/Parser/Handler/StringHandler.php" , line : 58usize , placeholders : & ["sprintf('Should have found at least an empty match at %d.', $reader->getPosition())"] , exception : Some ("Symfony\\Component\\CssSelector\\Exception\\InternalErrorException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Crypto/SMime.php" , line : 27usize , placeholders : & ["sprintf('File does not exist: \"%s\".', $path)"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Crypto/SMimeEncrypter.php" , line : 32usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^PHP extension \"openssl\" is required to use SMime\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Crypto/SMimeEncrypter.php" , line : 52usize , placeholders : & ["sprintf('Failed to encrypt S/Mime message. Error: \"%s\".', openssl_error_string())"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Crypto/SMimeSigner.php" , line : 37usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^PHP extension \"openssl\" is required to use SMime\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Crypto/SMimeSigner.php" , line : 60usize , placeholders : & ["sprintf('Failed to sign S/Mime message. Error: \"%s\".', openssl_error_string())"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Crypto/DkimSigner.php" , line : 45usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^PHP extension \"openssl\" is required to use DKIM\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Crypto/DkimSigner.php" , line : 48usize , placeholders : & ["openssl_error_string()"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\InvalidArgumentException") , regex : "^Unable to load DKIM private key: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Crypto/DkimSigner.php" , line : 68usize , placeholders : & ["sprintf('Invalid DKIM signing algorithm \"%s\".', $options['algorithm'])"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Crypto/DkimSigner.php" , line : 122usize , placeholders : & ["openssl_error_string()"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\RuntimeException") , regex : "^Unable to sign DKIM hash: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Crypto/DkimSigner.php" , line : 125usize , placeholders : & ["sprintf('The \"%s\" DKIM signing algorithm is not supported yet.', self::ALGO_ED25519)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Message.php" , line : 78usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Mime\\Exception\\LogicException") , regex : "^An email must have a \"From\" or a \"Sender\" header\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Message.php" , line : 128usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Mime\\Exception\\LogicException") , regex : "^An email must have a \"To\", \"Cc\", or \"Bcc\" header\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Message.php" , line : 132usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Mime\\Exception\\LogicException") , regex : "^An email must have a \"From\" or a \"Sender\" header\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Message.php" , line : 145usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Mime\\Exception\\LogicException") , regex : "^An email must have a \"From\" or a \"Sender\" header\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Encoder/QpContentEncoder.php" , line : 22usize , placeholders : & ["sprintf('Method \"%s\" takes a stream as a first argument.', __METHOD__)"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Encoder/Base64ContentEncoder.php" , line : 24usize , placeholders : & ["sprintf('Method \"%s\" takes a stream as a first argument.', __METHOD__)"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Encoder/Base64ContentEncoder.php" , line : 32usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Mime\\Exception\\RuntimeException") , regex : "^Unable to set the base64 content encoder to the filter\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Address.php" , line : 45usize , placeholders : & ["sprintf('The \"%s\" class cannot be used as it needs \"%s\"; try running \"composer require egulias/email-validator\".', __CLASS__, EmailValidator::class)"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Address.php" , line : 56usize , placeholders : & ["sprintf('Email \"%s\" does not comply with addr-spec of RFC 2822.', $address)"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\RfcComplianceException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Address.php" , line : 103usize , placeholders : & ["sprintf('An address can be an instance of Address or a string (\"%s\" given).', get_debug_type($address))"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Address.php" , line : 111usize , placeholders : & ["sprintf('Could not parse \"%s\" to a \"%s\" instance.', $address, self::class)"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Address.php" , line : 144usize , placeholders : & ["sprintf('Could not parse \"%s\" to a \"%s\" instance.', $string, self::class)"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Header/Headers.php" , line : 173usize , placeholders : & ["sprintf('Impossible to set header \"%s\" as it\\'s already defined and must be unique.', $header->getName())"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Header/Headers.php" , line : 231usize , placeholders : & ["sprintf('The \"%s\" header must be an instance of \"%s\" (got \"%s\").', $header->getName(), $c, get_debug_type($header))"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Header/Headers.php" , line : 285usize , placeholders : & ["sprintf('Unable to get parameter \"%s\" on header \"%s\" as the header is not of class \"%s\".', $parameter, $name, ParameterizedHeader::class)"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Header/Headers.php" , line : 297usize , placeholders : & ["sprintf('Unable to set parameter \"%s\" on header \"%s\" as the header is not defined.', $parameter, $name)"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Header/Headers.php" , line : 302usize , placeholders : & ["sprintf('Unable to set parameter \"%s\" on header \"%s\" as the header is not of class \"%s\".', $parameter, $name, ParameterizedHeader::class)"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Email.php" , line : 286usize , placeholders : & ["sprintf('The body must be a string, a resource or null (got \"%s\").', get_debug_type($body))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Email.php" , line : 317usize , placeholders : & ["sprintf('The body must be a string, a resource or null (got \"%s\").', get_debug_type($body))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Email.php" , line : 348usize , placeholders : & ["sprintf('The body must be a string or a resource (got \"%s\").', get_debug_type($body))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Email.php" , line : 376usize , placeholders : & ["sprintf('The body must be a string or a resource (got \"%s\").', get_debug_type($body))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Email.php" , line : 432usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Mime\\Exception\\LogicException") , regex : "^A message must have a text or an HTML part or attachments\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/FileinfoMimeTypeGuesser.php" , line : 50usize , placeholders : & ["sprintf('The \"%s\" file does not exist or is not readable.', $path)"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/FileinfoMimeTypeGuesser.php" , line : 54usize , placeholders : & ["sprintf('The \"%s\" guesser is not supported.', __CLASS__)"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Part/SMimePart.php" , line : 39usize , placeholders : & ["sprintf('The body of \"%s\" must be a string or a iterable (got \"%s\").', self::class, get_debug_type($body))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Part/TextPart.php" , line : 52usize , placeholders : & ["sprintf('The body of \"%s\" must be a string or a resource (got \"%s\").', self::class, get_debug_type($body))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Part/TextPart.php" , line : 64usize , placeholders : & ["sprintf('The encoding must be one of \"quoted-printable\", \"base64\", or \"8bit\" (\"%s\" given).', $encoding)"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Part/Multipart/FormDataPart.php" , line : 37usize , placeholders : & ["sprintf('A form field value can only be a string, an array, or an instance of TextPart (\"%s\" given).', get_debug_type($value))"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Part/Multipart/FormDataPart.php" , line : 63usize , placeholders : & ["sprintf('Form field values with integer keys can only have one array element, the key being the field name and the value being the field value, %d provided.', \\count($item))"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Part/DataPart.php" , line : 65usize , placeholders : & ["sprintf('Path \"%s\" is not readable.', $path)"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Part/DataPart.php" , line : 69usize , placeholders : & ["sprintf('Unable to open path \"%s\".', $path)"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Part/DataPart.php" , line : 171usize , placeholders : & ["__CLASS__"] , exception : Some ("BadMethodCallException") , regex : "^Cannot unserialize (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/Part/DataPart.php" , line : 175usize , placeholders : & ["__CLASS__"] , exception : Some ("BadMethodCallException") , regex : "^Cannot unserialize (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/FileBinaryMimeTypeGuesser.php" , line : 67usize , placeholders : & ["sprintf('The \"%s\" file does not exist or is not readable.', $path)"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/FileBinaryMimeTypeGuesser.php" , line : 71usize , placeholders : & ["sprintf('The \"%s\" guesser is not supported.', __CLASS__)"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/MimeTypes.php" , line : 140usize , placeholders : & [] , exception : Some ("Symfony\\Component\\Mime\\Exception\\LogicException") , regex : "^Unable to guess the MIME type as no guessers are available \\(have you enabled the php_fileinfo extension\\?\\)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/MessageConverter.php" , line : 58usize , placeholders : & ["sprintf('Unable to create an Email from an instance of \"%s\" as the body is too complex.', get_debug_type($message))"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/MessageConverter.php" , line : 64usize , placeholders : & ["sprintf('Unable to create an Email from an instance of \"%s\" as the body is too complex.', get_debug_type($message))"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/MessageConverter.php" , line : 76usize , placeholders : & ["sprintf('Unable to create an Email from an instance of \"%s\" as the body is too complex.', get_debug_type($message))"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/MessageConverter.php" , line : 93usize , placeholders : & ["sprintf('Unable to create an Email from an instance of \"%s\" as the body is too complex.', get_debug_type($message))"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/MessageConverter.php" , line : 104usize , placeholders : & ["sprintf('Unable to create an Email from an instance of \"%s\" as the body is too complex.', get_debug_type($message))"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/mime/MessageConverter.php" , line : 114usize , placeholders : & ["sprintf('Unable to create an Email from an instance of \"%s\" as the body is too complex.', get_debug_type($email))"] , exception : Some ("Symfony\\Component\\Mime\\Exception\\RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/ByteString.php" , line : 48usize , placeholders : & ["sprintf('A strictly positive length is expected, \"%d\" given.', $length)"] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/ByteString.php" , line : 55usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^The length of the alphabet must in the \\[2\\^1, 2\\^56\\] range\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/ByteString.php" , line : 117usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^The chunk length must be greater than zero\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/ByteString.php" , line : 239usize , placeholders : & ["$m"] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/ByteString.php" , line : 247usize , placeholders : & ["$k"] , exception : Some ("Symfony\\Component\\String\\Exception\\RuntimeException") , regex : "^Matching failed with (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/ByteString.php" , line : 251usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\RuntimeException") , regex : "^Matching failed with unknown error code\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/ByteString.php" , line : 311usize , placeholders : & ["$m"] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/ByteString.php" , line : 319usize , placeholders : & ["$k"] , exception : Some ("Symfony\\Component\\String\\Exception\\RuntimeException") , regex : "^Matching failed with (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/ByteString.php" , line : 323usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\RuntimeException") , regex : "^Matching failed with unknown error code\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/ByteString.php" , line : 370usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Split limit must be a positive integer\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/ByteString.php" , line : 374usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Split delimiter is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/ByteString.php" , line : 428usize , placeholders : & ["$m"] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/ByteString.php" , line : 447usize , placeholders : & ["sprintf('Invalid \"%s\" string.', $fromEncoding ?? 'Windows-1252')"] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractString.php" , line : 266usize , placeholders : & ["sprintf('Method \"%s()\" must be overridden by class \"%s\" to deal with non-iterable values.', __FUNCTION__, static::class)"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractString.php" , line : 315usize , placeholders : & ["sprintf('Method \"%s()\" must be overridden by class \"%s\" to deal with non-iterable values.', __FUNCTION__, static::class)"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractString.php" , line : 343usize , placeholders : & ["sprintf('Method \"%s()\" must be overridden by class \"%s\" to deal with non-iterable values.', __FUNCTION__, static::class)"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractString.php" , line : 365usize , placeholders : & ["sprintf('Method \"%s()\" must be overridden by class \"%s\" to deal with non-iterable values.', __FUNCTION__, static::class)"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractString.php" , line : 417usize , placeholders : & ["sprintf('Multiplier must be positive, %d given.', $multiplier)"] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractString.php" , line : 444usize , placeholders : & [] , exception : Some ("TypeError") , regex : "^Split behavior when \\$flags is null must be implemented by child classes\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractString.php" , line : 451usize , placeholders : & ["$m"] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractString.php" , line : 459usize , placeholders : & ["$k"] , exception : Some ("Symfony\\Component\\String\\Exception\\RuntimeException") , regex : "^Splitting failed with (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractString.php" , line : 463usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\RuntimeException") , regex : "^Splitting failed with unknown error code\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractString.php" , line : 492usize , placeholders : & ["sprintf('Method \"%s()\" must be overridden by class \"%s\" to deal with non-iterable values.', __FUNCTION__, static::class)"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractString.php" , line : 518usize , placeholders : & ["$m"] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractUnicodeString.php" , line : 131usize , placeholders : & ["sprintf('Unknown transliteration rule \"%s\".', $rule)"] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractUnicodeString.php" , line : 146usize , placeholders : & ["sprintf('\"%s\" requires a translit-able iconv implementation, try installing \"gnu-libiconv\" if you\\'re using Alpine Linux.', static::class)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractUnicodeString.php" , line : 211usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Invalid UTF\\-8 string\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractUnicodeString.php" , line : 233usize , placeholders : & ["$m"] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractUnicodeString.php" , line : 241usize , placeholders : & ["$k"] , exception : Some ("Symfony\\Component\\String\\Exception\\RuntimeException") , regex : "^Matching failed with (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractUnicodeString.php" , line : 245usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\RuntimeException") , regex : "^Matching failed with unknown error code\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractUnicodeString.php" , line : 257usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Unsupported normalization form\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractUnicodeString.php" , line : 269usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Invalid UTF\\-8 string\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractUnicodeString.php" , line : 281usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Invalid UTF\\-8 string\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractUnicodeString.php" , line : 293usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Invalid UTF\\-8 string\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractUnicodeString.php" , line : 314usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Replace callback must return a valid UTF\\-8 string\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractUnicodeString.php" , line : 320usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Invalid UTF\\-8 string\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractUnicodeString.php" , line : 325usize , placeholders : & ["$m"] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractUnicodeString.php" , line : 333usize , placeholders : & ["$k"] , exception : Some ("Symfony\\Component\\String\\Exception\\RuntimeException") , regex : "^Matching failed with (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractUnicodeString.php" , line : 337usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\RuntimeException") , regex : "^Matching failed with unknown error code\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractUnicodeString.php" , line : 381usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Invalid UTF\\-8 chars\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractUnicodeString.php" , line : 394usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Invalid UTF\\-8 chars\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractUnicodeString.php" , line : 427usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Invalid UTF\\-8 chars\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/AbstractUnicodeString.php" , line : 529usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Invalid padding type\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/LazyString.php" , line : 29usize , placeholders : & ["sprintf('Argument 1 passed to \"%s()\" must be a callable or a [Closure, method] lazy-callable, \"%s\" given.', __METHOD__, '['.implode(', ', array_map('get_debug_type', $callback)).']')"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/CodePointString.php" , line : 30usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Invalid UTF\\-8 string\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/CodePointString.php" , line : 42usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Invalid UTF\\-8 string\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/CodePointString.php" , line : 51usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^The chunk length must be greater than zero\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/CodePointString.php" , line : 162usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Invalid UTF\\-8 string\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/CodePointString.php" , line : 177usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Invalid UTF\\-8 string\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/CodePointString.php" , line : 200usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Invalid UTF\\-8 string\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/CodePointString.php" , line : 214usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Split limit must be a positive integer\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/CodePointString.php" , line : 218usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Split delimiter is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/CodePointString.php" , line : 226usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Split delimiter is not a valid UTF\\-8 string\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/Slugger/AsciiSlugger.php" , line : 19usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^You cannot use the \"Symfony\\\\Component\\\\String\\\\Slugger\\\\AsciiSlugger\" as the \"symfony/translation\\-contracts\" package is not installed\\. Try running \"composer require symfony/translation\\-contracts\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/UnicodeString.php" , line : 40usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Invalid UTF\\-8 string\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/UnicodeString.php" , line : 51usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Invalid UTF\\-8 string\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/UnicodeString.php" , line : 60usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^The chunk length must be greater than zero\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/UnicodeString.php" , line : 199usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Unsupported normalization form\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/UnicodeString.php" , line : 215usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Invalid UTF\\-8 string\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/UnicodeString.php" , line : 241usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Invalid UTF\\-8 string\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/UnicodeString.php" , line : 275usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Invalid UTF\\-8 string\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/UnicodeString.php" , line : 284usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Split limit must be a positive integer\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/UnicodeString.php" , line : 288usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Split delimiter is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/UnicodeString.php" , line : 298usize , placeholders : & [] , exception : Some ("Symfony\\Component\\String\\Exception\\InvalidArgumentException") , regex : "^Split delimiter is not a valid UTF\\-8 string\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/string/UnicodeString.php" , line : 344usize , placeholders : & ["__CLASS__"] , exception : Some ("BadMethodCallException") , regex : "^Cannot unserialize (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/polyfill-php80/Php80.php" , line : 63usize , placeholders : & ["sprintf('Argument 1 passed to get_resource_id() must be of the type resource, %s given', get_debug_type($res))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/polyfill-intl-idn/Idn.php" , line : 584usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid input$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/polyfill-intl-idn/Idn.php" , line : 600usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid input$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/polyfill-intl-idn/Idn.php" , line : 606usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid input$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/polyfill-intl-idn/Idn.php" , line : 610usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Integer overflow$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/polyfill-intl-idn/Idn.php" , line : 630usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Integer overflow$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/polyfill-intl-idn/Idn.php" , line : 640usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Integer overflow$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/polyfill-intl-idn/Idn.php" , line : 695usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Integer overflow$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/polyfill-intl-idn/Idn.php" , line : 703usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Integer overflow$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/polyfill-intl-normalizer/Normalizer.php" , line : 77usize , placeholders : & [] , exception : Some ("ValueError") , regex : "^normalizer_normalize\\(\\): Argument \\#2 \\(\\$form\\) must be a a valid normalization form$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/polyfill-intl-grapheme/Grapheme.php" , line : 74usize , placeholders : & [] , exception : Some ("ValueError") , regex : "^grapheme_extract\\(\\): Argument \\#3 \\(\\$type\\) must be one of GRAPHEME_EXTR_COUNT, GRAPHEME_EXTR_MAXBYTES, or GRAPHEME_EXTR_MAXCHARS$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/RequestStack.php" , line : 126usize , placeholders : & [] , exception : Some ("Symfony\\Component\\HttpFoundation\\Exception\\SessionNotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/HeaderBag.php" , line : 207usize , placeholders : & ["sprintf('The \"%s\" HTTP header is not parseable (%s).', $key, $value)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Cookie.php" , line : 96usize , placeholders : & ["sprintf('The cookie name \"%s\" contains invalid characters.', $name)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Cookie.php" , line : 100usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The cookie name cannot be empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Cookie.php" , line : 169usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The cookie expiration time is not valid\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Cookie.php" , line : 223usize , placeholders : & ["sprintf('The cookie name \"%s\" contains invalid characters.', $this->name)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Cookie.php" , line : 246usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The \"sameSite\" parameter value is not valid\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/UrlHelper.php" , line : 33usize , placeholders : & ["__METHOD__" , "get_debug_type($requestContext)"] , exception : Some ("TypeError") , regex : "^(.*): Argument \\#2 \\(\\$requestContext\\) must of type Symfony\\\\Component\\\\Routing\\\\RequestContextAwareInterface\\|Symfony\\\\Component\\\\Routing\\\\RequestContext\\|null, (.*) given\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/BinaryFileResponse.php" , line : 99usize , placeholders : & [] , exception : Some ("Symfony\\Component\\HttpFoundation\\File\\Exception\\FileException") , regex : "^File must be readable\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/BinaryFileResponse.php" , line : 137usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^The chunk size of a BinaryFileResponse cannot be less than 1 or greater than PHP_INT_MAX\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/BinaryFileResponse.php" , line : 380usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^The content cannot be set on a BinaryFileResponse instance\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/ParameterBag.php" , line : 51usize , placeholders : & ["sprintf('Unexpected value for parameter \"%s\": expecting \"array\", got \"%s\".', $key, get_debug_type($value))"] , exception : Some ("Symfony\\Component\\HttpFoundation\\Exception\\BadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/MockArraySessionStorage.php" , line : 123usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Cannot set session ID after the session has started\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/MockArraySessionStorage.php" , line : 151usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Trying to save a session that was not started yet or was already closed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/MockArraySessionStorage.php" , line : 189usize , placeholders : & ["sprintf('The SessionBagInterface \"%s\" is not registered.', $name)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/PhpBridgeSessionStorage.php" , line : 29usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^PHP extension \"session\" is required\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/NativeSessionStorage.php" , line : 103usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^PHP extension \"session\" is required\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/NativeSessionStorage.php" , line : 141usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Failed to start the session: already started by PHP\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/NativeSessionStorage.php" , line : 145usize , placeholders : & ["sprintf('Failed to start the session because headers have already been sent by \"%s\" at line %d.', $file, $line)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/NativeSessionStorage.php" , line : 186usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Failed to start the session\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/NativeSessionStorage.php" , line : 334usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Cannot register a bag when the session is already started\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/NativeSessionStorage.php" , line : 346usize , placeholders : & ["sprintf('The SessionBagInterface \"%s\" is not registered.', $name)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/NativeSessionStorage.php" , line : 462usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Must be instance of AbstractProxy; implement \\\\SessionHandlerInterface; or be null\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/MemcachedSessionHandler.php" , line : 50usize , placeholders : & ["sprintf('The following options are not supported \"%s\".', implode(', ', $diff))"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/SessionHandlerFactory.php" , line : 33usize , placeholders : & ["sprintf('Argument 1 passed to \"%s()\" must be a string or a connection object, \"%s\" given.', __METHOD__, get_debug_type($connection))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/SessionHandlerFactory.php" , line : 56usize , placeholders : & ["sprintf('Unsupported Connection: \"%s\".', get_debug_type($connection))"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/SessionHandlerFactory.php" , line : 66usize , placeholders : & ["sprintf('Unsupported DSN \"%s\". Try running \"composer require symfony/cache\".', $connection)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/SessionHandlerFactory.php" , line : 75usize , placeholders : & ["sprintf('Unsupported DSN \"%s\". Try running \"composer require doctrine/dbal\".', $connection)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/SessionHandlerFactory.php" , line : 100usize , placeholders : & ["sprintf('Unsupported Connection: \"%s\".', $connection)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/AbstractSessionHandler.php" , line : 131usize , placeholders : & ["sprintf('Session name cannot be empty, did you forget to call \"parent::open()\" in \"%s\"?.', static::class)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/NativeFileSessionHandler.php" , line : 41usize , placeholders : & ["sprintf('Invalid argument $savePath \\'%s\\'.', $savePath)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/NativeFileSessionHandler.php" , line : 49usize , placeholders : & ["sprintf('Session Storage was not able to create directory \"%s\".', $baseDir)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/MongoDbSessionHandler.php" , line : 74usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^You must provide the \"database\" and \"collection\" option for MongoDBSessionHandler\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/IdentityMarshaller.php" , line : 28usize , placeholders : & ["sprintf('%s accepts only string as data.', __METHOD__)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/RedisSessionHandler.php" , line : 57usize , placeholders : & ["sprintf('\"%s()\" expects parameter 1 to be Redis, RedisArray, RedisCluster or Predis\\ClientInterface, \"%s\" given.', __METHOD__, get_debug_type($redis))"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/RedisSessionHandler.php" , line : 61usize , placeholders : & ["sprintf('The following options are not supported \"%s\".', implode(', ', $diff))"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/StrictSessionHandler.php" , line : 27usize , placeholders : & ["sprintf('\"%s\" is already an instance of \"SessionUpdateTimestampHandlerInterface\", you cannot wrap it with \"%s\".', get_debug_type($handler), self::class)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/PdoSessionHandler.php" , line : 193usize , placeholders : & ["sprintf('\"%s\" requires PDO error mode attribute be set to throw Exceptions (i.e. $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION)).', __CLASS__)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/PdoSessionHandler.php" , line : 253usize , placeholders : & ["sprintf('Creating the session table is currently not implemented for PDO driver \"%s\".', $this->driver)"] , exception : Some ("DomainException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/PdoSessionHandler.php" , line : 493usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^URLs without scheme are not supported to configure the PdoSessionHandler\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/PdoSessionHandler.php" , line : 575usize , placeholders : & ["sprintf('The scheme \"%s\" is not supported by the PdoSessionHandler URL configuration. Pass a PDO DSN directly.', $params['scheme'])"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/PdoSessionHandler.php" , line : 687usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Failed to read session: INSERT reported a duplicate id but next SELECT did not return any data\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/PdoSessionHandler.php" , line : 774usize , placeholders : & [] , exception : Some ("DomainException") , regex : "^SQLite does not support advisory locks\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/PdoSessionHandler.php" , line : 776usize , placeholders : & ["sprintf('Advisory locks are currently not implemented for PDO driver \"%s\".', $this->driver)"] , exception : Some ("DomainException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Handler/PdoSessionHandler.php" , line : 819usize , placeholders : & ["sprintf('Transactional locks are currently not implemented for PDO driver \"%s\".', $this->driver)"] , exception : Some ("DomainException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php" , line : 89usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Cannot change the ID of an active session\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php" , line : 113usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Cannot change the name of an active session\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/MockFileSessionStorage.php" , line : 40usize , placeholders : & ["sprintf('Session Storage was not able to create directory \"%s\".', $savePath)"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Session/Storage/MockFileSessionStorage.php" , line : 90usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Trying to save a session that was not started yet or was already closed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/HeaderUtils.php" , line : 164usize , placeholders : & ["sprintf('The disposition must be either \"%s\" or \"%s\".', self::DISPOSITION_ATTACHMENT, self::DISPOSITION_INLINE)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/HeaderUtils.php" , line : 173usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The filename fallback must only contain ASCII characters\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/HeaderUtils.php" , line : 178usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The filename fallback cannot contain the \"%\" character\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/HeaderUtils.php" , line : 183usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The filename and the fallback cannot contain the \"/\" and \"\\\\\" characters\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/FileBag.php" , line : 49usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^An uploaded file must be an array or an instance of UploadedFile\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/JsonResponse.php" , line : 47usize , placeholders : & ["sprintf('\"%s\": If $json is set to true, argument $data must be a string or object implementing __toString(), \"%s\" given.', __METHOD__, get_debug_type($data))"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/JsonResponse.php" , line : 124usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The callback name is not valid\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/JsonResponse.php" , line : 171usize , placeholders : & ["json_last_error_msg()"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/IpUtils.php" , line : 135usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Unable to check Ipv6\\. Check that PHP was not compiled with option \"disable\\-ipv6\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Request.php" , line : 739usize , placeholders : & [] , exception : Some ("Symfony\\Component\\HttpFoundation\\Exception\\SessionNotFoundException") , regex : "^Session has not been set\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Request.php" , line : 1208usize , placeholders : & ["sprintf('Invalid Host \"%s\".', $host)"] , exception : Some ("Symfony\\Component\\HttpFoundation\\Exception\\SuspiciousOperationException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Request.php" , line : 1231usize , placeholders : & ["sprintf('Untrusted Host \"%s\".', $host)"] , exception : Some ("Symfony\\Component\\HttpFoundation\\Exception\\SuspiciousOperationException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Request.php" , line : 1290usize , placeholders : & ["sprintf('Invalid method override \"%s\".', $method)"] , exception : Some ("Symfony\\Component\\HttpFoundation\\Exception\\SuspiciousOperationException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Request.php" , line : 1583usize , placeholders : & [] , exception : Some ("Symfony\\Component\\HttpFoundation\\Exception\\JsonException") , regex : "^Request body is empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Request.php" , line : 1589usize , placeholders : & [] , exception : Some ("Symfony\\Component\\HttpFoundation\\Exception\\JsonException") , regex : "^Could not decode request body\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Request.php" , line : 1593usize , placeholders : & ["json_last_error_msg()"] , exception : Some ("Symfony\\Component\\HttpFoundation\\Exception\\JsonException") , regex : "^Could not decode request body: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Request.php" , line : 1597usize , placeholders : & ["sprintf('JSON content was expected to decode to an array, \"%s\" returned.', get_debug_type($content))"] , exception : Some ("Symfony\\Component\\HttpFoundation\\Exception\\JsonException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Request.php" , line : 2034usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^The Request factory must return an instance of Symfony\\\\Component\\\\HttpFoundation\\\\Request\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Request.php" , line : 2104usize , placeholders : & ["sprintf('The request has both a trusted \"%s\" header and a trusted \"%s\" header, conflicting with each other. You should either configure your proxy to remove one of them, or configure your project to distrust the offending one.', self::TRUSTED_HEADERS[self::HEADER_FORWARDED], self::TRUSTED_HEADERS[$type])"] , exception : Some ("Symfony\\Component\\HttpFoundation\\Exception\\ConflictingHeadersException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/StreamedResponse.php" , line : 106usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^The Response callback must not be null\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/StreamedResponse.php" , line : 124usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^The content cannot be set on a StreamedResponse instance\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/File/File.php" , line : 36usize , placeholders : & ["$path"] , exception : Some ("Symfony\\Component\\HttpFoundation\\File\\Exception\\FileNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/File/File.php" , line : 58usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^You cannot guess the extension as the Mime component is not installed\\. Try running \"composer require symfony/mime\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/File/File.php" , line : 78usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^You cannot guess the mime type as the Mime component is not installed\\. Try running \"composer require symfony/mime\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/File/File.php" , line : 102usize , placeholders : & ["sprintf('Could not move the file \"%s\" to \"%s\" (%s).', $this->getPathname(), $target, strip_tags($error))"] , exception : Some ("Symfony\\Component\\HttpFoundation\\File\\Exception\\FileException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/File/File.php" , line : 115usize , placeholders : & ["sprintf('Could not get the content of the file \"%s\".', $this->getPathname())"] , exception : Some ("Symfony\\Component\\HttpFoundation\\File\\Exception\\FileException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/File/File.php" , line : 128usize , placeholders : & ["sprintf('Unable to create the \"%s\" directory.', $directory)"] , exception : Some ("Symfony\\Component\\HttpFoundation\\File\\Exception\\FileException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/File/File.php" , line : 131usize , placeholders : & ["sprintf('Unable to write in the \"%s\" directory.', $directory)"] , exception : Some ("Symfony\\Component\\HttpFoundation\\File\\Exception\\FileException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/File/UploadedFile.php" , line : 137usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^You cannot guess the extension as the Mime component is not installed\\. Try running \"composer require symfony/mime\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/File/UploadedFile.php" , line : 191usize , placeholders : & ["sprintf('Could not move the file \"%s\" to \"%s\" (%s).', $this->getPathname(), $target, strip_tags($error))"] , exception : Some ("Symfony\\Component\\HttpFoundation\\File\\Exception\\FileException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/File/UploadedFile.php" , line : 201usize , placeholders : & ["$this->getErrorMessage()"] , exception : Some ("Symfony\\Component\\HttpFoundation\\File\\Exception\\IniSizeFileException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/File/UploadedFile.php" , line : 203usize , placeholders : & ["$this->getErrorMessage()"] , exception : Some ("Symfony\\Component\\HttpFoundation\\File\\Exception\\FormSizeFileException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/File/UploadedFile.php" , line : 205usize , placeholders : & ["$this->getErrorMessage()"] , exception : Some ("Symfony\\Component\\HttpFoundation\\File\\Exception\\PartialFileException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/File/UploadedFile.php" , line : 207usize , placeholders : & ["$this->getErrorMessage()"] , exception : Some ("Symfony\\Component\\HttpFoundation\\File\\Exception\\NoFileException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/File/UploadedFile.php" , line : 209usize , placeholders : & ["$this->getErrorMessage()"] , exception : Some ("Symfony\\Component\\HttpFoundation\\File\\Exception\\CannotWriteFileException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/File/UploadedFile.php" , line : 211usize , placeholders : & ["$this->getErrorMessage()"] , exception : Some ("Symfony\\Component\\HttpFoundation\\File\\Exception\\NoTmpDirFileException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/File/UploadedFile.php" , line : 213usize , placeholders : & ["$this->getErrorMessage()"] , exception : Some ("Symfony\\Component\\HttpFoundation\\File\\Exception\\ExtensionFileException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/File/UploadedFile.php" , line : 216usize , placeholders : & ["$this->getErrorMessage()"] , exception : Some ("Symfony\\Component\\HttpFoundation\\File\\Exception\\FileException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/ResponseHeaderBag.php" , line : 220usize , placeholders : & ["sprintf('Format \"%s\" invalid (%s).', $format, implode(', ', [self::COOKIES_FLAT, self::COOKIES_ARRAY]))"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/ExpressionRequestMatcher.php" , line : 35usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Unable to match the request as the expression language is not available\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/RedirectResponse.php" , line : 42usize , placeholders : & ["sprintf('The HTTP status code is not a redirect (\"%s\" given).', $status)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/RedirectResponse.php" , line : 86usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Cannot redirect to an empty URL\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Response.php" , line : 470usize , placeholders : & ["sprintf('The HTTP status code \"%s\" is not valid.', $code)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/symfony/http-foundation/Response.php" , line : 956usize , placeholders : & ["sprintf('Response does not support the following options: \"%s\".', implode('\", \"', $diff))"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/giggsey/libphonenumber-for-php-lite/src/PhoneNumberUtil.php" , line : 1510usize , placeholders : & ["NumberParseException::TOO_LONG"] , exception : Some ("libphonenumber\\NumberParseException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/giggsey/libphonenumber-for-php-lite/src/PhoneNumberUtil.php" , line : 1520usize , placeholders : & ["NumberParseException::NOT_A_NUMBER"] , exception : Some ("libphonenumber\\NumberParseException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/giggsey/libphonenumber-for-php-lite/src/PhoneNumberUtil.php" , line : 1529usize , placeholders : & ["NumberParseException::INVALID_COUNTRY_CODE"] , exception : Some ("libphonenumber\\NumberParseException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/giggsey/libphonenumber-for-php-lite/src/PhoneNumberUtil.php" , line : 1572usize , placeholders : & ["NumberParseException::INVALID_COUNTRY_CODE"] , exception : Some ("libphonenumber\\NumberParseException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/giggsey/libphonenumber-for-php-lite/src/PhoneNumberUtil.php" , line : 1578usize , placeholders : & ["$e->getErrorType()"] , exception : Some ("libphonenumber\\NumberParseException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/giggsey/libphonenumber-for-php-lite/src/PhoneNumberUtil.php" , line : 1600usize , placeholders : & ["NumberParseException::TOO_SHORT_NSN"] , exception : Some ("libphonenumber\\NumberParseException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/giggsey/libphonenumber-for-php-lite/src/PhoneNumberUtil.php" , line : 1624usize , placeholders : & ["NumberParseException::TOO_SHORT_NSN"] , exception : Some ("libphonenumber\\NumberParseException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/giggsey/libphonenumber-for-php-lite/src/PhoneNumberUtil.php" , line : 1630usize , placeholders : & ["NumberParseException::TOO_LONG"] , exception : Some ("libphonenumber\\NumberParseException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/giggsey/libphonenumber-for-php-lite/src/PhoneNumberUtil.php" , line : 1738usize , placeholders : & ["NumberParseException::NOT_A_NUMBER"] , exception : Some ("libphonenumber\\NumberParseException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/giggsey/libphonenumber-for-php-lite/src/PhoneNumberUtil.php" , line : 1892usize , placeholders : & ["NumberParseException::TOO_SHORT_AFTER_IDD"] , exception : Some ("libphonenumber\\NumberParseException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/giggsey/libphonenumber-for-php-lite/src/PhoneNumberUtil.php" , line : 1906usize , placeholders : & ["NumberParseException::INVALID_COUNTRY_CODE"] , exception : Some ("libphonenumber\\NumberParseException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/giggsey/libphonenumber-for-php-lite/src/PhoneNumberUtil.php" , line : 2320usize , placeholders : & ["$regionCode"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid region code: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/giggsey/libphonenumber-for-php-lite/src/MultiFileMetadataSourceImpl.php" , line : 83usize , placeholders : & ["$fileName"] , exception : Some ("RuntimeException") , regex : "^missing metadata: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/giggsey/libphonenumber-for-php-lite/src/PhoneNumberMatch.php" , line : 29usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Start index must be >= 0\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/deepdiver1975/tarstreamer/src/TarStreamer.php" , line : 54usize , placeholders : & ["$encodedArchiveName" , "$headerFile" , "$headerLine"] , exception : Some ("Exception") , regex : "^Unable to send file (.*)\\. HTML Headers have already been sent from (.*) in line (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/deepdiver1975/tarstreamer/src/TarStreamer.php" , line : 58usize , placeholders : & ["$encodedArchiveName"] , exception : Some ("Exception") , regex : "^Unable to send file (.*)\\. Output buffer already contains text \\(typically warnings or errors\\)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/scss.inc.php" , line : 4usize , placeholders : & [] , exception : Some ("Exception") , regex : "^scssphp requires PHP 5\\.6 or above$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/OutputStyle.php" , line : 41usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid output style$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/SourceMap/SourceMapGenerator.php" , line : 157usize , placeholders : & ["sprintf('The directory \"%s\" does not exist. Cannot save the source map.', $dir)"] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\CompilerException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/SourceMap/SourceMapGenerator.php" , line : 164usize , placeholders : & ["sprintf('Cannot save the source map to \"%s\"', $file)"] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\CompilerException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/SourceMap/SourceMapGenerator.php" , line : 230usize , placeholders : & ["json_last_error_msg()"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/ValueConverter.php" , line : 41usize , placeholders : & ["sprintf('Invalid value source \"%s\".', $source)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/ValueConverter.php" , line : 93usize , placeholders : & ["sprintf('Cannot convert the value of type \"%s\" to a Sass value.', gettype($value))"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Warn.php" , line : 79usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^The warning Reporter may only be called within a custom function or importer callback\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Cache.php" , line : 90usize , placeholders : & [] , exception : Some ("Exception") , regex : "^cacheDir not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Cache.php" , line : 98usize , placeholders : & [] , exception : Some ("Exception") , regex : "^prefix not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Cache.php" , line : 213usize , placeholders : & ["self::$cacheDir"] , exception : Some ("Exception") , regex : "^Cache directory doesn't exist: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Cache.php" , line : 217usize , placeholders : & ["self::$cacheDir"] , exception : Some ("Exception") , regex : "^Cache directory isn't writable: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 474usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Could not read the file content$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 539usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 596usize , placeholders : & ["$this->addLocationToMessage($e->getMessage())"] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\CompilerException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 796usize , placeholders : & ["$origin" , "$target" , "$target"] , exception : None , regex : "^\"(.*)\" failed to @extend \"(.*)\"\\. The selector \"(.*)\" was not found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 1987usize , placeholders : & ["$this->addLocationToMessage($e->getMessage())"] , exception : None , regex : "^Ignoring interpolation errors in multiline comments is deprecated and will be removed in ScssPhp 2\\.0\\. (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 1990usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^Ignoring interpolation errors in multiline comments is deprecated and will be removed in ScssPhp 2\\.0\\. (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 2044usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 2345usize , placeholders : & ["$msg"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 2415usize , placeholders : & [] , exception : None , regex : "^@return may only be used within a function$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 3142usize , placeholders : & [] , exception : None , regex : "^Parent selectors aren't allowed here\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 3149usize , placeholders : & [] , exception : None , regex : "^complex selectors may not be extended\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 3173usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 3307usize , placeholders : & ["$name"] , exception : None , regex : "^Undefined mixin (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 3366usize , placeholders : & ["$name"] , exception : None , regex : "^@mixin (.*)\\(\\) without parentEnv$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 3413usize , placeholders : & ["$fname" , "$line" , "$value"] , exception : None , regex : "^(.*):(.*) DEBUG: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 3423usize , placeholders : & ["$value" , "$line" , "$fname"] , exception : None , regex : "^(.*)\n         on line (.*) of (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 3433usize , placeholders : & ["$fname" , "$line" , "$value"] , exception : None , regex : "^File (.*) on line (.*) ERROR: (.*)\n$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 3436usize , placeholders : & ["$child[0]"] , exception : None , regex : "^unknown child type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 4243usize , placeholders : & [] , exception : None , regex : "^color: Can't take modulo by zero$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 4251usize , placeholders : & [] , exception : None , regex : "^color: Can't divide by zero$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 4264usize , placeholders : & ["$op"] , exception : None , regex : "^color: unknown op (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 4801usize , placeholders : & ["json_encode($value)"] , exception : None , regex : "^unknown value type: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 4856usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The argument is not a sass string\\. Did you forgot to use \"assertString\"\\?$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 5351usize , placeholders : & ["$name" , "($maxDepth <= 0 ? ' (infinite recursion)' : '')"] , exception : None , regex : "^Undefined variable \\$(.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 5589usize , placeholders : & ["sprintf('Invalid output style \"%s\".', $style)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 5764usize , placeholders : & [] , exception : None , regex : "^The Sass indented syntax is not implemented\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 5903usize , placeholders : & ["$url"] , exception : None , regex : "^`(.*)` file not found for @import$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 5952usize , placeholders : & ["implode(\"\\n\", $formattedPrettyPaths)"] , exception : None , regex : "^It's not clear which file to import\\. Found:\n(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 6114usize , placeholders : & ["...func_get_args()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 6180usize , placeholders : & [] , exception : None , regex : "^Error: Only %d arguments allowed in %s\\(\\), but %d were passed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 6193usize , placeholders : & [] , exception : None , regex : "^Error: %s\\(\\) argument%s %s missing\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 6259usize , placeholders : & [] , exception : None , regex : "^An @import loop has been found: %s imports %s$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 6296usize , placeholders : & ["$name"] , exception : None , regex : "^@function (.*)\\(\\) without parentEnv$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 6514usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The argument declaration is invalid\\. The rest argument must be the last one\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 6668usize , placeholders : & ["sprintf('Argument $%s was passed both by position and by name.', $originalName)"] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 6673usize , placeholders : & ["sprintf('Missing argument $%s', $originalName)"] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 6691usize , placeholders : & ["$message"] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 6696usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 6708usize , placeholders : & ["$message"] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 6753usize , placeholders : & ["sprintf('Duplicate named argument $%s.', $arg[0][1])"] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 6779usize , placeholders : & ["sprintf('Duplicate named argument $%s.', $name)"] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 6796usize , placeholders : & ["sprintf('Duplicate named argument $%s.', $name)"] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 6814usize , placeholders : & [] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^Positional arguments must come before keyword arguments\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 7310usize , placeholders : & [] , exception : None , regex : "^Expected %s to have no units or \"%%\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 7445usize , placeholders : & [] , exception : None , regex : "^expecting list, %s received$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 7467usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The argument is not a sass argument list\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 7777usize , placeholders : & ["$functionReference[0]"] , exception : None , regex : "^Function reference expected, got (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 7954usize , placeholders : & [] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^Only one positional argument is allowed\\. All other arguments must be passed by name\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 7979usize , placeholders : & ["$name" , "$number"] , exception : None , regex : "^(.*) Passing a number `(.*)` without unit % is deprecated\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 7980usize , placeholders : & ["$warning->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 8025usize , placeholders : & ["$message"] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 8033usize , placeholders : & ["sprintf('RGB parameters may not be passed along with %s parameters.', $hasWB ? 'HWB' : 'HSL')"] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 8037usize , placeholders : & [] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^HSL parameters may not be passed along with HWB parameters\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 8143usize , placeholders : & [] , exception : None , regex : "^Error: argument `\\$color` of `ie\\-hex\\-str\\(\\$color\\)` must be a color$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 8157usize , placeholders : & [] , exception : None , regex : "^Error: argument `\\$color` of `red\\(\\$color\\)` must be a color$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 8169usize , placeholders : & [] , exception : None , regex : "^Error: argument `\\$color` of `green\\(\\$color\\)` must be a color$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 8181usize , placeholders : & [] , exception : None , regex : "^Error: argument `\\$color` of `blue\\(\\$color\\)` must be a color$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 8280usize , placeholders : & [] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^Missing argument \\$lightness\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 8609usize , placeholders : & [] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^Only one argument may be passed to the plain\\-CSS invert\\(\\) function\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 8675usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 8756usize , placeholders : & [] , exception : None , regex : "^At least one argument must be passed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 8779usize , placeholders : & [] , exception : None , regex : "^At least one argument must be passed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 8842usize , placeholders : & [] , exception : None , regex : "^Invalid argument for \"n\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 9020usize , placeholders : & [] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^Expected \\$args to contain a key\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 9023usize , placeholders : & [] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^Expected \\$args to contain a value\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 9412usize , placeholders : & [] , exception : None , regex : "^Invalid argument\\(s\\) for \"comparable\"$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 9659usize , placeholders : & ["$n"] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^\\$limit: Must be greater than 0, was (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 9849usize , placeholders : & [] , exception : None , regex : "^Invalid super selector for isSuperSelector\\(\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 9853usize , placeholders : & [] , exception : None , regex : "^Invalid sub selector for isSuperSelector\\(\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 9953usize , placeholders : & [] , exception : None , regex : "^selector\\-append\\(\\) needs at least 1 argument$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 9978usize , placeholders : & [] , exception : None , regex : "^Invalid selector list in selector\\-append\\(\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 9985usize , placeholders : & [] , exception : None , regex : "^Invalid selector list in selector\\-append\\(\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 10025usize , placeholders : & [] , exception : None , regex : "^selector\\-extend\\(\\) invalid arguments$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 10046usize , placeholders : & [] , exception : None , regex : "^selector\\-replace\\(\\) invalid arguments$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 10075usize , placeholders : & [] , exception : None , regex : "^Can't extend complex selector\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 10113usize , placeholders : & [] , exception : None , regex : "^selector\\-nest\\(\\) needs at least 1 argument$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 10160usize , placeholders : & [] , exception : None , regex : "^selector\\-unify\\(\\) invalid arguments$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/3rdparty/scssphp/scssphp/src/Compiler.php" , line : 10455usize , placeholders : & [] , exception : None , regex : "^The \"scssphp\\-glob\" function is deprecated an will be removed in ScssPhp 2\\.0\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Node/Number.php" , line : 218usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Number is immutable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Node/Number.php" , line : 227usize , placeholders : & [] , exception : Some ("BadMethodCallException") , regex : "^Number is immutable$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Node/Number.php" , line : 357usize , placeholders : & ["sprintf(\n            'Incompatible units %s and %s.',\n            self::getUnitString($this->numeratorUnits, $this->denominatorUnits),\n            self::getUnitString($other->numeratorUnits, $other->denominatorUnits)\n        )"] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Node/Number.php" , line : 697usize , placeholders : & ["sprintf(\n                'Incompatible units %s and %s.',\n                self::getUnitString($this->numeratorUnits, $this->denominatorUnits),\n                self::getUnitString($numeratorUnits, $denominatorUnits)\n            )"] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Node/Number.php" , line : 719usize , placeholders : & ["sprintf(\n                'Incompatible units %s and %s.',\n                self::getUnitString($this->numeratorUnits, $this->denominatorUnits),\n                self::getUnitString($numeratorUnits, $denominatorUnits)\n            )"] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Node/Number.php" , line : 727usize , placeholders : & ["sprintf(\n                'Incompatible units %s and %s.',\n                self::getUnitString($this->numeratorUnits, $this->denominatorUnits),\n                self::getUnitString($numeratorUnits, $denominatorUnits)\n            )"] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\SassScriptException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Util.php" , line : 47usize , placeholders : & ["$name" , "$val"] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\RangeException") , regex : "^(.*) (.*) is not a number\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Util.php" , line : 62usize , placeholders : & ["$name" , "$val" , "$range->first" , "$range->last" , "$unit"] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\RangeException") , regex : "^(.*) (.*) must be between (.*) and (.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Util.php" , line : 124usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Either mbstring \\(recommended\\) or iconv is necessary to use Scssphp\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Util.php" , line : 161usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Either mbstring \\(recommended\\) or iconv is necessary to use Scssphp\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Util.php" , line : 182usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Either mbstring \\(recommended\\) or iconv is necessary to use Scssphp\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/scssphp/scssphp/src/Parser.php" , line : 278usize , placeholders : & ["$message"] , exception : Some ("ScssPhp\\ScssPhp\\Exception\\ParserException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/3rdparty/scssphp/scssphp/src/Parser.php" , line : 554usize , placeholders : & ["$file" , "$line" , "$column"] , exception : None , regex : "^The \"@scssphp\\-import\\-once\" directive is deprecated and will be removed in ScssPhp 2\\.0, in \"(.*)\", line (.*), column (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/3rdparty/scssphp/scssphp/src/Parser.php" , line : 1641usize , placeholders : & ["$file" , "$line" , "$column"] , exception : None , regex : "^Unterminated interpolations in multiline comments are deprecated and will be removed in ScssPhp 2\\.0, in \"(.*)\", line (.*), column (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/egulias/email-validator/src/Validation/MultipleValidationWithAnd.php" , line : 51usize , placeholders : & [] , exception : Some ("Egulias\\EmailValidator\\Validation\\Exception\\EmptyValidationList") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/egulias/email-validator/src/Validation/Extra/SpoofCheckValidation.php" , line : 21usize , placeholders : & ["sprintf('The %s class requires the Intl extension.', __CLASS__)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/egulias/email-validator/src/Validation/DNSGetRecordWrapper.php" , line : 16usize , placeholders : & ["$errorMessage"] , exception : Some ("RuntimeException") , regex : "^Unable to get DNS record for the host: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/egulias/email-validator/src/Validation/DNSCheckValidation.php" , line : 66usize , placeholders : & ["sprintf('The %s class requires the Intl extension.', __CLASS__)"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/egulias/email-validator/src/EmailLexer.php" , line : 203usize , placeholders : & ["$type"] , exception : Some ("UnexpectedValueException") , regex : "^(.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/stecman/symfony-console-completion/src/HookFactory.php" , line : 139usize , placeholders : & ["sprintf(\n                \"Cannot generate hook for unknown shell type '%s'. Available hooks are: %s\",\n                $type,\n                implode(', ', self::getShellTypes())\n            )"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/stecman/symfony-console-completion/src/CompletionHandler.php" , line : 106usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^A CompletionContext must be set before requesting completion\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/stecman/symfony-console-completion/src/CompletionCommand.php" , line : 208usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Could not read SHELL environment variable\\. Please specify your shell type using the \\-\\-shell\\-type option\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/stecman/symfony-console-completion/src/EnvironmentCompletionContext.php" , line : 27usize , placeholders : & ["$message"] , exception : Some ("RuntimeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/stecman/symfony-console-completion/src/EnvironmentCompletionContext.php" , line : 41usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Failed to read word breaks from environment; Environment var CMDLINE_WORDBREAKS not set$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigNumber.php" , line : 74usize , placeholders : & ["\\sprintf(\n                'The given value \"%s\" does not represent a valid number.',\n                $value\n            )"] , exception : Some ("Brick\\Math\\Exception\\NumberFormatException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigNumber.php" , line : 131usize , placeholders : & [] , exception : Some ("Brick\\Math\\Exception\\NumberFormatException") , regex : "^Exponent too large\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigNumber.php" , line : 223usize , placeholders : & ["__METHOD__"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)\\(\\) expects at least one value\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigNumber.php" , line : 257usize , placeholders : & ["__METHOD__"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)\\(\\) expects at least one value\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigNumber.php" , line : 290usize , placeholders : & ["__METHOD__"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)\\(\\) expects at least one value\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigDecimal.php" , line : 84usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The scale cannot be negative\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigDecimal.php" , line : 266usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Scale cannot be negative\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigDecimal.php" , line : 346usize , placeholders : & ["\\sprintf(\n                'The exponent %d is not in the range 0 to %d.',\n                $exponent,\n                Calculator::MAX_POWER\n            )"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigDecimal.php" , line : 457usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Scale cannot be negative\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigDecimal.php" , line : 465usize , placeholders : & [] , exception : Some ("Brick\\Math\\Exception\\NegativeNumberException") , regex : "^Cannot calculate the square root of a negative number\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigDecimal.php" , line : 782usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^unserialize\\(\\) is an internal function, it must not be called directly\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigRational.php" , line : 393usize , placeholders : & [] , exception : Some ("Brick\\Math\\Exception\\RoundingNecessaryException") , regex : "^This rational number cannot be represented as an integer value without rounding\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigRational.php" , line : 481usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^unserialize\\(\\) is an internal function, it must not be called directly\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigInteger.php" , line : 84usize , placeholders : & [] , exception : Some ("Brick\\Math\\Exception\\NumberFormatException") , regex : "^The number cannot be empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigInteger.php" , line : 88usize , placeholders : & ["\\sprintf('Base %d is not in range 2 to 36.', $base)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigInteger.php" , line : 102usize , placeholders : & [] , exception : Some ("Brick\\Math\\Exception\\NumberFormatException") , regex : "^The number cannot be empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigInteger.php" , line : 120usize , placeholders : & ["\\sprintf('\"%s\" is not a valid character in base %d.', $matches[0], $base)"] , exception : Some ("Brick\\Math\\Exception\\NumberFormatException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigInteger.php" , line : 151usize , placeholders : & [] , exception : Some ("Brick\\Math\\Exception\\NumberFormatException") , regex : "^The number cannot be empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigInteger.php" , line : 157usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The alphabet must contain at least 2 chars\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigInteger.php" , line : 193usize , placeholders : & [] , exception : Some ("Brick\\Math\\Exception\\NumberFormatException") , regex : "^The byte string must not be empty\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigInteger.php" , line : 234usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The number of bits cannot be negative\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigInteger.php" , line : 280usize , placeholders : & [] , exception : Some ("Brick\\Math\\Exception\\MathException") , regex : "^\\$min cannot be greater than \\$max\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigInteger.php" , line : 486usize , placeholders : & ["\\sprintf(\n                'The exponent %d is not in the range 0 to %d.',\n                $exponent,\n                Calculator::MAX_POWER\n            )"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigInteger.php" , line : 621usize , placeholders : & [] , exception : Some ("Brick\\Math\\Exception\\NegativeNumberException") , regex : "^Modulus must not be negative\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigInteger.php" , line : 631usize , placeholders : & [] , exception : Some ("Brick\\Math\\Exception\\MathException") , regex : "^Unable to compute the modInverse for the given modulus\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigInteger.php" , line : 656usize , placeholders : & [] , exception : Some ("Brick\\Math\\Exception\\NegativeNumberException") , regex : "^The operands cannot be negative\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigInteger.php" , line : 706usize , placeholders : & [] , exception : Some ("Brick\\Math\\Exception\\NegativeNumberException") , regex : "^Cannot calculate the square root of a negative number\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigInteger.php" , line : 916usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The bit to test cannot be negative\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigInteger.php" , line : 1016usize , placeholders : & ["\\sprintf('Base %d is out of range [2, 36]', $base)"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigInteger.php" , line : 1040usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^The alphabet must contain at least 2 chars\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigInteger.php" , line : 1044usize , placeholders : & ["__FUNCTION__"] , exception : Some ("Brick\\Math\\Exception\\NegativeNumberException") , regex : "^(.*)\\(\\) does not support negative numbers\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigInteger.php" , line : 1073usize , placeholders : & [] , exception : Some ("Brick\\Math\\Exception\\NegativeNumberException") , regex : "^Cannot convert a negative number to a byte string when \\$signed is false\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/BigInteger.php" , line : 1146usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^unserialize\\(\\) is an internal function, it must not be called directly\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/Internal/Calculator.php" , line : 558usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid rounding mode\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/Internal/Calculator.php" , line : 666usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid bitwise operator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/brick/math/src/Internal/Calculator/NativeCalculator.php" , line : 47usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^The platform is not 32\\-bit or 64\\-bit as expected\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/SqlitePlatform.php" , line : 845usize , placeholders : & [] , exception : Some ("Doctrine\\DBAL\\Exception") , regex : "^Sqlite platform requires for alter table the table diff with reference to original table schema$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/SqlitePlatform.php" , line : 959usize , placeholders : & ["sprintf(\n                'Incomplete or invalid index definition %s on table %s',\n                $name,\n                $table,\n            )"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/SqlitePlatform.php" , line : 995usize , placeholders : & [] , exception : Some ("Doctrine\\DBAL\\Exception") , regex : "^Sqlite platform does not support alter primary key\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/SqlitePlatform.php" , line : 1003usize , placeholders : & [] , exception : Some ("Doctrine\\DBAL\\Exception") , regex : "^Sqlite platform does not support alter foreign key\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/SqlitePlatform.php" , line : 1011usize , placeholders : & [] , exception : Some ("Doctrine\\DBAL\\Exception") , regex : "^Sqlite platform does not support alter foreign key\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/SqlitePlatform.php" , line : 1021usize , placeholders : & [] , exception : Some ("Doctrine\\DBAL\\Exception") , regex : "^Sqlite platform does not support alter constraint\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/SqlitePlatform.php" , line : 1065usize , placeholders : & [] , exception : Some ("Doctrine\\DBAL\\Exception") , regex : "^Sqlite platform requires for alter table the table diff with reference to original table schema$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/AbstractPlatform.php" , line : 452usize , placeholders : & ["$dbType" , "static::class"] , exception : Some ("Doctrine\\DBAL\\Exception") , regex : "^Unknown database type (.*) requested, (.*) may not support it\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/AbstractPlatform.php" , line : 1881usize , placeholders : & ["__METHOD__" , "Table::class"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)\\(\\) expects \\$table parameter to be string or (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/AbstractPlatform.php" , line : 1901usize , placeholders : & [] , exception : Some ("UnexpectedValueException") , regex : "^Default implementation of DROP TABLE was overridden with NULL$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/AbstractPlatform.php" , line : 1956usize , placeholders : & ["__METHOD__" , "Index::class"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)\\(\\) expects \\$index parameter to be string or (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/AbstractPlatform.php" , line : 2066usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Second argument of AbstractPlatform::getCreateTableSQL\\(\\) has to be integer\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/AbstractPlatform.php" , line : 2483usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Can only create primary or unique constraints, no common indexes with getCreateConstraintSQL\\(\\)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/AbstractPlatform.php" , line : 2527usize , placeholders : & ["sprintf(\n                'Incomplete or invalid index definition %s on table %s',\n                $name,\n                $table,\n            )"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/AbstractPlatform.php" , line : 3212usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Incomplete definition\\. 'columns' required\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/AbstractPlatform.php" , line : 3239usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Incomplete definition\\. 'columns' required\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/AbstractPlatform.php" , line : 3414usize , placeholders : & ["$upper"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid foreign key action: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/AbstractPlatform.php" , line : 3436usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Incomplete definition\\. 'local' required\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/AbstractPlatform.php" , line : 3440usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Incomplete definition\\. 'foreign' required\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/AbstractPlatform.php" , line : 3444usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Incomplete definition\\. 'foreignTable' required\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/AbstractPlatform.php" , line : 3637usize , placeholders : & ["$level"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid isolation level:(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/AbstractPlatform.php" , line : 4382usize , placeholders : & ["sprintf(\n                'Offset must be a positive integer or zero, %d given',\n                $offset,\n            )"] , exception : Some ("Doctrine\\DBAL\\Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/AbstractPlatform.php" , line : 4389usize , placeholders : & ["sprintf(\n                'Platform %s does not support offset values in limit queries.',\n                $this->getName(),\n            )"] , exception : Some ("Doctrine\\DBAL\\Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/OraclePlatform.php" , line : 54usize , placeholders : & [] , exception : Some ("Doctrine\\DBAL\\Exception") , regex : "^Invalid Oracle identifier$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/OraclePlatform.php" , line : 843usize , placeholders : & ["$action"] , exception : Some ("InvalidArgumentException") , regex : "^Invalid foreign key action: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/SQLServerPlatform.php" , line : 275usize , placeholders : & ["__METHOD__" , "Index::class"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)\\(\\) expects \\$index parameter to be string or (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/SQLServerPlatform.php" , line : 290usize , placeholders : & ["__METHOD__" , "Table::class"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)\\(\\) expects \\$table parameter to be string or (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/SQLServerPlatform.php" , line : 457usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Incomplete column definition\\. 'default' required\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/DB2111Platform.php" , line : 32usize , placeholders : & ["sprintf('Limit must be a positive integer or zero, %d given', $limit)"] , exception : Some ("Doctrine\\DBAL\\Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/AbstractMySQLPlatform.php" , line : 1186usize , placeholders : & ["__METHOD__" , "Index::class"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)\\(\\) expects \\$index parameter to be string or (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/AbstractMySQLPlatform.php" , line : 1201usize , placeholders : & ["__METHOD__" , "Table::class"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)\\(\\) expects \\$table parameter to be string or (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/AbstractMySQLPlatform.php" , line : 1371usize , placeholders : & ["__METHOD__" , "Table::class"] , exception : Some ("InvalidArgumentException") , regex : "^(.*)\\(\\) expects \\$table parameter to be string or (.*)\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Platforms/PostgreSQLPlatform.php" , line : 929usize , placeholders : & ["sprintf(\"Unrecognized boolean literal '%s'\", $value)"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Result.php" , line : 283usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Only invocations with one argument are still supported by this legacy API\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Result.php" , line : 298usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Only fetch modes declared on Doctrine\\\\DBAL\\\\FetchMode are supported by legacy API\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Result.php" , line : 322usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Only invocations with one argument are still supported by this legacy API\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Result.php" , line : 337usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^Only fetch modes declared on Doctrine\\\\DBAL\\\\FetchMode are supported by legacy API\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/doctrine/dbal/src/Logging/Statement.php" , line : 92usize , placeholders : & ["{sql}" , "{params}" , "{types}"] , exception : None , regex : "^Executing statement: (.*) \\(parameters: (.*), types: (.*)Executing statement: \\{sql\\} \\(parameters: \\{params\\}, types: \\{types\\}\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/doctrine/dbal/src/Logging/Connection.php" , line : 27usize , placeholders : & [] , exception : None , regex : "^Disconnecting$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/doctrine/dbal/src/Logging/Connection.php" , line : 41usize , placeholders : & ["{sql}"] , exception : None , regex : "^Executing query: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/doctrine/dbal/src/Logging/Connection.php" , line : 48usize , placeholders : & ["{sql}"] , exception : None , regex : "^Executing statement: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/doctrine/dbal/src/Logging/Connection.php" , line : 58usize , placeholders : & [] , exception : None , regex : "^Beginning transaction$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/doctrine/dbal/src/Logging/Connection.php" , line : 68usize , placeholders : & [] , exception : None , regex : "^Committing transaction$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/3rdparty/doctrine/dbal/src/Logging/Connection.php" , line : 78usize , placeholders : & [] , exception : None , regex : "^Rolling back transaction$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/3rdparty/doctrine/dbal/src/Logging/Driver.php" , line : 31usize , placeholders : & ["{params}"] , exception : None , regex : "^Connecting with parameters (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Tools/Console/Command/RunSqlCommand.php" , line : 69usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Argument 'SQL' is required in order to execute this command correctly\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/3rdparty/doctrine/dbal/src/Tools/Console/Command/RunSqlCommand.php" , line : 75usize , placeholders : & [] , exception : None , regex : "^Parameter \"depth\" is deprecated and has no effect anymore\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Tools/Console/Command/ReservedWordsCommand.php" , line : 167usize , placeholders : & ["$keywordList" , "implode(', ', array_keys($this->keywordLists))"] , exception : Some ("InvalidArgumentException") , regex : "^There exists no keyword list with name '(.*)'\\. Known lists: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Tools/Console/ConnectionProvider/SingleConnectionProvider.php" , line : 31usize , placeholders : & ["sprintf('Connection with name \"%s\" does not exist.', $name)"] , exception : Some ("Doctrine\\DBAL\\Tools\\Console\\ConnectionNotFound") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Schema/Table.php" , line : 826usize , placeholders : & ["$this->getName()"] , exception : Some ("Doctrine\\DBAL\\Exception") , regex : "^Table (.*) has no primary key\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Schema/Comparator.php" , line : 52usize , placeholders : & ["sprintf('Unknown method \"%s\"', $method)"] , exception : Some ("BadMethodCallException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Schema/Comparator.php" , line : 62usize , placeholders : & ["sprintf('Unknown method \"%s\"', $method)"] , exception : Some ("BadMethodCallException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Connections/PrimaryReadReplicaConnection.php" , line : 113usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^primary or replica configuration missing$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Connections/PrimaryReadReplicaConnection.php" , line : 117usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^You have to configure at least one replica\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Connections/PrimaryReadReplicaConnection.php" , line : 149usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Passing a connection name as first argument is not supported anymore\\. Use ensureConnectedToPrimary\\(\\)/ensureConnectedToReplica\\(\\) instead\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Connections/PrimaryReadReplicaConnection.php" , line : 164usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^Invalid option to connect\\(\\), only primary or replica allowed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Driver/SQLite3/Driver.php" , line : 23usize , placeholders : & [] , exception : Some ("Doctrine\\DBAL\\Driver\\SQLite3\\Exception") , regex : "^Invalid connection settings: specifying both parameters \"path\" and \"memory\" is ambiguous\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Driver/SQLite3/Driver.php" , line : 32usize , placeholders : & [] , exception : Some ("Doctrine\\DBAL\\Driver\\SQLite3\\Exception") , regex : "^Invalid connection settings: specify either the \"path\" or the \"memory\" parameter for SQLite3\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Driver/Middleware/AbstractConnectionMiddleware.php" , line : 95usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^The underlying connection is not a ServerInfoAwareConnection$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Driver/Middleware/AbstractConnectionMiddleware.php" , line : 105usize , placeholders : & ["sprintf(\n                'The driver connection %s does not support accessing the native connection.',\n                get_class($this->wrappedConnection),\n            )"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Driver/PgSQL/Driver.php" , line : 33usize , placeholders : & ["$message"] , exception : Some ("ErrorException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Driver/PgSQL/Driver.php" , line : 40usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Doctrine\\DBAL\\Driver\\PgSQL\\Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Driver/PgSQL/Driver.php" , line : 46usize , placeholders : & [] , exception : Some ("Doctrine\\DBAL\\Driver\\PgSQL\\Exception") , regex : "^Unable to connect to Postgres server\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Driver/PgSQL/Result.php" , line : 44usize , placeholders : & ["sprintf(\n                'Expected result to be a resource or an instance of %s, got %s.',\n                PgSqlResult::class,\n                is_object($result) ? get_class($result) : gettype($result),\n            )"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Driver/PgSQL/Statement.php" , line : 53usize , placeholders : & ["sprintf(\n                'Expected connection to be a resource or an instance of %s, got %s.',\n                PgSqlConnection::class,\n                is_object($connection) ? get_class($connection) : gettype($connection),\n            )"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Driver/PgSQL/Statement.php" , line : 165usize , placeholders : & ["pg_last_error($this->connection)"] , exception : Some ("Doctrine\\DBAL\\Driver\\PgSQL\\Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Driver/PgSQL/Connection.php" , line : 40usize , placeholders : & ["sprintf(\n                'Expected connection to be a resource or an instance of %s, got %s.',\n                PgSqlConnection::class,\n                is_object($connection) ? get_class($connection) : gettype($connection),\n            )"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Driver/PgSQL/Connection.php" , line : 67usize , placeholders : & ["pg_last_error($this->connection)"] , exception : Some ("Doctrine\\DBAL\\Driver\\PgSQL\\Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Driver/PgSQL/Connection.php" , line : 83usize , placeholders : & ["pg_last_error($this->connection)"] , exception : Some ("Doctrine\\DBAL\\Driver\\PgSQL\\Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/DriverManager.php" , line : 269usize , placeholders : & [] , exception : Some ("Doctrine\\DBAL\\Exception") , regex : "^Malformed parameter \"url\"\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Id/TableGenerator.php" , line : 81usize , placeholders : & [] , exception : Some ("Doctrine\\DBAL\\Exception") , regex : "^Cannot use TableGenerator with SQLite\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Id/TableGenerator.php" , line : 146usize , placeholders : & [] , exception : Some ("Doctrine\\DBAL\\Exception") , regex : "^Race\\-condition detected while updating sequence\\. Aborting generation$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Id/TableGenerator.php" , line : 160usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Doctrine\\DBAL\\Exception") , regex : "^Error occurred while generating ID with TableGenerator, aborted generation: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Connection.php" , line : 1670usize , placeholders : & ["sprintf(\n                'The driver connection %s does not support accessing the native connection.',\n                get_class($this->_conn),\n            )"] , exception : Some ("LogicException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/dbal/src/Cache/QueryCacheProfile.php" , line : 57usize , placeholders : & ["sprintf(\n                '$resultCache: Expected either null or an instance of %s or %s, got %s.',\n                CacheItemPoolInterface::class,\n                Cache::class,\n                get_class($resultCache),\n            )"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Notice , path : "/3rdparty/doctrine/deprecations/lib/Doctrine/Deprecations/Deprecation.php" , line : 193usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/cache/lib/Doctrine/Common/Cache/Psr6/CacheItem.php" , line : 81usize , placeholders : & ["sprintf(\n                'Expected $expiration to be an instance of DateTimeInterface or null, got %s',\n                is_object($expiration) ? get_class($expiration) : gettype($expiration)\n            )"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/cache/lib/Doctrine/Common/Cache/Psr6/CacheItem.php" , line : 102usize , placeholders : & ["sprintf(\n                'Expected $time to be either an integer, an instance of DateInterval or null, got %s',\n                is_object($time) ? get_class($time) : gettype($time)\n            )"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/cache/lib/Doctrine/Common/Cache/Psr6/TypedCacheItem.php" , line : 62usize , placeholders : & ["sprintf(\n                'Expected $expiration to be an instance of DateTimeInterface or null, got %s',\n                get_debug_type($expiration)\n            )"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/cache/lib/Doctrine/Common/Cache/Psr6/TypedCacheItem.php" , line : 83usize , placeholders : & ["sprintf(\n                'Expected $time to be either an integer, an instance of DateInterval or null, got %s',\n                get_debug_type($time)\n            )"] , exception : Some ("TypeError") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/cache/lib/Doctrine/Common/Cache/Psr6/CacheAdapter.php" , line : 257usize , placeholders : & ["sprintf('Cache key must be string, \"%s\" given.', is_object($key) ? get_class($key) : gettype($key))"] , exception : Some ("Doctrine\\Common\\Cache\\Psr6\\InvalidArgument") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/cache/lib/Doctrine/Common/Cache/Psr6/CacheAdapter.php" , line : 261usize , placeholders : & [] , exception : Some ("Doctrine\\Common\\Cache\\Psr6\\InvalidArgument") , regex : "^Cache key length must be greater than zero\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/3rdparty/doctrine/cache/lib/Doctrine/Common/Cache/Psr6/CacheAdapter.php" , line : 265usize , placeholders : & ["sprintf('Cache key \"%s\" contains reserved characters \"%s\".', $key, self::RESERVED_CHARACTERS)"] , exception : Some ("Doctrine\\Common\\Cache\\Psr6\\InvalidArgument") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/cron.php" , line : 61usize , placeholders : & [] , exception : None , regex : "^Update required, skipping cron$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/cron.php" , line : 68usize , placeholders : & [] , exception : None , regex : "^We are in maintenance mode, skipping cron$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/cron.php" , line : 170usize , placeholders : & ["$jobDetails"] , exception : None , regex : "^CLI cron call has selected job (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Unknown , path : "/cron.php" , line : 193usize , placeholders : & ["$logLevel"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/cron.php" , line : 201usize , placeholders : & ["$jobDetails" , "Util::humanFileSize($memoryAfter)" , "Util::humanFileSize($memoryBefore)"] , exception : None , regex : "^Used memory grew by more than 10 MB when executing job (.*): (.*) \\(before: (.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/cron.php" , line : 204usize , placeholders : & ["$jobDetails" , "Util::humanFileSize($memoryPeakAfter)" , "Util::humanFileSize($memoryPeakBefore)"] , exception : None , regex : "^Cron job used more than 300 MB of ram after executing job (.*): (.*) \\(before: (.*)\\)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/cron.php" , line : 229usize , placeholders : & ["strval($job->getId())"] , exception : None , regex : "^WebCron call has selected job with ID (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/cron.php" , line : 242usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/cron.php" , line : 249usize , placeholders : & ["$ex->getMessage()"] , exception : None , regex : "^(.*)$" , },
];

