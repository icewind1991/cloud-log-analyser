pub const STATEMENTS: &[crate::LoggingStatement] = &[

	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/composer/InstalledVersions.php" , line : 161usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/composer/InstalledVersions.php" , line : 182usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/composer/InstalledVersions.php" , line : 203usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/composer/InstalledVersions.php" , line : 224usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/composer/InstalledVersions.php" , line : 241usize , placeholders : & ["$packageName"] , exception : Some ("OutOfBoundsException") , regex : "^Package \"(.*)\" is not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/composer/ClassLoader.php" , line : 250usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/composer/ClassLoader.php" , line : 305usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^A non\\-empty PSR\\-4 prefix must end with a namespace separator\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Entity/JsonPointer.php" , line : 40usize , placeholders : & [] , exception : Some ("JsonSchema\\Exception\\InvalidArgumentException") , regex : "^Ref value must be a string$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Uri/Retrievers/Curl.php" , line : 28usize , placeholders : & [] , exception : Some ("JsonSchema\\Exception\\RuntimeException") , regex : "^cURL not installed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Uri/Retrievers/Curl.php" , line : 48usize , placeholders : & [] , exception : Some ("JsonSchema\\Exception\\ResourceNotFoundException") , regex : "^JSON schema not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Uri/Retrievers/PredefinedArray.php" , line : 48usize , placeholders : & ["sprintf(\n                'The JSON schema \"%s\" was not found.',\n                $uri\n            )"] , exception : Some ("JsonSchema\\Exception\\ResourceNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Uri/Retrievers/FileGetContents.php" , line : 38usize , placeholders : & ["$errorMessage"] , exception : Some ("JsonSchema\\Exception\\ResourceNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Uri/Retrievers/FileGetContents.php" , line : 42usize , placeholders : & ["$uri"] , exception : Some ("JsonSchema\\Exception\\ResourceNotFoundException") , regex : "^JSON schema not found at (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Uri/Retrievers/FileGetContents.php" , line : 48usize , placeholders : & ["$uri"] , exception : Some ("JsonSchema\\Exception\\ResourceNotFoundException") , regex : "^JSON schema not found at (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Uri/UriResolver.php" , line : 140usize , placeholders : & ["sprintf(\"Unable to resolve URI '%s' from base '%s'\", $relativePath, $basePath)"] , exception : Some ("JsonSchema\\Exception\\UriResolverException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Uri/UriRetriever.php" , line : 92usize , placeholders : & ["sprintf('Media type %s expected', Validator::SCHEMA_MEDIA_TYPE)"] , exception : Some ("JsonSchema\\Exception\\InvalidSchemaMediaTypeException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Uri/UriRetriever.php" , line : 143usize , placeholders : & ["$parsed['fragment']" , "$uri"] , exception : Some ("JsonSchema\\Exception\\ResourceNotFoundException") , regex : "^Fragment \"(.*)\" not found in (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Uri/UriRetriever.php" , line : 150usize , placeholders : & ["$pathElement" , "$uri"] , exception : Some ("JsonSchema\\Exception\\ResourceNotFoundException") , regex : "^Fragment part \"(.*)\" is no object  in (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Uri/UriRetriever.php" , line : 213usize , placeholders : & ["$error"] , exception : Some ("JsonSchema\\Exception\\JsonDecodingException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Constraints/BaseConstraint.php" , line : 57usize , placeholders : & ["sprintf('Error validating %s: %s', $error['pointer'], $error['message'])"] , exception : Some ("JsonSchema\\Exception\\ValidationException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Constraints/BaseConstraint.php" , line : 143usize , placeholders : & ["$message"] , exception : Some ("JsonSchema\\Exception\\InvalidArgumentException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Constraints/Factory.php" , line : 168usize , placeholders : & ["$name"] , exception : Some ("JsonSchema\\Exception\\InvalidArgumentException") , regex : "^Unknown constraint (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Constraints/Factory.php" , line : 172usize , placeholders : & ["$name"] , exception : Some ("JsonSchema\\Exception\\InvalidArgumentException") , regex : "^Invalid class (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Constraints/Factory.php" , line : 191usize , placeholders : & ["$constraintName"] , exception : Some ("JsonSchema\\Exception\\InvalidArgumentException") , regex : "^Unknown constraint (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Constraints/SchemaConstraint.php" , line : 40usize , placeholders : & [] , exception : Some ("JsonSchema\\Exception\\InvalidArgumentException") , regex : "^no schema found to verify against$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Constraints/SchemaConstraint.php" , line : 52usize , placeholders : & [] , exception : Some ("JsonSchema\\Exception\\RuntimeException") , regex : "^Cannot validate the schema of a non\\-object$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Constraints/SchemaConstraint.php" , line : 79usize , placeholders : & [] , exception : Some ("JsonSchema\\Exception\\InvalidSchemaException") , regex : "^Schema did not pass validation$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Constraints/TypeConstraint.php" , line : 138usize , placeholders : & ["sprintf(\n                    'No wording for %s available, expected wordings are: [%s]',\n                    var_export($type, true),\n                    implode(', ', array_filter(self::$wording)))"] , exception : Some ("UnexpectedValueException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/Constraints/TypeConstraint.php" , line : 214usize , placeholders : & ["(is_object($value) ? 'object' : $value)" , "$type"] , exception : Some ("JsonSchema\\Exception\\InvalidArgumentException") , regex : "^(.*) is an invalid type for (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/SchemaStorage.php" , line : 131usize , placeholders : & ["sprintf(\n                \"Could not resolve fragment '%s': no file is defined\",\n                $jsonPointer->getPropertyPathAsString()\n            )"] , exception : Some ("JsonSchema\\Exception\\UnresolvableJsonPointerException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/vendor/justinrainbow/json-schema/src/JsonSchema/SchemaStorage.php" , line : 145usize , placeholders : & ["sprintf(\n                    'File: %s is found, but could not resolve fragment: %s',\n                    $jsonPointer->getFilename(),\n                    $jsonPointer->getPropertyPathAsString()\n                )"] , exception : Some ("JsonSchema\\Exception\\UnresolvableJsonPointerException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/DAV/Calendar.php" , line : 81usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Setting ACL is not supported on this node$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/DAV/Calendar.php" , line : 114usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Creating a new entry is not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/DAV/Calendar.php" , line : 129usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Node not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/DAV/Calendar.php" , line : 171usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Deleting an entry is not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/DAV/Calendar.php" , line : 192usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^no permission to change the displayname$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/DAV/Calendar.php" , line : 201usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^no permission to change the calendar color$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/DAV/Calendar.php" , line : 205usize , placeholders : & [] , exception : Some ("Sabre\\VObject\\InvalidDataException") , regex : "^No valid color provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/DAV/CalendarObject.php" , line : 66usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^Setting ACL is not supported on this node$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/DAV/CalendarObject.php" , line : 74usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^This calendar\\-object is read\\-only$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/DAV/CalendarObject.php" , line : 96usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^This calendar\\-object is read\\-only$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/DAV/CalendarObject.php" , line : 104usize , placeholders : & [] , exception : Some ("Sabre\\DAV\\Exception\\Forbidden") , regex : "^This calendar\\-object is read\\-only$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/DAV/DeckCalendarBackend.php" , line : 69usize , placeholders : & ["$id"] , exception : Some ("Sabre\\DAV\\Exception\\NotFound") , regex : "^Board with id (.*) not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Validators/BaseValidator.php" , line : 61usize , placeholders : & ["$this->getErrorMessage($rule, $field, $parameter)"] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Validators/BaseValidator.php" , line : 66usize , placeholders : & ["$field" , "str_replace(\"_\", \" \", $rule)"] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^(.*) must be provided and must be (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Validators/BaseValidator.php" , line : 74usize , placeholders : & ["$field"] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^(.*) must be provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Validators/BaseValidator.php" , line : 133usize , placeholders : & ["json_encode($limit)"] , exception : Some ("Exception") , regex : "^Validation rule max requires at least 1 parameter\\. (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Validators/BaseValidator.php" , line : 143usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Validation rule max requires at least 1 parameter\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/Listeners/LiveUpdateListener.php" , line : 112usize , placeholders : & [] , exception : None , regex : "^Error when handling live update event$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/Listeners/FullTextSearchEventListener.php" , line : 105usize , placeholders : & [] , exception : None , regex : "^Error when handling deck full text search event$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Controller/BoardApiController.php" , line : 72usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Invalid If\\-Modified\\-Since header provided\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Controller/StackApiController.php" , line : 67usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Invalid If\\-Modified\\-Since header provided\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Collaboration/Resources/ResourceProviderCard.php" , line : 80usize , placeholders : & [] , exception : Some ("OCP\\Collaboration\\Resources\\ResourceException") , regex : "^No card found for resource$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Collaboration/Resources/ResourceProviderCard.php" , line : 82usize , placeholders : & [] , exception : Some ("OCP\\Collaboration\\Resources\\ResourceException") , regex : "^No unique card found for resource, this should never happen$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/Migration/DeletedCircleCleanup.php" , line : 32usize , placeholders : & ["$acl->getParticipant()"] , exception : None , regex : "^Removed circle with id (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Db/AssignmentMapper.php" , line : 114usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NotFoundException") , regex : "^No origin found for assignment$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/Db/BoardMapper.php" , line : 503usize , placeholders : & ["$acl->getId()" , "$acl->getParticipant()"] , exception : None , regex : "^User (.*) not found when mapping acl (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/Db/BoardMapper.php" , line : 511usize , placeholders : & ["$acl->getId()" , "$acl->getParticipant()"] , exception : None , regex : "^Group (.*) not found when mapping acl (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/Db/BoardMapper.php" , line : 524usize , placeholders : & [] , exception : None , regex : "^Failed to get circle details when building ACL$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Warn , path : "/lib/Db/BoardMapper.php" , line : 528usize , placeholders : & ["$acl->getId()"] , exception : None , regex : "^Unknown permission type for mapping acl (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Db/RelationalEntity.php" , line : 126usize , placeholders : & [] , exception : Some ("Exception") , regex : "^resolver must return an instance of RelationalObject$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Db/RelationalObject.php" , line : 67usize , placeholders : & ["get_class($this->getObject())"] , exception : Some ("Exception") , regex : "^jsonSerialize is not implemented on (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Db/SessionMapper.php" , line : 49usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\Db\\DoesNotExistException") , regex : "^Session is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Db/SessionMapper.php" , line : 53usize , placeholders : & [] , exception : Some ("OCP\\AppFramework\\Db\\DoesNotExistException") , regex : "^Session is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/Service/FilesAppService.php" , line : 98usize , placeholders : & ["$share->getId()"] , exception : None , regex : "^Unable to find node for share with ID (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/FilesAppService.php" , line : 167usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^File not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/FilesAppService.php" , line : 171usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^File not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/FilesAppService.php" , line : 201usize , placeholders : & [] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^No target folder found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/FilesAppService.php" , line : 208usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Could not read file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/FilesAppService.php" , line : 249usize , placeholders : & ["$error"] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/FilesAppService.php" , line : 263usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Could not read file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/FilesAppService.php" , line : 291usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^No permission to remove the attachment from the card$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/FilesAppService.php" , line : 299usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Not implemented$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/FilesAppService.php" , line : 309usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^No permission to access the attachment from the card$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/FilesAppService.php" , line : 313usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^No permission to access the attachment from the card$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CommentService.php" , line : 61usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^A valid card id must be provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CommentService.php" , line : 91usize , placeholders : & [] , exception : Some ("OCP\\Comments\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CommentService.php" , line : 94usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NotFoundException") , regex : "^No comment found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CommentService.php" , line : 127usize , placeholders : & [] , exception : Some ("OCP\\Comments\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CommentService.php" , line : 130usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^Invalid parent id: The parent comment was not found or belongs to a different card$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CommentService.php" , line : 142usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^Invalid input values$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CommentService.php" , line : 145usize , placeholders : & ["$msg" , "IComment::MAX_MESSAGE_LENGTH"] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^(.*)(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CommentService.php" , line : 147usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NotFoundException") , regex : "^Could not create comment\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CommentService.php" , line : 153usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^A valid card id must be provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CommentService.php" , line : 156usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^A valid comment id must be provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CommentService.php" , line : 160usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^Only authors are allowed to edit their comment\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CommentService.php" , line : 170usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^A valid card id must be provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CommentService.php" , line : 173usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^A valid comment id must be provided$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CommentService.php" , line : 180usize , placeholders : & [] , exception : Some ("OCP\\Comments\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CommentService.php" , line : 183usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NotFoundException") , regex : "^No comment found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CommentService.php" , line : 186usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^Only authors are allowed to edit their comment\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/Service/FileService.php" , line : 103usize , placeholders : & [] , exception : None , regex : "^Extending data for file attachment failed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/Service/FileService.php" , line : 106usize , placeholders : & [] , exception : None , regex : "^Extending data for file attachment failed$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/FileService.php" , line : 142usize , placeholders : & ["$error"] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/FileService.php" , line : 159usize , placeholders : & [] , exception : Some ("OCA\\Deck\\Exceptions\\ConflictException") , regex : "^File already exists\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/FileService.php" , line : 165usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Could not read file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/FileService.php" , line : 188usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Could not read file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/FileService.php" , line : 219usize , placeholders : & [] , exception : Some ("Exception") , regex : "^no instance id!$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/Systems/TrelloJsonService.php" , line : 86usize , placeholders : & ["$trelloUid"] , exception : Some ("LogicException") , regex : "^Trello user (.*) not found in property \"members\" of json data$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/Systems/TrelloJsonService.php" , line : 89usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^User on setting uidRelation is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/Systems/TrelloJsonService.php" , line : 94usize , placeholders : & ["$nextcloudUid"] , exception : Some ("LogicException") , regex : "^User on setting uidRelation not found: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/Systems/TrelloJsonService.php" , line : 208usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^Invalid name of board$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/Systems/DeckJsonService.php" , line : 68usize , placeholders : & [] , exception : Some ("LogicException") , regex : "^User on setting uidRelation is invalid$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/Systems/DeckJsonService.php" , line : 73usize , placeholders : & ["$nextcloudUid"] , exception : Some ("LogicException") , regex : "^User on setting uidRelation not found: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/Systems/DeckJsonService.php" , line : 142usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^Invalid name of board$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/Systems/TrelloApiService.php" , line : 159usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid board id to import$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/Systems/TrelloApiService.php" , line : 181usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid return of api$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Critical , path : "/lib/Service/Importer/Systems/TrelloApiService.php" , line : 183usize , placeholders : & ["$e->getMessage()"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/Systems/TrelloApiService.php" , line : 187usize , placeholders : & ["$e->getMessage()"] , exception : Some ("Exception") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/Systems/TrelloApiService.php" , line : 203usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid return of api$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/Service/Importer/BoardImportService.php" , line : 111usize , placeholders : & ["$message"] , exception : None , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/Service/Importer/BoardImportService.php" , line : 149usize , placeholders : & [] , exception : None , regex : "^Failed to import board$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/BoardImportService.php" , line : 150usize , placeholders : & ["$th->getMessage()"] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/BoardImportService.php" , line : 159usize , placeholders : & ["$this->getSystem()"] , exception : Some ("OCA\\Deck\\NotFoundException") , regex : "^Invalid system: (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/BoardImportService.php" , line : 207usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NotFoundException") , regex : "^System to import not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/BoardImportService.php" , line : 229usize , placeholders : & ["$board->getOwner()"] , exception : Some ("Exception") , regex : "^Target owner (.*) not found\\. Please provide a mapping through the import config\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/BoardImportService.php" , line : 359usize , placeholders : & [] , exception : Some ("OCP\\Comments\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/BoardImportService.php" , line : 362usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^Invalid parent id: The parent comment was not found or belongs to a different card$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/BoardImportService.php" , line : 369usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^Invalid input values$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/BoardImportService.php" , line : 371usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NotFoundException") , regex : "^Could not create comment\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/BoardImportService.php" , line : 396usize , placeholders : & [] , exception : Some ("OCA\\Deck\\Exceptions\\ConflictException") , regex : "^File already exists\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/BoardImportService.php" , line : 467usize , placeholders : & [] , exception : Some ("OCA\\Deck\\Exceptions\\ConflictException") , regex : "^Invalid config file$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/BoardImportService.php" , line : 480usize , placeholders : & ["$this->getConfig('owner')->getUID()"] , exception : Some ("LogicException") , regex : "^Owner \"(.*)\" not found on Nextcloud\\. Check setting json\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/BoardImportCommandService.php" , line : 87usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NotFoundException") , regex : "^Config file not found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/BoardImportCommandService.php" , line : 91usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NotFoundException") , regex : "^Failed to parse JSON\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/BoardImportCommandService.php" , line : 107usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^config file not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/BoardImportCommandService.php" , line : 155usize , placeholders : & ["$data"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^Could not find file (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/Importer/BoardImportCommandService.php" , line : 179usize , placeholders : & [] , exception : Some ("RuntimeException") , regex : "^Data file not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/AttachmentService.php" , line : 116usize , placeholders : & ["$type"] , exception : Some ("OCA\\Deck\\InvalidAttachmentType") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/AttachmentService.php" , line : 127usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^card id must be a number$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/AttachmentService.php" , line : 167usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^card id must be a number$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/AttachmentService.php" , line : 216usize , placeholders : & ["$this->l10n->t('No data was provided to create an attachment.')"] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/AttachmentService.php" , line : 246usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/AttachmentService.php" , line : 253usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^Permission denied$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/AttachmentService.php" , line : 260usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/AttachmentService.php" , line : 288usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/AttachmentService.php" , line : 302usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/AttachmentService.php" , line : 309usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^Permission denied$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/AttachmentService.php" , line : 344usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NotFoundException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/AttachmentService.php" , line : 357usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^Permission denied$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/AttachmentService.php" , line : 382usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^Permission denied$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/AttachmentService.php" , line : 399usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^Restore is not allowed\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/PermissionService.php" , line : 163usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^Permission denied$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/PermissionService.php" , line : 172usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^Card is deleted$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/PermissionService.php" , line : 180usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^Permission denied$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/Service/PermissionService.php" , line : 233usize , placeholders : & [] , exception : None , regex : "^Member not found in circle that was accessed\\. This should not happen\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/Service/PermissionService.php" , line : 270usize , placeholders : & ["$board->getId()"] , exception : None , regex : "^No owner found for board (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/Service/PermissionService.php" , line : 279usize , placeholders : & ["$acl->getId()"] , exception : None , regex : "^No user found for acl rule (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/Service/PermissionService.php" , line : 287usize , placeholders : & ["$acl->getId()"] , exception : None , regex : "^No group found for acl rule (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/Service/PermissionService.php" , line : 299usize , placeholders : & ["$acl->getId()"] , exception : None , regex : "^No circle found for acl rule (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/Service/PermissionService.php" , line : 310usize , placeholders : & ["$member->getUserId()"] , exception : None , regex : "^No user found for circle member (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Info , path : "/lib/Service/PermissionService.php" , line : 316usize , placeholders : & [] , exception : None , regex : "^Member not found in circle that was accessed\\. This should not happen\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/Service/CardService.php" , line : 203usize , placeholders : & ["$boardId"] , exception : None , regex : "^Unable to check permission for a previously obtained board (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CardService.php" , line : 230usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This board is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CardService.php" , line : 260usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^card id must be a number$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CardService.php" , line : 265usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This board is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CardService.php" , line : 305usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This board is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CardService.php" , line : 309usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This card is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CardService.php" , line : 315usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^Operation not allowed\\. This card was deleted\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CardService.php" , line : 399usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This board is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CardService.php" , line : 403usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This card is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CardService.php" , line : 433usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This board is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CardService.php" , line : 438usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This card is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CardService.php" , line : 451usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This card is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CardService.php" , line : 489usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This board is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CardService.php" , line : 518usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This board is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CardService.php" , line : 543usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This board is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CardService.php" , line : 569usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This board is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CardService.php" , line : 597usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This board is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CardService.php" , line : 601usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This card is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CardService.php" , line : 626usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This board is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/CardService.php" , line : 630usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This card is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/StackService.php" , line : 121usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^stack id must be a number$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/StackService.php" , line : 152usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^boardId must be a number$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/Service/StackService.php" , line : 166usize , placeholders : & ["$boardId"] , exception : None , regex : "^Unable to check permission for a previously obtained board (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/StackService.php" , line : 189usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^board id must be a number$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/StackService.php" , line : 226usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This board is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/StackService.php" , line : 253usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^stack id must be a number$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/StackService.php" , line : 293usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This board is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/LabelService.php" , line : 71usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^label id must be a number$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/LabelService.php" , line : 96usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^title must be unique$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/LabelService.php" , line : 102usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This board is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/LabelService.php" , line : 126usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This board is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/LabelService.php" , line : 157usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^title must be unique$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/LabelService.php" , line : 163usize , placeholders : & [] , exception : Some ("OCA\\Deck\\StatusException") , regex : "^Operation not allowed\\. This board is archived\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/AssignmentService.php" , line : 125usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^Invalid type provided for assignemnt$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/AssignmentService.php" , line : 132usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^The user is already assigned to the card$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/AssignmentService.php" , line : 143usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^The user is not part of the board$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/AssignmentService.php" , line : 195usize , placeholders : & ["$userId"] , exception : Some ("OCA\\Deck\\NotFoundException") , regex : "^No assignment for (.*)found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/BoardService.php" , line : 258usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^Creating boards has been disabled for your account\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/BoardService.php" , line : 311usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^This board has already been deleted$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/BoardService.php" , line : 551usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^Creating boards has been disabled for your account\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/BoardService.php" , line : 640usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^board id must be a number$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/ConfigService.php" , line : 91usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^You must be admin to get the group limit$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/ConfigService.php" , line : 152usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^Must be logged in to set user config$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/ConfigService.php" , line : 160usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^You must be admin to set the group limit$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/ConfigService.php" , line : 179usize , placeholders : & [] , exception : Some ("OCA\\Deck\\BadRequestException") , regex : "^Board notification option must be one of: off, assigned, all$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/ConfigService.php" , line : 228usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^Must be logged in get the attachment folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Service/ConfigService.php" , line : 236usize , placeholders : & [] , exception : Some ("OCA\\Deck\\NoPermissionException") , regex : "^Must be logged in get the attachment folder$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/AppInfo/Application.php" , line : 125usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Cannot include autoload\\. Did you run install dependencies using composer\\?$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Sharing/DeckShareProvider.php" , line : 135usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\GenericShareException") , regex : "^Card not found$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Sharing/DeckShareProvider.php" , line : 141usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\GenericShareException") , regex : "^Already shared$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Sharing/DeckShareProvider.php" , line : 237usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Sharing/DeckShareProvider.php" , line : 606usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Sharing/DeckShareProvider.php" , line : 610usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Sharing/DeckShareProvider.php" , line : 861usize , placeholders : & [] , exception : Some ("OCP\\Share\\Exceptions\\ShareNotFound") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Sharing/ShareAPIHelper.php" , line : 61usize , placeholders : & ["$e->getMessage()"] , exception : Some ("OCP\\Files\\NotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Sharing/ShareAPIHelper.php" , line : 79usize , placeholders : & ["$this->l10n->t('Invalid date, date format must be YYYY-MM-DD')"] , exception : Some ("OCP\\AppFramework\\OCS\\OCSNotFoundException") , regex : "^(.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Sharing/ShareAPIHelper.php" , line : 99usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Invalid date\\. Format must be YYYY\\-MM\\-DD$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/Cron/ScheduledNotifications.php" , line : 68usize , placeholders : & ["$card->getId()"] , exception : None , regex : "^Could not create overdue notification for card with id (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/Cron/SessionsCleanup.php" , line : 51usize , placeholders : & [] , exception : None , regex : "^Run cleanup job for deck sessions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Debug , path : "/lib/Cron/SessionsCleanup.php" , line : 54usize , placeholders : & ["$removedSessions"] , exception : None , regex : "^Removed (.*) inactive sessions$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Activity/DeckProvider.php" , line : 82usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Activity/DeckProvider.php" , line : 115usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Activity/DeckProvider.php" , line : 132usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/Activity/ActivityManager.php" , line : 324usize , placeholders : & ["$subject"] , exception : None , regex : "^Could not create activity entry for (.*)\\. Entity not found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Error , path : "/lib/Activity/ActivityManager.php" , line : 327usize , placeholders : & ["$subject"] , exception : None , regex : "^Could not create activity entry for (.*)\\. Entity not found\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Activity/ActivityManager.php" , line : 400usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Unknown subject for activity\\.$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Activity/ActivityManager.php" , line : 435usize , placeholders : & [] , exception : Some ("Exception") , regex : "^Subject parameters too long$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Activity/ActivityManager.php" , line : 506usize , placeholders : & ["$className" , "$objectType"] , exception : Some ("InvalidArgumentException") , regex : "^No entity relation present for (.*) to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Activity/ActivityManager.php" , line : 521usize , placeholders : & ["$className" , "$objectType"] , exception : Some ("InvalidArgumentException") , regex : "^No entity relation present for (.*) to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Activity/ActivityManager.php" , line : 525usize , placeholders : & ["$className" , "$objectType"] , exception : Some ("InvalidArgumentException") , regex : "^No entity relation present for (.*) to (.*)$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Notification/Notifier.php" , line : 96usize , placeholders : & [] , exception : Some ("InvalidArgumentException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Notification/Notifier.php" , line : 107usize , placeholders : & [] , exception : Some ("OCP\\Notification\\AlreadyProcessedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Notification/Notifier.php" , line : 150usize , placeholders : & [] , exception : Some ("OCP\\Notification\\AlreadyProcessedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Notification/Notifier.php" , line : 182usize , placeholders : & [] , exception : Some ("OCP\\Notification\\AlreadyProcessedException") , regex : "^$" , },
	crate :: LoggingStatement { level : crate :: LogLevel :: Exception , path : "/lib/Notification/Notifier.php" , line : 220usize , placeholders : & [] , exception : Some ("OCP\\Notification\\AlreadyProcessedException") , regex : "^$" , },
];

